#include "libdef.any"

Main = 
{
     
   DEFAULT_PARAMETER_FOLDER Settings(
       NPARAM = 3,
       PARAM_1 = TrialNumber, 
       PARAM_2 = Rotation, PARAM_2_TYPE = AnyMat33,
       PARAM_3 = Name, PARAM_3_TYPE = AnyString
   ) = {
       Default.TrialNumber = 2;
       Default.Rotation = RotMat(pi/2,y);
       Default.Name = "Subject2";
   };
   
   
   // Parameters can now be overridden
   Settings.Rotation = RotMat(pi,y);
   Settings.Name = "Subject2_test";
   
   
   AnyFolder Test_GRID_XYZ = {
      AnyVector x_ = farr(0.0,1.0,2);
      AnyVector y_ = farr(0.0,1.0, 3);
      AnyVector z_ = farr(0.0, 1.0, 1);
      
      AnyMatrix grid = GRID_XYZ(x_,y_,z_); 
      AnyMatrix grid_test = expect(eqfun(grid, 
      {{0.0, 0.0, 0.0},
       {1.0, 0.0, 0.0},
       {0.0, 1.0, 0.0},
       {1.0, 1.0, 0.0},
       {0.0, 2.0, 0.0},
       {1.0, 2.0, 0.0}
      }
      ));
   };
   
   AnyFolder Test_MESHGRID = {
      AnyVector x_ = farr(0.0,1.0,4);
      AnyVector y_ = farr(0.0,1.0, 4);
      AnyVector z_ = farr(0.0, 1.0, 4);
      
   AnyFloat mgrid = MESHGRID(x_,y_,z_);
      AnyFloat XX = mgrid[0];
      AnyFloat YY = mgrid[1];
      AnyFloat ZZ = mgrid[2];
      
      AnyFloat test_XX = assert(eqfun(XX, {{{0.0, 1.0, 2.0, 3.0}, {0.0, 1.0, 2.0, 3.0}, {0.0, 1.0, 2.0, 3.0}, {0.0, 1.0, 2.0, 3.0}}, {{0.0, 1.0, 2.0, 3.0}, {0.0, 1.0, 2.0, 3.0}, {0.0, 1.0, 2.0, 3.0}, {0.0, 1.0, 2.0, 3.0}}, {{0.0, 1.0, 2.0, 3.0}, {0.0, 1.0, 2.0, 3.0}, {0.0, 1.0, 2.0, 3.0}, {0.0, 1.0, 2.0, 3.0}}, {{0.0, 1.0, 2.0, 3.0}, {0.0, 1.0, 2.0, 3.0}, {0.0, 1.0, 2.0, 3.0}, {0.0, 1.0, 2.0, 3.0}}}));
      AnyFloat test_YY = assert(eqfun(YY, {{{0.0, 0.0, 0.0, 0.0}, {1.0, 1.0, 1.0, 1.0}, {2.0, 2.0, 2.0, 2.0}, {3.0, 3.0, 3.0, 3.0}}, {{0.0, 0.0, 0.0, 0.0}, {1.0, 1.0, 1.0, 1.0}, {2.0, 2.0, 2.0, 2.0}, {3.0, 3.0, 3.0, 3.0}}, {{0.0, 0.0, 0.0, 0.0}, {1.0, 1.0, 1.0, 1.0}, {2.0, 2.0, 2.0, 2.0}, {3.0, 3.0, 3.0, 3.0}}, {{0.0, 0.0, 0.0, 0.0}, {1.0, 1.0, 1.0, 1.0}, {2.0, 2.0, 2.0, 2.0}, {3.0, 3.0, 3.0, 3.0}}}));
      AnyFloat test_ZZ = assert(eqfun(ZZ, {{{0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0}, {0.0, 0.0, 0.0, 0.0}}, {{1.0, 1.0, 1.0, 1.0}, {1.0, 1.0, 1.0, 1.0}, {1.0, 1.0, 1.0, 1.0}, {1.0, 1.0, 1.0, 1.0}}, {{2.0, 2.0, 2.0, 2.0}, {2.0, 2.0, 2.0, 2.0}, {2.0, 2.0, 2.0, 2.0}, {2.0, 2.0, 2.0, 2.0}}, {{3.0, 3.0, 3.0, 3.0}, {3.0, 3.0, 3.0, 3.0}, {3.0, 3.0, 3.0, 3.0}, {3.0, 3.0, 3.0, 3.0}}}));
   };



};
