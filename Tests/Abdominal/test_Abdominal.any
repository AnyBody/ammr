//fatal_warnings = True # Treat warnings as errors
//ignore_errors = [
//   "Penetration of surface",
//   "Overloaded muscle configuration",  # Overloaded muscles is expected... 
//   "Orientation close to Gimbal Lock",
//]

#include "../libdef.any"

#define BM_LEG_MODEL OFF
#define BM_ARM_LEFT ON
#define BM_ARM_RIGHT ON

#define BM_TRUNK_THORACIC_MODEL _THORACIC_MODEL_RIGID_
#define BM_TRUNK_CAVITY_MODEL _CAVITY_MODEL_VOLUME_

#ifndef TEST_NAME

#endif

#if BM_TRUNK_THORACIC_MODEL == _THORACIC_MODEL_RIGID_
// Evalulate joint strength does not yet support thoracic model
#include "../../Application/Validation/EvaluateJointStrength/EvaluateJointStrength.main.any"
#endif



Main = 
{
  
  
  
#ifndef CREATE_IMAGE 
  AnyOperationSequence RunTest = {
    AnyOperation& PelvisThoraxFlexion = Main.HumanModel.EvalulateJointStrength.Run_all_studies.PelvisThoraxFlexion;
    AnyOperation& PelvisThoraxExtension = Main.HumanModel.EvalulateJointStrength.Run_all_studies.PelvisThoraxExtension;
    AnyOperation& PelvisThoraxLateralBendingRight = Main.HumanModel.EvalulateJointStrength.Run_all_studies.PelvisThoraxLateralBendingRight;
    AnyOperation& PelvisThoraxLateralBendingLeft = Main.HumanModel.EvalulateJointStrength.Run_all_studies.PelvisThoraxLateralBendingLeft;
    AnyOperation& PelvisThoraxRotationRight = Main.HumanModel.EvalulateJointStrength.Run_all_studies.PelvisThoraxRotationRight;
    AnyOperation& PelvisThoraxRotationLeft = Main.HumanModel.EvalulateJointStrength.Run_all_studies.PelvisThoraxRotationLeft;
  };
  
#else
  #include "../Cameras.any"
  #if BM_LEG_MODEL
  AnyOperation& CameraInitPos = Main.HumanModel.EvalulateJointStrength.Right.Leg.HipFlexion.Study.InitialConditions;
  #else
  AnyOperation& CameraInitPos = Main.HumanModel.EvalulateJointStrength.Right.Arm.GlenoHumeralAbduction.Study.InitialConditions;
  #endif
  LoadTimeCam.CameraLookAtPoint = {0,1,0};
  LoadTimeCam.CameraFieldOfView = DesignVar(2);
  LoadTimeCam.CameraDirection  = {0,0,1};
#endif
};
