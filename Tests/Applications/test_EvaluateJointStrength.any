//fatal_warnings = True # Treat warnings as errors
//ignore_errors = [
//   "Overloaded muscle configuration",  # Overloaded muscles is expected... 
//   "Solver switched to fallback",  # Can happen to Latissimus dorsi
//   "Orientation close to Gimbal Lock",
//]
//define = [
//    {'BM_LEG_MODEL': 'OFF',
//     'BM_ARM_LEFT':'ON','BM_ARM_RIGHT':'ON'},
//    {'BM_LEG_MODEL': '_LEG_MODEL_Leg_',
//     'BM_ARM_LEFT':'OFF','BM_ARM_RIGHT':'OFF'},
//    {'BM_LEG_MODEL': '_LEG_MODEL_TLEM_',
//     'BM_ARM_LEFT':'OFF','BM_ARM_RIGHT':'OFF'},
//    {'BM_LEG_MODEL': '_LEG_MODEL_TLEM2_', 
//     'BM_ARM_LEFT':'OFF','BM_ARM_RIGHT':'OFF'},
//]
//pytest_markers=["slow"]

#include "../libdef.any"


#ifndef TEST_NAME

   #define BM_CALIBRATION_TYPE _CALIBRATION_TYPE_2PAR_
  #define BM_LEG_MODEL 0
  #define BM_ARM_LEFT 1
  #define BM_ARM_RIGHT 1
 
//  #define CREATE_IMAGE 0
#endif

#include "../../Application/Validation/EvaluateJointStrength/EvaluateJointStrength.main.any"

Main = 
{
#ifndef CREATE_IMAGE
  AnyOperation& RunTest = Main.RunApplication;
#else
  #include "../Cameras.any"
  #if BM_LEG_MODEL
  AnyOperation& CameraInitPos = Main.HumanModel.EvalulateJointStrength.Right.Leg.HipFlexion.Study.InitialConditions;
  #else
  AnyOperation& CameraInitPos = Main.HumanModel.EvalulateJointStrength.Right.Arm.GlenoHumeralAbduction.Study.InitialConditions;
  #endif
  LoadTimeCam.CameraLookAtPoint = {0,1,0};
  LoadTimeCam.CameraFieldOfView = DesignVar(2);
  LoadTimeCam.CameraDirection  = {0,0,1};
#endif
};
