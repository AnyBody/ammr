//define = [
//    {'BM_LEG_MODEL': '_LEG_MODEL_TLEM2_'},
//    {'BM_LEG_MODEL': '_LEG_MODEL_TLEM1_'},
//]
//fatal_warnings = [
//    "Penetration of surface",
//    "Number of allowed iterations for contact solution has been exceeded",
//]
//save_study= "Main.Study"

#define ANYBODY_PATH_OUTPUT "."


#include "libdef.any"
#include "../tools.any"
// ----------------------------------------------------------
// Model configuration:
// For more info on body model configuration options please load the model and double click on: 
// #path HTML_DOC "<AMMR_PATH_DOC>/bm_config/index.html"
// ----------------------------------------------------------

#define BM_ARM_RIGHT OFF
#define BM_ARM_LEFT OFF

#define BM_TRUNK_MUSCLES OFF

#ifndef TEST_NAME
  #define BM_LEG_MODEL 2
  #define TEST_NAME "test_LegDynamicSymmetryCheck.Main_1"
#endif

#define TEST_SEVERITY assert
#define BM_SCALING _SCALING_LENGTHMASSFAT_

// Use interpolation drivers to define motion
#define DriverSelection "FreePostureMove"

// actual model  
#include "DynamicTest/FreePostureFullBodyStatic.Main.any" 
Main = {

  Main.HumanModel.Anthropometrics.SegmentDimensions.PelvisWidth = 0.18;
  Main.HumanModel.Anthropometrics.SegmentDimensions.Right.ThighLength = 0.4;
  Main.HumanModel.Anthropometrics.SegmentDimensions.Right.ShankLength = 0.3;
  Main.HumanModel.Anthropometrics.SegmentDimensions.Right.FootLength = 0.25;
  Main.HumanModel.Anthropometrics.SegmentDimensions.Right.TalusLength = 0.05; 
  Main.HumanModel.Anthropometrics.SegmentDimensions.Left.ThighLength = 0.4;
  Main.HumanModel.Anthropometrics.SegmentDimensions.Left.ShankLength = 0.3;
  Main.HumanModel.Anthropometrics.SegmentDimensions.Left.FootLength = 0.25;
  Main.HumanModel.Anthropometrics.SegmentDimensions.Left.TalusLength = 0.05; 
  
  AnyInt TestTrigger = DesignVar(0);
 
  OPERATION_TEST_TRIGGER(Main.Study.InverseDynamics.PreOperation, Main.TestTrigger);
  
  Main.Study ={
    AnyFloat kin_tol = 1e-6;
    AnyFloat force_tol = 1e-6;

    AnyInt LegPositions = TEST_SEVERITY( 
      orfun( 
        not(Main.TestTrigger),  
        ltfun(Main.Study.SymmetryCheck.Leg.Kinematics.pos.NormalizedDifference, kin_tol)
      ),
      "Leg model positions asymmetric"
    );

    AnyInt LegMuscleLengths = TEST_SEVERITY(
      orfun(
        not(Main.TestTrigger),
        ltfun(Main.Study.SymmetryCheck.Leg.Muscle.lmt.NormalizedDifference, kin_tol)
      ),
      "Leg muscle lengths asymmetric"
    );
    
// NaN compare issue was solved in AnyBody 8.0.2 
#if (ANYBODY_V1 > 8) | (ANYBODY_V1 == 8 & ANYBODY_V2 > 0) | (ANYBODY_V1 == 8 & ANYBODY_V2 == 0 & ANYBODY_V3 > 1 )
    AnyInt LegMuscleLengthVelocities = TEST_SEVERITY(
      ltfun(Main.Study.SymmetryCheck.Leg.Muscle.lmtDot.NormalizedDifference, kin_tol),
      "Leg muscle length velocities asymmetric"
    );
#endif

    AnyInt LegMuscleStrengths = TEST_SEVERITY(
      ltfun(Main.Study.SymmetryCheck.Leg.Muscle.strength.NormalizedDifference, kin_tol),
      "Leg muscle strength asymmetric"
    );

    AnyInt LegMusForces = TEST_SEVERITY(
      ltfun(Main.Study.SymmetryCheck.Leg.Muscle.ft.NormalizedDifference, force_tol),
      "Leg model muscle forces asymmetric"
    );

    AnyInt LegPolylinePoints = TEST_SEVERITY(
      orfun(
        not(Main.TestTrigger),
        ltfun(Main.Study.SymmetryCheck.Leg.Wrapping.AbsDifference, kin_tol),
      ),
      "Leg wrapping polyline points asymmetric"
    );

  };

  AnyOperation& RunTest = Main.RunApplication;
};

