AnyFolder SymmetryCheck= {

  #if (BM_ARM_RIGHT != OFF) & (BM_ARM_LEFT != OFF)
    AnyFolder Arm ={
      AnyFolder Kinematics = {      
        ComparePtrArrays pos() = {
          Array1 = ObjSearchRecursive(
            "Main.HumanModel.BodyModel.Right.ShoulderArm.Segments", "r","AnyFloat", 10
          );
          Array2 = ObjSearchRecursive(
            "Main.HumanModel.BodyModel.Left.ShoulderArm.Segments", "r","AnyFloat", 10
          );
          MirrorMatrix = diag({1,1,-1});
        };
        ComparePtrArrays wraps() = {
          Array1 = ObjSearchRecursive(
            "Main.HumanModel.BodyModel.Right.ShoulderArm.Muscles", "r","AnyFloat", 10
          );
          Array2 = ObjSearchRecursive(
            "Main.HumanModel.BodyModel.Left.ShoulderArm.Muscles", "r","AnyFloat", 10
          );
          MirrorMatrix = diag({1,1,-1});
        };
      };
      
      AnyFolder Inertia ={
        
        AnyFolder Right ={
          
          AnyKinCoM CoMAll ={
            AnyFolder  &ref= Main.HumanModel.BodyModel.Right.ShoulderArm;
          };

          AnyKinCoM Clavicula = {AnySeg &ref= Main.HumanModel.BodyModel.Right.ShoulderArm.Segments.Clavicula;};
          AnyKinCoM Scapula = {AnySeg &ref= Main.HumanModel.BodyModel.Right.ShoulderArm.Segments.Scapula;};
          AnyKinCoM Humerus = {AnySeg &ref= Main.HumanModel.BodyModel.Right.ShoulderArm.Segments.Humerus;};
          AnyKinCoM Ulna = {AnySeg &ref= Main.HumanModel.BodyModel.Right.ShoulderArm.Segments.Ulna;};
          AnyKinCoM Radius = {AnySeg &ref= Main.HumanModel.BodyModel.Right.ShoulderArm.Segments.Radius;}; 
          AnyKinCoM Hand = {AnySeg &ref= Main.HumanModel.BodyModel.Right.ShoulderArm.Segments.Hand;}; 
        };
        
        AnyFolder Left ={
          
          AnyKinCoM CoMAll ={
            AnyFolder  &ref= Main.HumanModel.BodyModel.Left.ShoulderArm;
          };
          
          AnyKinCoM Clavicula = {AnySeg &ref= Main.HumanModel.BodyModel.Left.ShoulderArm.Segments.Clavicula;};
          AnyKinCoM Scapula = {AnySeg &ref= Main.HumanModel.BodyModel.Left.ShoulderArm.Segments.Scapula;};
          AnyKinCoM Humerus = {AnySeg &ref= Main.HumanModel.BodyModel.Left.ShoulderArm.Segments.Humerus;};
          AnyKinCoM Ulna = {AnySeg &ref= Main.HumanModel.BodyModel.Left.ShoulderArm.Segments.Ulna;};
          AnyKinCoM Radius = {AnySeg &ref= Main.HumanModel.BodyModel.Left.ShoulderArm.Segments.Radius;}; 
          AnyKinCoM Hand = {AnySeg &ref= Main.HumanModel.BodyModel.Left.ShoulderArm.Segments.Hand;}; 
        };
        
        AnyFolder Comparison ={
          AnyFloat CoMDif =(.Right.CoMAll.Pos-.Left.CoMAll.Pos)* {{1,0,0},{0,1,0},{0,0,0}};
          AnyFloat Clavicula =(.Right.Clavicula.Pos-.Left.Clavicula.Pos)* {{1,0,0},{0,1,0},{0,0,0}};
          AnyFloat Scapula=(.Right.Scapula.Pos-.Left.Scapula.Pos)* {{1,0,0},{0,1,0},{0,0,0}};
          AnyFloat Humerus=(.Right.Humerus.Pos-.Left.Humerus.Pos)* {{1,0,0},{0,1,0},{0,0,0}};
          AnyFloat Ulna=(.Right.Ulna.Pos-.Left.Ulna.Pos)* {{1,0,0},{0,1,0},{0,0,0}};
          AnyFloat Radius=(.Right.Radius.Pos-.Left.Radius.Pos)* {{1,0,0},{0,1,0},{0,0,0}};
          AnyFloat Hand=(.Right.Hand.Pos-.Left.Hand.Pos)* {{1,0,0},{0,1,0},{0,0,0}}; 
        };
      };  
      #if BM_ARM_MUSCLES_RIGHT == OFF & BM_ARM_MUSCLES_LEFT == OFF
        AnyFolder JntMuscle ={
          ComparePtrArrays ft() = {
            Array1 = ObjGetMember(
              ObjSearchRecursive(
                "Main.HumanModel.BodyModel.Right.ShoulderArm.JointMuscles", "*","AnyMuscle"
              ), "Ft"
            );
            Array2 = ObjGetMember(
              ObjSearchRecursive(
                "Main.HumanModel.BodyModel.Left.ShoulderArm.JointMuscles", "*","AnyMuscle"
              ), "Ft"
            );      
          };
        };  
      #else    
        AnyFolder Muscle ={
    
          AnyObjectPtrArray right_muscles = ObjSearchRecursive(
            "Main.HumanModel.BodyModel.Right.ShoulderArm.Muscles", "*", "AnyMuscle"
          );
          AnyObjectPtrArray left_muscles = ObjSearchRecursive(
            "Main.HumanModel.BodyModel.Left.ShoulderArm.Muscles", "*", "AnyMuscle"
          );
        
          ComparePtrArrays lmt()={
            Array1 = ObjGetMember(.right_muscles, "Lmt");
            Array2 = ObjGetMember(.left_muscles, "Lmt");
          };
          ComparePtrArrays lmtDot()={
            Array1 = ObjGetMember(.right_muscles, "LmtDot");
            Array2 = ObjGetMember(.left_muscles, "LmtDot");
          };
          ComparePtrArrays strength()={
            Array1 = ObjGetMember(.right_muscles, "Strength");
            Array2 = ObjGetMember(.left_muscles, "Strength");
          };
          ComparePtrArrays ft()={
            Array1 = ObjGetMember(.right_muscles, "Ft");
            Array2 = ObjGetMember(.left_muscles, "Ft");
          };  
        };
      #endif

      AnyFolder Wrapping = {
        AnyObjectPtrArray Array1 = ObjSearchRecursive("Main.HumanModel.BodyModel.Right.ShoulderArm.Muscles", "*.P");
        AnyObjectPtrArray Array2 = ObjSearchRecursive("Main.HumanModel.BodyModel.Left.ShoulderArm.Muscles", "*.P");
        AnyFloat MirrorMatrix = reshape(repmat(SizesOf(Array1Values)[0] * SizesOf(Array1Values)[1], {1,1,-1}), SizesOf(Array1Values));
        AnyFloat Array1Values = Obj2Num(Array1);
        AnyFloat Array2Values = mult(Obj2Num(Array2),  MirrorMatrix);

        AnyFloat AbsDifference = abs(Array1Values - Array2Values);
        AnyFloat SortedDifference = ObjSort(flatten(AbsDifference));
      };
    };
  #endif
  
  #if (BM_LEG_RIGHT != OFF) & (BM_LEG_LEFT != OFF)
    AnyFolder Leg = {
      AnyFolder Kinematics = {
        ComparePtrArrays pos() = {
          Array1 = set_difference(
              ObjSearchRecursive("Main.HumanModel.BodyModel.Right.Leg", "r","AnyFloat", 10),
              ObjSearchRecursive("Main.HumanModel.BodyModel.Right.Leg", "Cyl.r","AnyFloat", 10)
          );
          Array2 = set_difference(
              ObjSearchRecursive("Main.HumanModel.BodyModel.Left.Leg", "r","AnyFloat", 10),
              ObjSearchRecursive("Main.HumanModel.BodyModel.Left.Leg", "Cyl.r","AnyFloat", 10)
          );
          MirrorMatrix = diag({1,1,-1});
        };
      };
      
      AnyFolder Inertia ={
        AnyFolder Right ={
          
          AnyKinCoM CoMAll ={
            AnyFolder  &ref= Main.HumanModel.BodyModel.Right.Leg;
          };
          AnyKinCoM Thigh = {AnySeg &ref= Main.HumanModel.BodyModel.Right.Leg.Seg.Thigh;};
          AnyKinCoM Shank = {AnySeg &ref= Main.HumanModel.BodyModel.Right.Leg.Seg.Shank;};
          AnyKinCoM Talus = {AnySeg &ref= Main.HumanModel.BodyModel.Right.Leg.Seg.Talus;};
          AnyKinCoM Foot = {AnySeg &ref= Main.HumanModel.BodyModel.Right.Leg.Seg.Foot;}; 
          
        };
        
        AnyFolder Left ={
          
          AnyKinCoM CoMAll ={
            AnyFolder  &ref= Main.HumanModel.BodyModel.Left.Leg;
          };
          
          AnyKinCoM Thigh ={   AnySeg  &ref= Main.HumanModel.BodyModel.Left.Leg.Seg.Thigh;      };
          AnyKinCoM Shank={   AnySeg  &ref= Main.HumanModel.BodyModel.Left.Leg.Seg.Shank;      };
          AnyKinCoM Talus={   AnySeg  &ref= Main.HumanModel.BodyModel.Left.Leg.Seg.Talus;      };
          AnyKinCoM Foot={   AnySeg  &ref= Main.HumanModel.BodyModel.Left.Leg.Seg.Foot;      }; 
        };
        
        AnyFolder Comparison ={
          AnyFloat CoMDif =(.Right.CoMAll.Pos-.Left.CoMAll.Pos)* {{1,0,0},{0,1,0},{0,0,0}};
          AnyFloat Thigh =(.Right.Thigh.Pos-.Left.Thigh.Pos)* {{1,0,0},{0,1,0},{0,0,0}};
          AnyFloat Shank=(.Right.Shank.Pos-.Left.Shank.Pos)* {{1,0,0},{0,1,0},{0,0,0}};
          AnyFloat Talus=(.Right.Talus.Pos-.Left.Talus.Pos)* {{1,0,0},{0,1,0},{0,0,0}};
          AnyFloat Foot=(.Right.Foot.Pos-.Left.Foot.Pos)* {{1,0,0},{0,1,0},{0,0,0}};
        };
      };  
      #if BM_LEG_MUSCLES_BOTH == OFF
        AnyFolder JntMuscle ={
          ComparePtrArrays ft() = {
            Array1 = ObjGetMember(
              ObjSearchRecursive(
                "Main.HumanModel.BodyModel.Right.ShoulderArm.JointMuscles", "*","AnyMuscle"
              ), "Ft"
            );
            Array2 = ObjGetMember(
              ObjSearchRecursive(
                "Main.HumanModel.BodyModel.Left.ShoulderArm.JointMuscles", "*","AnyMuscle"
              ), "Ft"
            );      
          };
        };  
      #endif
      
      #if BM_LEG_MUSCLES_BOTH == ON
      
        AnyFolder Muscle ={
          AnyObjectPtrArray right_muscles = ObjSearchRecursive(
            "Main.HumanModel.BodyModel.Right.Leg.Mus", "*", "AnyMuscle"
          );
          AnyObjectPtrArray left_muscles = ObjSearchRecursive(
            "Main.HumanModel.BodyModel.Left.Leg.Mus", "*", "AnyMuscle"
          );
          
          ComparePtrArrays lmt()={
            Array1 = ObjGetMember(.right_muscles, "Lmt");
            Array2 = ObjGetMember(.left_muscles, "Lmt");
          };
          ComparePtrArrays lmtDot()={
            Array1 = ObjGetMember(.right_muscles, "LmtDot");
            Array2 = ObjGetMember(.left_muscles, "LmtDot");
          };
          ComparePtrArrays strength()={
            Array1 = ObjGetMember(.right_muscles, "Strength");
            Array2 = ObjGetMember(.left_muscles, "Strength");
          };
          ComparePtrArrays ft()={
            Array1 = ObjGetMember(.right_muscles, "Ft");
            Array2 = ObjGetMember(.left_muscles, "Ft");
          };
        };
      #endif 

      AnyFolder Wrapping = {
        AnyObjectPtrArray Array1 = ObjSearchRecursive("Main.HumanModel.BodyModel.Right.Leg.Mus", "*.P");
        AnyObjectPtrArray Array2 = ObjSearchRecursive("Main.HumanModel.BodyModel.Left.Leg.Mus", "*.P");
        AnyFloat MirrorMatrix = reshape(repmat(SizesOf(Array1Values)[0] * SizesOf(Array1Values)[1], {1,1,-1}), SizesOf(Array1Values));
        AnyFloat Array1Values = Obj2Num(Array1);
        AnyFloat Array2Values = mult(Obj2Num(Array2),  MirrorMatrix);

        AnyFloat AbsDifference = abs(Array1Values - Array2Values);
        AnyFloat SortedDifference = ObjSort(flatten(AbsDifference));
      };
    };
  #endif
  
  AnyFolder Trunk = {
    AnyFolder Kinematics ={
      
      #if (BM_TRUNK_CAVITY_MODEL == _CAVITY_MODEL_VOLUME_) & (BM_TRUNK_MUSCLES == ON)
        ComparePtrArrays abdom_pos() = {
          Array1 = ObjSearchRecursive("Main.HumanModel.BodyModel.Trunk.Abdominal", "*.Right.*.r");
          Array2 = ObjSearchRecursive("Main.HumanModel.BodyModel.Trunk.Abdominal", "*.Left.*.r");
          MirrorMatrix = diag({1,1,-1});
        };
      #endif
      
      ComparePtrArrays pos() = {
        Array1 = arrcat( // Do not switch to `set_union` - it will mess up the order of objects and do wrong comparisons
          ObjSearchRecursive("Main.HumanModel.BodyModel.Trunk", "*R.r","AnyFloat", 10), 
          ObjSearchRecursive("Main.HumanModel.BodyModel.Trunk.Muscles.Right", "*.r", "AnyFloat"),
        );
        Array2 = arrcat( // Do not switch to `set_union` - it will mess up the order of objects and do wrong comparisons
          ObjSearchRecursive("Main.HumanModel.BodyModel.Trunk", "*L.r","AnyFloat", 10),
          ObjSearchRecursive("Main.HumanModel.BodyModel.Trunk.Muscles.Left", "*.r", "AnyFloat")
        );
        MirrorMatrix = diag({1,1,-1});
      };
    };
    
    AnyFolder Inertia = {
      AnyKinCoM CoMAll = {
        AnyFolder  &ref= Main.HumanModel.BodyModel.Trunk;
      };
      
      #if BM_TRUNK_THORACIC_MODEL == _THORACIC_MODEL_FLEXIBLE_
        ComparePtrArrays rib_inertia_pos() = {
          Array1 = ObjGetMember(ObjSearchRecursive("Main.HumanModel.BodyModel.Trunk.Segments.Right", "*", "AnyInertia"), "r");
          Array2 = ObjGetMember(ObjSearchRecursive("Main.HumanModel.BodyModel.Trunk.Segments.Left", "*", "AnyInertia"), "r");
          MirrorMatrix = diag({1,1,-1});
        };
        
        AnyFolder sCoM_compare = {

          AnyObjectPtrArray all = ObjSearchRecursive("Main.HumanModel.BodyModel.Trunk.Segments", "*.sCoM");
          AnyObjectPtrArray right = ObjSearchRecursive("Main.HumanModel.BodyModel.Trunk.Segments.Right","*.sCoM");
          AnyObjectPtrArray left = ObjSearchRecursive("Main.HumanModel.BodyModel.Trunk.Segments.Left","*.sCoM");

          ComparePtrArrays scoms() = {
            Array1 = .right;
            Array2 = .left;
            MirrorMatrix = diag({1,1,-1});
          };
          
          /// Segments and nested objects that have a scom with z-axis=0
          AnyObjectPtrArray center_scoms = set_difference(
            all,
            right,
            left,
          );
          AnyFloat center_values = flatten(Obj2Num(center_scoms));
          AnyFloat center_scom_z_comp = take(
            center_values,
            iarr(2, 3, NumElemOf(center_values))
          );

          #if BM_TRUNK_CAVITY_MODEL == _CAVITY_MODEL_VOLUME_
            AnyObjectPtrArray abdom = set_difference(
              ObjSearchRecursive("Main.HumanModel.BodyModel.Trunk.Abdominal","*.sCoM"),
              all,
              right,
              left,
            );
            AnyFloat abdom_values = flatten(Obj2Num(abdom));
            AnyFloat abdom_scom_z_comp = take(
              abdom_values, 
              iarr(2, 3, NumElemOf(abdom_values))
            );

          #endif
        };
      #endif
    };  
    
    #if BM_TRUNK_MUSCLES != OFF
      AnyFolder Muscle ={
        AnyObjectPtrArray right_muscles = ObjSearchRecursive(
          "Main.HumanModel.BodyModel.Trunk.Muscles.Right", "*", "AnyMuscle"
        );
        AnyObjectPtrArray left_muscles = ObjSearchRecursive(
          "Main.HumanModel.BodyModel.Trunk.Muscles.Left", "*", "AnyMuscle"
        );

        ComparePtrArrays lmt()={
          Array1 = ObjGetMember(.right_muscles, "Lmt");
          Array2 = ObjGetMember(.left_muscles, "Lmt");
        };
        ComparePtrArrays lmtDot()={
          Array1 = ObjGetMember(.right_muscles, "LmtDot");
          Array2 = ObjGetMember(.left_muscles, "LmtDot");
        };
        ComparePtrArrays strength()={
          Array1 = ObjGetMember(.right_muscles, "Strength");
          Array2 = ObjGetMember(.left_muscles, "Strength");
        };
        ComparePtrArrays ft()={
          Array1 = ObjGetMember(.right_muscles, "Ft");
          Array2 = ObjGetMember(.left_muscles, "Ft");
        };       
      };  
    #endif
   
    AnyFolder RecruitedActuators = {
      #if BM_TRUNK_THORACIC_MODEL == _THORACIC_MODEL_FLEXIBLE_
        ComparePtrArrays actuators() = {
          Array1 = ObjSearchRecursive("Main.HumanModel.BodyModel.Trunk.Joints.RibCage.Right", "*.Fout");
          Array2 = ObjSearchRecursive("Main.HumanModel.BodyModel.Trunk.Joints.RibCage.Left", "*.Fout");
          MirrorMatrix = diag({1, 1, -1, 1, 1, -1});
        };
      #endif
    };

    #if BM_TRUNK_MUSCLES != OFF

    AnyFolder Wrapping = {
      AnyObjectPtrArray Array1 = ObjSearchRecursive("Main.HumanModel.BodyModel.Trunk.Muscles.Right", "*.P");
      AnyObjectPtrArray Array2 = ObjSearchRecursive("Main.HumanModel.BodyModel.Trunk.Muscles.Left", "*.P");
      AnyFloat MirrorMatrix = reshape(repmat(SizesOf(Array1Values)[0] * SizesOf(Array1Values)[1], {1,1,-1}), SizesOf(Array1Values));
      AnyFloat Array1Values = Obj2Num(Array1);
      AnyFloat Array2Values = mult(Obj2Num(Array2),  MirrorMatrix);

      AnyFloat AbsDifference = abs(Array1Values - Array2Values);
      AnyFloat SortedDifference = ObjSort(flatten(AbsDifference));
    };
    #endif
  };
};