/**^
This folder references all the values in the `ShoulderArm.ModelParameters.Muscles` which
represents the unscaled model parameter.

The sections here represents the values scaled to a specific subjects. 
The section is implemented  with a class templated so they can be customize
by the user, without editing this file: 
  
In your application simply assign the values to override. E.g.:

  Main.HumanModel.BodyModel.Right.ShoulderArm.MusPar.SubjectParameters = {
    biceps_brachii_caput_breve.VolumeScaleFactor = 2;
  };

*/ 


AnyVar StrengthScaleHumerus =  ..StrengthScaling.Humerus.StrengthScale;
AnyVar StrengthScaleUlna = ..StrengthScaling.Ulna.StrengthScale;
AnyVar StrengthScaleHand = ..StrengthScaling.Hand.StrengthScale;



{% for name, param in muscles.items() %}
{%- if param["condition"] %}
#if {{param["condition"]}}
{%- endif %}
SubjectMuscleParameter_template {{ name }}(NAME = {{ name }})= {
  //Muscle = ..ModelParameters.Muscles.{{ name }}.Muscle; 
  //Pennationangle = ..ModelParameters.Muscles.{{ name }}.Pennationangle; 
  //MuscleVolume = ..ModelParameters.Muscles.{{ name }}.MuscleVolume; 
  //OptimalFiberlength = ..ModelParameters.Muscles.{{ name }}.OptimalFiberlength; 
  //TotalTendonLength = ..ModelParameters.Muscles.{{ name }}.TotalTendonLength;
  //K1 = ..ModelParameters.Muscles.{{ name }}.K1; 
  //K2 = ..ModelParameters.Muscles.{{ name }}.K2; 
  //Epsilon0 = ..ModelParameters.Muscles.{{ name }}.Epsilon0; 
  //Fcfast = ..ModelParameters.Muscles.{{ name }}.Fcfast; 
  //VolumeScaleFactor = DesignVar(1); 
  //MuscleVolumeSubject = VolumeScaleFactor*VolumeScaleFactorScaleLaw*MuscleVolume;
  VolumeScaleFactorScaleLaw  = .StrengthScale{{param['scaling']}};
  {# FiberScaleFactorScaleLaw   = .FiberLengthScale{{param['scaling']}}; #}
};
{%- if param["condition"] %}
#endif
{%-endif %}

{%- endfor %}