


#if Side == "right"
  AnyFolder &SideRef = Main.HumanModel.BodyModel.Right;
  AnyFolder &SideInterfaceRef = Main.HumanModel.BodyModel.Interface.Right;
#endif



#if Side == "left"
  AnyFolder &SideRef= HumanModel.BodyModel.Left;
  AnyFolder &SideInterfaceRef = HumanModel.BodyModel.Interface.Left;
#endif


AnyFolder FootCal3 ={
  
  AnyFolder &Pelvis =Main.HumanModel.BodyModel.Trunk.SegmentsLumbar.PelvisSeg; //This is a reference to the folder which holds the human part of the model
  
  AnyFolder &LegSegSide =.SideRef.Leg.Seg; //This is a reference to the folder which holds the human part of the model
  AnyFolder &JointsCal = .SideRef.Leg.Jnt;
   AnyFolder &Ligaments  = .SideRef.Leg.Ligaments;

  
  AnyFixedRefFrame ground = {
    AnyRefNode node = { 
      ARel=..Pelvis.Axes0;
      sRel=..Pelvis.r0;
    };
  };
  
  AnyRevoluteJoint PelvisGround={
    AnyRefFrame &Ground = .ground.node;
    AnyRefFrame &Sacrum= .Pelvis; 
    Axis=z;
  };
  
  AnyKinEqSimpleDriver PelvisGroundRot = {
    AnyRevoluteJoint &Jnt = .PelvisGround;
    DriverPos = {0};
    DriverVel = {0};
    Reaction.Type = {Off}; 
  };
  
    
  AnyKinEqSimpleDriver LegDriverRight = {
    #if Side == "right"
      AnyKinMeasure &Joint = Main.HumanModel.BodyModel.Right.Leg.JntDOF;
    #endif
    
    #if Side == "left"
    AnyKinMeasure &Joint = ..HumanModel.BodyModel.Left.Leg.JntDOF;
    
    #endif
    
    
    
    DriverPos = {0,0.0,0,0}; //-15 degrees dorsal flexion
    DriverVel = {0.0,0.0,0,0};
    Reaction.Type = {Off,Off,Off,Off};
  };
   AnyKinEqSimpleDriver AnkleDriver = {
    AnyKinMeasure &Joint = ..SideRef.Leg.Jnt.Ankle;
    DriverPos = {0}; 
    DriverVel = {0.0};
    Reaction.Type = {Off};
  };
   AnyKinEqSimpleDriver SubTalar= {
    AnyKinMeasure &Joint = ..SideRef.Leg.Jnt.SubTalar;
    DriverPos = {0}; 
    DriverVel = {0.0};
    Reaction.Type = {Off};
  };


  
  
  //************************************************
  //              DriverIntertarsal
  //************************************************
  
  
  AnyKinEqSimpleDriver JntTaloNaviRight =     { 
    
    
    
    AnyKinMeasure &ref1 = ..SideInterfaceRef .TaloNavicularEversion;
    AnyKinMeasure &ref2 = ..SideInterfaceRef.TaloNavicularAbduction;
    AnyKinMeasure &ref3 = ..SideInterfaceRef.TaloNavicularDorsiFlexion;
    DriverPos = {0,0,0}*pi/180;
    DriverVel = {0,0,0};
    Reaction.Type = {Off,Off,Off};
  };
  
  AnyKinEqSimpleDriver JntNaviCuneiMedRight = 
  {  
    AnyKinMeasure &ref2 = ..SideInterfaceRef.NaviculoMedialCuneiformAbduction;
    AnyKinMeasure &ref3 = ..SideInterfaceRef.NaviculoMedialCuneiformDorsiFlexion;
    DriverPos = {0,0}*pi/180;
    DriverVel = {0,0};
    Reaction.Type = {Off,Off};
  };
  
  AnyKinEqSimpleDriver JntNaviCuneiIntRight = 
  { 
    //AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Right.NaviculoIntermediateCuneiformAbduction; //Replaced by intertarsal contact
    AnyKinMeasure &ref2 = ..SideInterfaceRef.NaviculoIntermediateCuneiformDorsiFlexion;
    DriverPos = {0}*pi/180;
    DriverVel = {0};
    Reaction.Type = {Off};   
  };
  
  AnyKinEqSimpleDriver JntNaviCuneiLatRight = 
  {
    //AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Right.NaviculoLateralCuneiformAbduction; //Replaced by intertarsal contact
    AnyKinMeasure &ref2 = ..SideInterfaceRef.NaviculoLateralCuneiformDorsiFlexion;
    DriverPos = {0}*pi/180;
    DriverVel = {0};
    Reaction.Type = {Off};    
  };
  
  AnyKinEqSimpleDriver JntCalCuboidRight = 
  {
    AnyKinMeasure &ref1 = ..SideInterfaceRef.CalcaneoCuboidEversion;
    //AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Right.CalcaneoCuboidAbduction; //Replaced by intertarsal contact
    AnyKinMeasure &ref3 = ..SideInterfaceRef.CalcaneoCuboidDorsiFlexion;
    DriverPos = {0,0}*pi/180;
    DriverVel = {0,0};
    Reaction.Type = {Off, Off};
  };    
  
  
  
  //************************************************
  //              DriverTarsoMt
  //************************************************
  
  
  AnyKinEqSimpleDriver JntTarsoMt1Right = 
  { 
    AnyKinMeasure &ref2 = ..SideInterfaceRef.TarsoMetatarsal1Abduction;
    AnyKinMeasure &ref3 = ..SideInterfaceRef.TarsoMetatarsal1DorsiFlexion;
    DriverPos = {0,0}*pi/180;
    DriverVel = {0,0};
    Reaction.Type = {Off,Off};
  };
  
  
  AnyKinEqSimpleDriver JntTarsoMt2Right = 
  {
    //AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Right.TarsoMetatarsal2Abduction; //Replaced by metatarsal head contact
    AnyKinMeasure &ref2 = ..SideInterfaceRef.TarsoMetatarsal2DorsiFlexion;
    DriverPos = {0}*pi/180;
    DriverVel = {0};
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqSimpleDriver JntTarsoMt3Right = 
  {
    //AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Right.TarsoMetatarsal3Abduction; //Replaced by metatarsal head contact
    AnyKinMeasure &ref2 = ..SideInterfaceRef.TarsoMetatarsal3DorsiFlexion;
    DriverPos = {0}*pi/180;
    DriverVel = {0};
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqSimpleDriver JntTarsoMt4Right = 
  {
    //AnyKinMeasure &ref1 = Main.HumanModel.BodyModel.Interface.Right.TarsoMetatarsal4Abduction; //Replaced by metatarsal head contact
    AnyKinMeasure &ref2 = ..SideInterfaceRef.TarsoMetatarsal4DorsiFlexion;
    DriverPos = {0}*pi/180;
    DriverVel = {0};
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqSimpleDriver JntTarsoMt5Right = 
  {
    //AnyKinMeasure &ref2 = Main.HumanModel.BodyModel.Interface.Right.TarsoMetatarsal5Abduction; //Replaced by metatarsal head contact
    AnyKinMeasure &ref3 = ..SideInterfaceRef.TarsoMetatarsal5SkewDorsiFlexion;
    DriverPos = {0}*pi/180;
    DriverVel = {0};
    Reaction.Type = {Off};
  };
  
  
  //************************************************
  //              DriverJntMtPhal
  //************************************************
  
  
  AnyKinEqSimpleDriver JntMtPhal1Right = 
  {
    AnyKinMeasure &ref1 = ..SideInterfaceRef.MetatarsoPhalangeal1Abduction;
    AnyKinMeasure &ref2 = ..SideInterfaceRef.MetatarsoPhalangeal1DorsiFlexion;
    DriverPos = {0,0}*pi/180;
    DriverVel = {0,0};
    Reaction.Type = {Off, Off};
  };
  
  
  AnyKinEqSimpleDriver JntMtPhal2Right = 
  {
    AnyKinMeasure &ref1 = ..SideInterfaceRef.MetatarsoPhalangeal2Abduction;
    AnyKinMeasure &ref2 = ..SideInterfaceRef.MetatarsoPhalangeal2DorsiFlexion;
    DriverPos = {0,0}*pi/180;
    DriverVel = {0,0};
    Reaction.Type = {Off, Off};
  };    
  
  AnyKinEqSimpleDriver JntMtPhal3Right = 
  {
    AnyKinMeasure &ref1 = ..SideInterfaceRef.MetatarsoPhalangeal3Abduction;
    AnyKinMeasure &ref2 = ..SideInterfaceRef.MetatarsoPhalangeal3DorsiFlexion;
    DriverPos = {0,0}*pi/180;
    DriverVel = {0,0};
    Reaction.Type = {Off, Off};
  };
  
  
  AnyKinEqSimpleDriver JntMtPhal4Right = 
  {
    AnyKinMeasure &ref1 = ..SideInterfaceRef.MetatarsoPhalangeal4Abduction;
    AnyKinMeasure &ref2 = ..SideInterfaceRef.MetatarsoPhalangeal4DorsiFlexion;
    DriverPos = {0,0}*pi/180;
    DriverVel = {0,0};
    Reaction.Type = {Off, Off};
  };
  
  
  AnyKinEqSimpleDriver JntMtPhal5Right = 
  {
    AnyKinMeasure &ref1 = ..SideInterfaceRef.MetatarsoPhalangeal5Abduction;
    AnyKinMeasure &ref2 = ..SideInterfaceRef.MetatarsoPhalangeal5DorsiFlexion;
    DriverPos = {0,0}*pi/180;
    DriverVel = {0,0};
    Reaction.Type = {Off, Off};
  };
  
  
  //************************************************
  //              DriverJntProxPhal
  //************************************************
  
  
  AnyKinEqSimpleDriver JntProxPhal1Right = 
  {
    AnyKinMeasure &ref1 = ..SideInterfaceRef.ProximoDistalPhalange1DorsiFlexion;
    DriverPos = {0}*pi/180;
    DriverVel = {0};
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqSimpleDriver JntProxPhal2Right = 
  {
    AnyKinMeasure &ref1 = ..SideInterfaceRef.ProximoMedialPhalange2DorsiFlexion;
    DriverPos = {0}*pi/180;
    DriverVel = {0};
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqSimpleDriver JntProxPhal3Right = 
  {
    AnyKinMeasure &ref1 = ..SideInterfaceRef.ProximoMedialPhalange3DorsiFlexion;
    DriverPos = {0}*pi/180;
    DriverVel = {0};
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqSimpleDriver JntProxPhal4Right = 
  {
    AnyKinMeasure &ref1 = ..SideInterfaceRef.ProximoMedialPhalange4DorsiFlexion;
    DriverPos = {0}*pi/180;
    DriverVel = {0};
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqSimpleDriver JntProxPhal5Right = 
  {
    AnyKinMeasure &ref1 = ..SideInterfaceRef.ProximoMedialPhalange5DorsiFlexion;
    DriverPos = {0}*pi/180;
    DriverVel = {0};
    Reaction.Type = {Off};
  };
  
  
  //************************************************
  //              DriverJntDistPhal
  //************************************************
  
  
  
  
  AnyKinEqSimpleDriver JntDistPhal2Right = 
  {
    AnyKinMeasure &ref1 = ..SideInterfaceRef.MedioDistalPhalange2DorsiFlexion;
    DriverPos = {0}*pi/180;
    DriverVel = {0};
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqSimpleDriver JntDistPhal3Right = 
  {
    AnyKinMeasure &ref1 = ..SideInterfaceRef.MedioDistalPhalange3DorsiFlexion;
    DriverPos = {0}*pi/180;
    DriverVel = {0};
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqSimpleDriver JntDistPhal4Right = 
  {
    AnyKinMeasure &ref1 = ..SideInterfaceRef.MedioDistalPhalange4DorsiFlexion;
    DriverPos = {0}*pi/180;
    DriverVel = {0};
    Reaction.Type = {Off};
  };
  
  
  AnyKinEqSimpleDriver JntDistPhal5Right = 
  {
    AnyKinMeasure &ref1 = ..SideInterfaceRef.MedioDistalPhalange5DorsiFlexion;
    DriverPos = {0}*pi/180;
    DriverVel = {0};
    Reaction.Type = {Off};
  };
  
 AnyFolder &AllLigs = .SideRef.Leg.Ligaments;
  
 
 
 
};

#include "FootCal4.any"


// The study: Operations to be performed on the model
AnyBodyCalibrationStudy FootCalibrationStudy3 = {
  AnyFolder &ref=.FootCal3; 
  nStep = 1;
  MechObjectExclude = 
    
arrcat( 
{&Main.HumanModel.BodyModel.Trunk.SegmentsLumbar.SacrumSeg},
 ObjSearch(".SideRef.Leg.Ligaments.*.*.*.*", "AnyKinEqSimpleDriver"),
 ObjSearch(".SideRef.Leg.Ligaments.*.*.*", "AnyKinEqSimpleDriver"),
 ObjSearch(".SideRef.Leg.Ligaments.*.*.*.*", "AnyKinEqSimpleDriver"),

 ObjSearch(".SideRef.Leg.Ligaments.*.*.*.*.*", "AnyKinEqSimpleDriver")
 
  ); 

              
};
//

AnyOperationSequence FootCalibrationSequence ={ 
  //AnyOperation &Cal1FootRight = .FootCalibrationStudy1.LigamentLengthAdjustment;
//AnyOperation &Cal2FootRight = .FootCalibrationStudy2.LigamentLengthAdjustment;
  AnyOperation &Cal3FootRight = .FootCalibrationStudy3.LigamentLengthAdjustment;
  // AnyOperation &Cal4FootRight = .FootCalibrationStudy4.LigamentLengthAdjustment;
AnyOperationSetValue &setpretension1 =.SetLigPretenstionProfundum1 ;
AnyOperationSetValue &setpretension2 =.SetLigPretenstionProfundum2 ;
AnyOperationSetValue &setpretension3 =.SetLigPretenstionTarsal ;
AnyOperationSetValue &setpretension4 =.SetLigPretenstionCollateralMedial ;
AnyOperationSetValue &setpretension5 =.SetLigPretenstionCollateralLateral ;
AnyOperationSetValue &setpretension6 =.SetLigPretenstionPlantarFascia;
AnyOperationSetValue &setpretension7 =.SetLigPretenstionCollateralMedLat ;
AnyOperationSetValue &setpretension8 =.SetLigPretenstionLongPlantar ;
AnyOperationSetValue &setpretension9 =.SetLigPretenstionPlantarPlate ;
AnyOperationSetValue &setpretension10 =.SetLigPretenstionPlantarPlateDorsal ;

AnyOperationSetValue &setpretension12 =.SetLigPretenstionLigamentsPhalangealPlantar;
AnyOperationSetValue &setpretension13 =.SetLigPretenstionLigamentsPhalangealDorsal ;

};


AnyOperationSetValue SetLigPretenstionProfundum1 ={
  Target = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.Mt*.LigMdl.L0", "AnyFloat");
  Source = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.Mt*.LigMdl.L0_Pretension", "AnyFloat");
};

AnyOperationSetValue SetLigPretenstionProfundum2 ={
  Target = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.MtTransversumProfundumPlantarLine.*.LigMdl.L0", "AnyFloat");
  Source = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.MtTransversumProfundumPlantarLine.*.LigMdl.L0_Pretension", "AnyFloat");
};


AnyOperationSetValue SetLigPretenstionTarsal ={
  Target = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.LigamentsTarsal.*Lig.LigMdl.L0", "AnyFloat");
  Source = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.LigamentsTarsal.*Lig.LigMdl.L0_Pretension", "AnyFloat");
};

AnyOperationSetValue SetLigPretenstionCollateralMedial ={
  Target = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.CollateralMedial.*.LigMdl.L0", "AnyFloat");
  Source = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.CollateralMedial.*.LigMdl.L0_Pretension", "AnyFloat");
};

AnyOperationSetValue SetLigPretenstionCollateralLateral ={
  Target = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.CollateralLateral.*.LigMdl.L0", "AnyFloat");
  Source = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.CollateralLateral.*.LigMdl.L0_Pretension", "AnyFloat");
};

AnyOperationSetValue SetLigPretenstionPlantarFascia ={
  Target = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.PlantarFascia.*.LigMdl.L0", "AnyFloat");
  Source = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.PlantarFascia.*.LigMdl.L0_Pretension", "AnyFloat");
};

AnyOperationSetValue SetLigPretenstionCollateralMedLat ={
  Target = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.Calcaneo*.*.LigMdl.L0", "AnyFloat");
  Source = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.Calcaneo*.*.LigMdl.L0_Pretension", "AnyFloat");
};

AnyOperationSetValue SetLigPretenstionLongPlantar ={
  Target = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.LongPlantar.*.LigMdl.L0", "AnyFloat");
  Source = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.LongPlantar.*.LigMdl.L0_Pretension", "AnyFloat");
};

AnyOperationSetValue SetLigPretenstionPlantarPlate ={
  Target = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.PlantarPlate.*.LigMdl.L0", "AnyFloat");
  Source = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.PlantarPlate.*.LigMdl.L0_Pretension", "AnyFloat");
};

AnyOperationSetValue SetLigPretenstionPlantarPlateDorsal ={
  Target = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.PlantarPlateDorsal.*.LigMdl.L0", "AnyFloat");
  Source = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.PlantarPlateDorsal.*.LigMdl.L0_Pretension", "AnyFloat");
};

//AnyOperationSetValue SetLigPretenstionLigamentsPhalangeal ={
//  Target = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.LigamentsPhalangeal.*.*.LigMdl.L0", "AnyFloat");
//  Source = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.LigamentsPhalangeal.*.*.LigMdl.L0_Pretension", "AnyFloat");
//};


AnyOperationSetValue SetLigPretenstionLigamentsPhalangealPlantar ={
  Target = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.LigamentsPhalangealPlantar.*.LigMdl.L0", "AnyFloat");
  Source = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.LigamentsPhalangealPlantar.*.LigMdl.L0_Pretension", "AnyFloat");
};


AnyOperationSetValue SetLigPretenstionLigamentsPhalangealDorsal ={
  Target = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.LigamentsPhalangealDorsal.*.LigMdl.L0", "AnyFloat");
  Source = ObjSearch("Main.HumanModel.BodyModel.Right.Leg.Ligaments.LigamentsPhalangealDorsal.*.LigMdl.L0_Pretension", "AnyFloat");
};

