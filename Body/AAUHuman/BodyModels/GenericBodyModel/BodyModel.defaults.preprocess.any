

// Set BM_LEG_MODEL to OFF if both BM_LEG_RIGHT/LEFT are OFF
#ifdef BM_LEG_RIGHT
#ifdef BM_LEG_LEFT
  #if BM_LEG_RIGHT == OFF & BM_LEG_LEFT == OFF
  #ifdef BM_LEG_MODEL
      #undef BM_LEG_MODEL
    #endif
    #define BM_LEG_MODEL OFF
  #endif
#endif
#endif

// Allow for BM_LEG_MODEL to switch Legs models off completely.
#ifdef BM_LEG_MODEL
  #if BM_LEG_MODEL == OFF
    #ifndef BM_LEG_RIGHT
      #define BM_LEG_RIGHT OFF
    #endif
    #ifndef BM_LEG_LEFT
      #define BM_LEG_LEFT OFF
    #endif
  #endif
#endif

// 
#ifndef BM_ARM_SHOULDER_RHYTHM
#ifdef BM_ARM_SHOULDER_RHYTHM_RIGHT
#define BM_ARM_SHOULDER_RHYTHM BM_ARM_SHOULDER_RHYTHM_RIGHT
   AnyInt deprecated_left_right_rythm= warn(0, strformat("\n"+
      "------------------------------------------------------------------------------------------------------\n"+
      "    `BM_ARM_SHOULDER_RYTHM_LEFT` is deprecated.\n"+
      "    The single statement `BM_ARM_SHOULDER_RYTHM` sets the shoulder rythm for both sides.\n"+
      "-------------------------------------------------------------------------------------------------------\n"));
#endif
#endif


#ifndef BM_ARM_SHOULDER_RHYTHM
#ifdef BM_ARM_SHOULDER_RHYTHM_LEFT
#define BM_ARM_SHOULDER_RHYTHM BM_ARM_SHOULDER_RHYTHM_LEFT
   AnyInt deprecated_left_right_rythm= warn(0, strformat("\n"+
      "------------------------------------------------------------------------------------------------------\n"+
      "    `BM_ARM_SHOULDER_RYTHM_RIGHT` is deprecated.\n"+
      "    The single statement `BM_ARM_SHOULDER_RYTHM` sets the shoulder rythm for both sides.\n"+
      "-------------------------------------------------------------------------------------------------------"));
#endif
#endif


// 
#ifndef BM_ARM_DETAILED_HAND
#ifdef BM_ARM_DETAIL_HAND_RIGHT
#define BM_ARM_DETAILED_HAND BM_ARM_DETAIL_HAND_RIGHT
   AnyInt deprecated_left_right_detail_hand= warn(0, strformat("\n"+
      "------------------------------------------------------------------------------------------------------\n"+
      "    `BM_ARM_DETAIL_HAND_RIGHT` is deprecated.\n"+
      "    The single statement `BM_ARM_DETAILED_HAND` sets hand model for both sides.\n"+
      "-------------------------------------------------------------------------------------------------------"));
#endif
#endif


#ifndef BM_ARM_DETAILED_HAND
#ifdef BM_ARM_DETAIL_HAND_LEFT
#define BM_ARM_DETAILED_HAND BM_ARM_DETAIL_HAND_LEFT
   AnyInt deprecated_left_right_detail_hand= warn(0, strformat("\n"+
      "------------------------------------------------------------------------------------------------------\n"+
      "    `BM_ARM_DETAIL_HAND_LEFT` is deprecated.\n"+
      "    The single statement `BM_ARM_DETAILED_HAND` sets hand model for both sides.\n"+
      "-------------------------------------------------------------------------------------------------------"));
#endif
#endif


#ifdef BM_LEG_MODEL
#if BM_LEG_MODEL == _LEG_MODEL_TLEM1_
   AnyInt deprecated_TLEM1_model = warn(0, strformat("\n"+
      "------------------------------------------------------------------------------------------------------\n"+
      "    The Twente Lower Extremity Model v.1 (TLEM1) is deprecated and no longer maintained.  \n"+
      "    It may be removed from AMMR in future releases.\n"+
      "    Please use the TLEM 2 (which is default or set: #define BM_LEG_MODEL _LEG_MODEL_TLEM2_) \n"+
      "-------------------------------------------------------------------------------------------------------"));
#endif
#endif


#ifdef BM_SCALING_MY_FILE
   AnyInt deprecated_BM_SCALING_MY_FILE = warn(0, strformat("\n"+
      "------------------------------------------------------------------------------------------------------\n"+
      "    `BM_SCALING_MY_FILE is deprecated, and renamed to `BM_SCALING_FILE`\n"+
      "-------------------------------------------------------------------------------------------------------")); 
  #ifndef BM_SCALING_FILE
    #define BM_SCALING_FILE BM_SCALING_MY_FILE
  #endif
#endif

#ifdef BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_RIGHT
#ifndef BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_RIGHT
#define BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_RIGHT BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_RIGHT
#endif
   AnyInt deprecated_BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_RIGHT = warn(0, strformat("\n"+
      "------------------------------------------------------------------------------------------------------------------------ \n"+
      "    `BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_RIGHT` is deprecated.\n"+
      "    Please use `BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_RIGHT` instead for all leg models.\n"+
      "------------------------------------------------------------------------------------------------------------------------ "));
#endif

#ifdef BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_LEFT
#ifndef BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_LEFT
#define BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_LEFT BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_LEFT
#endif
   AnyInt deprecated_BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_LEFT = warn(0, strformat("\n"+
      "------------------------------------------------------------------------------------------------------------------------ \n"+
      "    `BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_LEFT` is deprecated.\n"+
      "    Please use `BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_LEFT` instead for all leg models.\n"+
      "------------------------------------------------------------------------------------------------------------------------ "));
#endif

// Trigger check for read-only AMMR if we think user is running 
// the AMMR version in the install directory. 
#ifpathexists "<ANYBODY_PATH_AMMR>/../AnyBody.exe"

 #ifndef ANYBODY_DISMISS_READONLY_NOTICE

  // use of a python function
  AnyFunEx IsFileWriteable = 
  {
    AnyIntVar Return = 0;
    AnyFunExMonoPy is_file_writeable =
    {
     ModuleFile = "ammr-checks.py";
     ArgList = {
       AnyStringVar MainFile = ANYBODY_PATH_MAINFILE;
     };
    };
  };
  
 AnyInt MainFileIsReadOnlyNotice = notice(IsFileWriteable(ANYBODY_PATH_MAINFILE), strformat("\n"+
  "\n------------------------------------------------------------------------------------------------------\n"+
  "                       Note: Your Main-file appears to be read-only. \n"+
  " \n"+ 
  "  Are you running models directly from the install direcotry?\n"+
  "  It is good practice to copy models to for example your documents folder.\n"+
  "  This notice can be disabled with: #define ANYBODY_DISMISS_READONLY_NOTICE \n"+
  "-------------------------------------------------------------------------------------------------------\n"));

 #endif
#endif



 AnyFunEx EndsWith = 
  {
    AnyIntVar Return = 0;
    AnyFunExMonoPy endswith =
    {
     ModuleFile = "ammr-checks.py";
     ArgList = {
       AnyStringVar string = "";
       AnyStringVar argument = "";
     };
    };
  };
  
 #ifdef ANYBODY_ENABLE_MODIFIED_AMMR_NOTICE
 
 AnyFunEx DirectoryHash = 
  {
    AnyStringVar Return = "";
    AnyFunExMonoPy hash_directory =
    {
     ModuleFile = "ammr-checks.py";
     ArgList = {
       AnyStringVar Directory = ANYBODY_PATH_BODY;
     };
    };
  };
 
 AnyStringVar HashBodyModel = DirectoryHash(ANYBODY_PATH_BODY);
 
 AnyInt ModifiedAMMRChecks = {
     not(HashBodyModel), // Don't trigger on missing hash value
     eqfun( ANYBODY_HASH_BODY, HashBodyModel), // Don't trigger if hash value matches
     EndsWith(AMMR_VERSION, "beta") // Don't trigger if we are using the beta version
   }; 
 
 AnyInt BodyModelIsModifiedNotice= notice(sum(ModifiedAMMRChecks), strformat("\n"+
   "\n------------------------------------------------------------------------------------------------------\n"+
   "                 Note: You appear to be using a modified version of the Body Model. \n"+
   "\n"+
   "  Some files in the folder 'AMMR/Body/AAUHuman' have been modified.\n"+
   "  You may disable this notice by removing the switch ``#define ANYBODY_ENABLE_MODIFIED_AMMR_NOTICE``                     \n"+
   "-------------------------------------------------------------------------------------------------------\n"));

#endif

#ifdef BM_TRUNK_THORACIC_FUTURE
#if BM_TRUNK_THORACIC_FUTURE == ON
   AnyMessage msg_THORACIC_FUTURE = { TriggerPreProcess = On; Type = MSG_Error; Message = strformat("\n"+
   "\n----------------------------------------------------------------------------------------------------------\n"+
   "             Note: BM_TRUNK_THORACIC_FUTURE is a development option for a future thoracic model. \n"+
   "\n"+
   "  The model will not be able to load when this is enabled. Please remove this option or set it to OFF:\n"+
   "  ``#define BM_TRUNK_THORACIC_FUTURE OFF``                     \n"+
   "-----------------------------------------------------------------------------------------------------------\n");};
#endif
#endif


