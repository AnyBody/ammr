/* ----------------------------------------------------------------
Default mannequin drivers:

-The pelvis is locked to the ground 
-The remaining degrees of freedom are controlled by parameters in the "<BM_MANNEQUIN_FILE>" file.
-This file is a good way to get an overview of the dof in the full body model
 all the dof in the body model is driven from this file.
-In total 

Soeren, March 1, 2006.
----------------------------------------------------------------  */
// The Default mannequin drivers are implemented as a class template. 
// The implementation is a bit ackward, since all define statements
// and has to be passed into the class template as arguments. 
//
// But the bennefit of this implementation is that all variables
// can be overridden, as if they were variables of a class. 
// For example all weight can be customized: 
// Main.HumanModel.DefaultMannequinDrivers = {
//       PostureDriverBending.Weights.Fun.Value = 0.1;
// };
  
#class_template Template_MannequinDrivers (
MANNEQUIN_DRIVER_WEAK_SWITCH,
GLOBAL_REFERENCE_FRAME_SWITCH,
MANNEQUIN_DRIVER_PELVIS_POS_X,
MANNEQUIN_DRIVER_PELVIS_POS_Y,
MANNEQUIN_DRIVER_PELVIS_POS_Z,
MANNEQUIN_DRIVER_PELVIS_ROT_Z,
MANNEQUIN_DRIVER_PELVIS_ROT_Y,
MANNEQUIN_DRIVER_PELVIS_ROT_X,
MANNEQUIN_DRIVER_SKULL_THORAX_FLEXION,
MANNEQUIN_DRIVER_SKULL_THORAX_LATERALBENDING,
MANNEQUIN_DRIVER_SKULL_THORAX_ROTATION,
MANNEQUIN_DRIVER_PELVIS_THORAX_LATERAL_BENDING,
MANNEQUIN_DRIVER_PELVIS_THORAX_ROTATION,
MANNEQUIN_DRIVER_PELVIS_THORAX_EXTENSION,
MANNEQUIN_DRIVER_STERNOCLAVICULAR_PROTRACTION_RIGHT,
MANNEQUIN_DRIVER_STERNOCLAVICULAR_ELEVATION_RIGHT,
MANNEQUIN_DRIVER_STERNOCLAVICULAR_AXIAL_ROTATION_RIGHT,
MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_RIGHT,
MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_RIGHT,
MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_RIGHT,
MANNEQUIN_DRIVER_ELBOW_FLEXION_RIGHT,
MANNEQUIN_DRIVER_ELBOW_PRONATION_RIGHT,
MANNEQUIN_DRIVER_WRIST_FLEXION_RIGHT,
MANNEQUIN_DRIVER_WRIST_ABDUCTION_RIGHT,
MANNEQUIN_DRIVER_HIP_FLEXION_RIGHT,
MANNEQUIN_DRIVER_HIP_ABDUCTION_RIGHT,
MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_RIGHT,
MANNEQUIN_DRIVER_KNEE_FLEXION_RIGHT,
MANNEQUIN_DRIVER_ANKLE_FLEXION_RIGHT,
MANNEQUIN_DRIVER_ANKLE_EVERSION_RIGHT,
MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_RIGHT,
MANNEQUIN_DRIVER_STERNOCLAVICULAR_PROTRACTION_LEFT,
MANNEQUIN_DRIVER_STERNOCLAVICULAR_ELEVATION_LEFT,
MANNEQUIN_DRIVER_STERNOCLAVICULAR_AXIAL_ROTATION_LEFT,
MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_LEFT,
MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_LEFT,
MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_LEFT,
MANNEQUIN_DRIVER_ELBOW_FLEXION_LEFT,
MANNEQUIN_DRIVER_ELBOW_PRONATION_LEFT,
MANNEQUIN_DRIVER_WRIST_FLEXION_LEFT,
MANNEQUIN_DRIVER_WRIST_ABDUCTION_LEFT,
MANNEQUIN_DRIVER_HIP_FLEXION_LEFT,
MANNEQUIN_DRIVER_HIP_ABDUCTION_LEFT,
MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_LEFT,
MANNEQUIN_DRIVER_KNEE_FLEXION_LEFT,
MANNEQUIN_DRIVER_ANKLE_FLEXION_LEFT,
MANNEQUIN_DRIVER_ANKLE_EVERSION_LEFT,
MANNEQUIN_DRIVER_HAND_RIGHT, 
MANNEQUIN_DRIVER_HAND_LEFT, 
MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_LEFT,
LEG_MODEL_Leg,
LEG_MODEL_TLEM,
LEG_MODEL_TLEM2,
LEG_MODEL,
LEG_RIGHT,
ARM_RIGHT,
LEG_LEFT,
ARM_LEFT,
ARM_CLAVICULA_ROTATION_RHYTHM,
ARM_SHOULDER_RHYTHM,
ARM_DETAILED_HAND, 
TRUNK_LUMBAR_RHYTHM,
FOOT_MODEL,
FOOT_MODEL_DEFAULT,
MANNEQUIN_FOLDER = Mannequin,
BODYMODEL_FOLDER = BodyModel

){

  AnyComponentDefinition obj = {};
  
  #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
    #var AnyFloat DefaultWeakDriverWeight = 0.001;
  #endif
  

  #if GLOBAL_REFERENCE_FRAME_SWITCH == 0
    AnyFixedRefFrame GenericGRF = {Origin={0,0,0};};
  #endif
  
  AnyFolder &JntPos = .MANNEQUIN_FOLDER.Posture;
  AnyFolder &JntVel = .MANNEQUIN_FOLDER.PostureVel;
  
  #if MANNEQUIN_DRIVER_PELVIS_POS_X
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_PELVIS_POS_X ON/OFF
  /// 
  AnyKinEqSimpleDriver PelvisGroundDriverPosX = {
    AnyKinLinear lin = {
      #if GLOBAL_REFERENCE_FRAME_SWITCH == 0
        AnyFixedRefFrame &ref1 =..GenericGRF;
      #else
        AnyFixedRefFrame &ref1 = GLOBAL_REFERENCE_FRAME;
      #endif
      AnyRefFrame &ref2 =...BODYMODEL_FOLDER.Trunk.SegmentsLumbar.PelvisSeg.AnatomicalFrame;
    };
    MeasureOrganizer = {0};
    #var DriverPos={.JntPos.PelvisPosX};
    DriverVel={.JntVel.PelvisPosX};
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif
  
  
  #if MANNEQUIN_DRIVER_PELVIS_POS_Y
  /// Default mannequin driver. Control with:
  /// #define BM_MANNEQUIN_DRIVER_PELVIS_POS_Y ON/OFF
  /// 
  AnyKinEqSimpleDriver PelvisGroundDriverPosY ={
    AnyKinLinear lin ={
      #if GLOBAL_REFERENCE_FRAME_SWITCH == 0
        AnyFixedRefFrame &ref1 =..GenericGRF;
      #else
        AnyFixedRefFrame &ref1 = GLOBAL_REFERENCE_FRAME;
      #endif
      AnyRefFrame &ref2 =...BODYMODEL_FOLDER.Trunk.SegmentsLumbar.PelvisSeg.AnatomicalFrame;
    };
    MeasureOrganizer = {1};
    #var DriverPos={.JntPos.PelvisPosY};
    DriverVel={.JntVel.PelvisPosY};
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif

  
  
  #if MANNEQUIN_DRIVER_PELVIS_POS_Z
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_PELVIS_POS_Z ON/OFF
  /// 
  AnyKinEqSimpleDriver PelvisGroundDriverPosZ ={
    AnyKinLinear lin ={
      #if GLOBAL_REFERENCE_FRAME_SWITCH == 0
        AnyFixedRefFrame &ref1 =..GenericGRF;
      #else
        AnyFixedRefFrame &ref1 = GLOBAL_REFERENCE_FRAME;
      #endif
      AnyRefFrame &ref2 =...BODYMODEL_FOLDER.Trunk.SegmentsLumbar.PelvisSeg.AnatomicalFrame;
    };
    MeasureOrganizer = {2};
    #var DriverPos={.JntPos.PelvisPosZ};
    DriverVel={.JntVel.PelvisPosZ};
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
     #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};};
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif

  
  #if MANNEQUIN_DRIVER_PELVIS_ROT_Z
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_PELVIS_ROT_Z ON/OFF
  /// 
  AnyKinEqSimpleDriver PelvisGroundDriverRotZ ={
    AnyKinRotational rot ={
      #if GLOBAL_REFERENCE_FRAME_SWITCH == 0
        AnyFixedRefFrame &ref1 =..GenericGRF;
      #else
        AnyFixedRefFrame &ref1 = GLOBAL_REFERENCE_FRAME;
      #endif
      AnyRefFrame &ref2 =...BODYMODEL_FOLDER.Trunk.SegmentsLumbar.PelvisSeg.AnatomicalFrame;
      Type=RotAxesAngles;
    };
    MeasureOrganizer = {0};
    #var DriverPos=pi/180*{.JntPos.PelvisRotZ};
    DriverVel=pi/180*{.JntVel.PelvisRotZ};
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};};
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif
  
  
  #if MANNEQUIN_DRIVER_PELVIS_ROT_Y
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_PELVIS_ROT_Y ON/OFF
  /// 
  AnyKinEqSimpleDriver PelvisGroundDriverRotY ={
    AnyKinRotational rot ={
      #if GLOBAL_REFERENCE_FRAME_SWITCH == 0
        AnyFixedRefFrame &ref1 =..GenericGRF;
      #else
        AnyFixedRefFrame &ref1 = GLOBAL_REFERENCE_FRAME;
      #endif
      AnyRefFrame &ref2 =...BODYMODEL_FOLDER.Trunk.SegmentsLumbar.PelvisSeg.AnatomicalFrame;
      Type=RotAxesAngles;
    };
    MeasureOrganizer = {1};
    #var DriverPos=pi/180*{.JntPos.PelvisRotY};
    DriverVel=pi/180*{.JntVel.PelvisRotY};
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};};
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif
  
  
  #if MANNEQUIN_DRIVER_PELVIS_ROT_X
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_PELVIS_ROT_X ON/OFF
  /// 
  AnyKinEqSimpleDriver PelvisGroundDriverRotX ={
    AnyKinRotational rot ={
      #if GLOBAL_REFERENCE_FRAME_SWITCH == 0
        AnyFixedRefFrame &ref1 =..GenericGRF;
      #else
        AnyFixedRefFrame &ref1 = GLOBAL_REFERENCE_FRAME
      #endif
      AnyRefFrame &ref2 =...BODYMODEL_FOLDER.Trunk.SegmentsLumbar.PelvisSeg.AnatomicalFrame;
      Type=RotAxesAngles;
    };
    MeasureOrganizer = {2};
    #var DriverPos=pi/180*{.JntPos.PelvisRotX};
    DriverVel=pi/180*{.JntVel.PelvisRotX};
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};};
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif
  
  
  
  
  
  
  // ************************************
  // Drivers for the spine
  // ************************************
  #if TRUNK_LUMBAR_RHYTHM == 0
    AnyMessage LumbarSpineMannequinDrivers = {TriggerPreProcess=On;Type=MSG_Message; Message="Please note that BM_SPINE_RHYTHM is set to OFF; No default mannequin drivers are used to drive lumbar spine joints.";};
  #endif
  
   #if MANNEQUIN_DRIVER_SKULL_THORAX_FLEXION
     /// Enabled/disabled with:
     /// #define BM_MANNEQUIN_DRIVER_SKULL_THORAX_FLEXION ON/OFF
     /// 
     AnyKinEqSimpleDriver SkullThoraxFlexionDriver = {
       AnyKinMeasure& SkullThoraxFlexion = ..BODYMODEL_FOLDER.Interface.Trunk.SkullThoraxFlexion;

       #var DriverPos= pi/180*{-.JntPos.NeckExtension};
       DriverVel = pi/180*{-.JntVel.NeckExtension};
       Reaction = {#var Type = {Off};};
       #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
         #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
         AnyFolder Weights = 
         {
           AnyFunConst Fun = {
             #var Value = {..WeakDriverWeight};
           };
         };
         #var WeightFun = {&Weights.Fun};
         CType = {Soft};
       #endif
     };
   #endif
   
   #if MANNEQUIN_DRIVER_SKULL_THORAX_LATERALBENDING
     /// Enabled/disabled with:
     /// #define BM_MANNEQUIN_DRIVER_SKULL_THORAX_LATERALBENDING ON/OFF
     /// 
     AnyKinEqSimpleDriver SkullThoraxLateralBendingDriver = {
       AnyKinMeasure& SkullThoraxLateralBending = ..BODYMODEL_FOLDER.Interface.Trunk.SkullThoraxLateralBending;

       #var DriverPos= pi/180*{-.JntPos.NeckLateralBending};
       DriverVel = pi/180*{-.JntVel.NeckLateralBending};
       Reaction = {#var Type = {Off};};
       #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
         #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
         AnyFolder Weights = 
         {
           AnyFunConst Fun = {
             #var Value = {..WeakDriverWeight};
           };
         };
         #var WeightFun = {&Weights.Fun};
         CType = {Soft};
       #endif
     };
   #endif
   
   #if MANNEQUIN_DRIVER_SKULL_THORAX_ROTATION
     /// Enabled/disabled with:
     /// #define BM_MANNEQUIN_DRIVER_SKULL_THORAX_ROTATION ON/OFF
     /// 
     AnyKinEqSimpleDriver SkullThoraxRotationDriver = {
       AnyKinMeasure& SkullThoraxRotation = ..BODYMODEL_FOLDER.Interface.Trunk.SkullThoraxRotation;

       #var DriverPos= pi/180*{-.JntPos.NeckRotation};
       DriverVel = pi/180*{-.JntVel.NeckRotation};
       Reaction = {#var Type = {Off};};
       #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
         #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
         AnyFolder Weights = 
         {
           AnyFunConst Fun = {
             #var Value = {..WeakDriverWeight};
           };
         };
         #var WeightFun = {&Weights.Fun};
         CType = {Soft};
       #endif
     };
   #endif  
  
  //Thorax pelvis rotation driver
  #if MANNEQUIN_DRIVER_PELVIS_THORAX_LATERAL_BENDING
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_SKULL_THORAX_ROTATION ON/OFF
  /// 
  AnyKinEqSimpleDriver PostureDriverBending ={
    AnyKinMeasure& Ref2 = ..BODYMODEL_FOLDER.Interface.Trunk.PelvisThoraxLateralBending;        
    #var DriverPos= pi/180*{.JntPos.PelvisThoraxLateralBending};
    DriverVel = pi/180*{.JntVel.PelvisThoraxLateralBending};
    Reaction = {#var Type = {Off};};  
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };  
  #endif

  #if MANNEQUIN_DRIVER_PELVIS_THORAX_ROTATION
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_PELVIS_THORAX_ROTATION ON/OFF
  /// 
  AnyKinEqSimpleDriver PostureDriverRotation ={
    AnyKinMeasure& Ref3 = ..BODYMODEL_FOLDER.Interface.Trunk.PelvisThoraxRotation;   
    #var DriverPos= pi/180*{.JntPos.PelvisThoraxRotation};
    DriverVel = pi/180*{.JntVel.PelvisThoraxRotation};
    Reaction = {#var Type = {Off};};  
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };  
  #endif
  
  #if MANNEQUIN_DRIVER_PELVIS_THORAX_EXTENSION
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_PELVIS_THORAX_EXTENSION ON/OFF
  /// 
  AnyKinEqSimpleDriver PostureDriverExtension ={
    AnyKinMeasure& Ref1 = ..BODYMODEL_FOLDER.Interface.Trunk.PelvisThoraxExtension;
    #var DriverPos= pi/180*{.JntPos.PelvisThoraxExtension};
    DriverVel = pi/180*{.JntVel.PelvisThoraxExtension};
    Reaction = {#var Type = {Off};};  
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };  
  #endif
  
  
  // ************************************
  // Drivers for the right arm
  // ************************************

  #if ARM_RIGHT == 1
  
  #if ARM_SHOULDER_RHYTHM == 0 
  
  //Sterno clavicular joint driver
  #if  MANNEQUIN_DRIVER_STERNOCLAVICULAR_PROTRACTION_RIGHT
    /// Enabled/disabled with:
    /// #define BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_PROTRACTION_RIGHT ON/OFF
    /// 
    AnyKinEqSimpleDriver SCProtractionDriverRight ={
    AnyKinMeasure& ref1 =..BODYMODEL_FOLDER.Interface.Right.SternoClavicularProtraction;
    #var DriverPos= pi/180*{.JntPos.Right.SternoClavicularProtraction};
    DriverVel = pi/180*{.JntVel.Right.SternoClavicularProtraction};
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif
  
  #if  MANNEQUIN_DRIVER_STERNOCLAVICULAR_ELEVATION_RIGHT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_ELEVATION_RIGHT ON/OFF
  /// 
  AnyKinEqSimpleDriver SCElevationDriverRight ={
    AnyKinMeasure& ref1 =..BODYMODEL_FOLDER.Interface.Right.SternoClavicularElevation;
    #var DriverPos= pi/180*{ .JntPos.Right.SternoClavicularElevation };
    DriverVel = pi/180*{ .JntVel.Right.SternoClavicularElevation };
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
    #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif
  
  #if  MANNEQUIN_DRIVER_STERNOCLAVICULAR_AXIAL_ROTATION_RIGHT & ARM_CLAVICULA_ROTATION_RHYTHM == 0
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_AXIAL_ROTATION_RIGHT ON/OFF
  /// 
  AnyKinEqSimpleDriver SCAxialRotationDriverRight ={
    AnyKinMeasure& ref1 =..BODYMODEL_FOLDER.Interface.Right.SternoClavicularAxialRotation;
    #var DriverPos= pi/180*{ .JntPos.Right.SternoClavicularAxialRotation  };
    DriverVel = pi/180*{ .JntVel.Right.SternoClavicularAxialRotation  };
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };  
  #endif
  
  #endif // ARM_SHOULDER_RHYTHM = 0 
  
  
  //Glenohumeral joint 
  #if MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_RIGHT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_RIGHT ON/OFF
  /// 
  AnyKinEqSimpleDriver GHDriverRightAbduction={
    AnyKinMeasure& ref1 =..BODYMODEL_FOLDER.Interface.Right.GlenohumeralAbduction;
     #var DriverPos=pi/180*{.JntPos.Right.GlenohumeralAbduction};
     DriverVel = pi/180*{.JntVel.Right.GlenohumeralAbduction};    
     Reaction = {#var Type={Off};};
     #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
       AnyFolder Weights = 
       {
         AnyFunConst Fun = {
           #var Value = {..WeakDriverWeight};
         };
       };
       #var WeightFun = {&Weights.Fun};
       #var CType = {Soft};
     #endif
  };
  #endif
  
  #if MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_RIGHT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_RIGHT ON/OFF
  /// 
  AnyKinEqSimpleDriver GHDriverRightFlexion={
    AnyKinMeasure& ref2 =..BODYMODEL_FOLDER.Interface.Right.GlenohumeralFlexion;
     #var DriverPos=pi/180*{.JntPos.Right.GlenohumeralFlexion};
     DriverVel = pi/180*{.JntVel.Right.GlenohumeralFlexion};    
     Reaction = {#var Type={Off};};
     #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
       AnyFolder Weights = 
       {
         AnyFunConst Fun = {
           #var Value = {..WeakDriverWeight};
         };
       };
       #var WeightFun = {&Weights.Fun};
       #var CType = {Soft};
     #endif
  };
  #endif
  
  #if MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_RIGHT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_RIGHT ON/OFF
  /// 
  AnyKinEqSimpleDriver GHDriverRightExternalRotation={
    AnyKinMeasure& ref3 =..BODYMODEL_FOLDER.Interface.Right.GlenohumeralExternalRotation;
     #var DriverPos=pi/180*{.JntPos.Right.GlenohumeralExternalRotation};
     DriverVel = pi/180*{.JntVel.Right.GlenohumeralExternalRotation};    
     Reaction = {#var Type={Off};};
     #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
       AnyFolder Weights = 
       {
         AnyFunConst Fun = {
           #var Value = {..WeakDriverWeight};
         };
       };
       #var WeightFun = {&Weights.Fun};
       #var CType = {Soft};
     #endif
  };
  #endif
  
  
  
  //Elbow flexion driver  
  #if MANNEQUIN_DRIVER_ELBOW_FLEXION_RIGHT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_ELBOW_FLEXION_RIGHT ON/OFF
  /// 
  AnyKinEqSimpleDriver ElbowFlexionDriverRight={
    AnyKinMeasureOrg  &Elbow =..BODYMODEL_FOLDER.Interface.Right.ElbowFlexion;
    #var DriverPos=pi/180*{.JntPos.Right.ElbowFlexion};  
    DriverVel = pi/180*{.JntVel.Right.ElbowFlexion};  
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};};
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif
  
  
  //Elbow pronation driver
  #if MANNEQUIN_DRIVER_ELBOW_PRONATION_RIGHT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_ELBOW_PRONATION_RIGHT ON/OFF
  ///  
  AnyKinEqSimpleDriver ElbowPronationDriverRight={
    AnyKinMeasure& Elbow =..BODYMODEL_FOLDER.Interface.Right.ElbowPronation;
    #var DriverPos= pi/180*{.JntPos.Right.ElbowPronation };  

    DriverVel=pi/180*{.JntVel.Right.ElbowPronation };  
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif

  
  
  //Wrist driver 
  #if MANNEQUIN_DRIVER_WRIST_FLEXION_RIGHT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_WRIST_FLEXION_RIGHT ON/OFF
  ///  
  AnyKinEqSimpleDriver WristDriverRightFlexion ={
    AnyKinMeasure& ref1 =..BODYMODEL_FOLDER.Interface.Right.WristFlexion;
    #var DriverPos= pi/180*{.JntPos.Right.WristFlexion};
    DriverVel = pi/180*{.JntVel.Right.WristFlexion};
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif
  
  #if MANNEQUIN_DRIVER_WRIST_ABDUCTION_RIGHT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_RIGHT ON/OFF
  ///  
  AnyKinEqSimpleDriver WristDriverRightAbduction ={
    AnyKinMeasure& ref2 =..BODYMODEL_FOLDER.Interface.Right.WristAbduction;
    #var DriverPos= pi/180*{.JntPos.Right.WristAbduction};
    DriverVel = pi/180*{.JntVel.Right.WristAbduction};
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif
  
  #endif

  

  // ************************************
  // Drivers for the left arm
  // ************************************
  
  #if ARM_LEFT == 1
  
  #if ARM_SHOULDER_RHYTHM == 0 
  
  //Sterno clavicular joint driver
  #if MANNEQUIN_DRIVER_STERNOCLAVICULAR_PROTRACTION_LEFT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_PROTRACTION_LEFT ON/OFF
  ///  
  AnyKinEqSimpleDriver SCProtractionDriverLeft ={
    AnyKinMeasure& ref1 =..BODYMODEL_FOLDER.Interface.Left.SternoClavicularProtraction;
    #var DriverPos= pi/180*{.JntPos.Left.SternoClavicularProtraction};
    DriverVel = pi/180*{.JntVel.Left.SternoClavicularProtraction};
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif
  
  #if  MANNEQUIN_DRIVER_STERNOCLAVICULAR_ELEVATION_LEFT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_ELEVATION_LEFT ON/OFF
  ///  
  AnyKinEqSimpleDriver SCElevationDriverLeft ={
    AnyKinMeasure& ref1 =..BODYMODEL_FOLDER.Interface.Left.SternoClavicularElevation;
    #var DriverPos= pi/180*{ .JntPos.Left.SternoClavicularElevation };
    DriverVel = pi/180*{ .JntVel.Left.SternoClavicularElevation };
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif
  
  #if  MANNEQUIN_DRIVER_STERNOCLAVICULAR_AXIAL_ROTATION_LEFT & ARM_CLAVICULA_ROTATION_RHYTHM == 0

  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_AXIAL_ROTATION_LEFT ON/OFF
  ///  
  AnyKinEqSimpleDriver SCAxialRotationDriverLeft ={
    AnyKinMeasure& ref1 =..BODYMODEL_FOLDER.Interface.Left.SternoClavicularAxialRotation;
    #var DriverPos= pi/180*{ .JntPos.Left.SternoClavicularAxialRotation  };
    DriverVel = pi/180*{ .JntVel.Left.SternoClavicularAxialRotation  };
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };  
  #endif
  #endif // ARM_SHOULDER_RHYTHM = 0 
  
  
  //Glenohumeral joint driver
  #if MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_LEFT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_LEFT ON/OFF
  ///  
  AnyKinEqSimpleDriver GHDriverLeftAbduction={
    AnyKinMeasure& ref1 =..BODYMODEL_FOLDER.Interface.Left.GlenohumeralAbduction;
    #var DriverPos=pi/180*{.JntPos.Left.GlenohumeralAbduction};    
    DriverVel = pi/180*{.JntVel.Left.GlenohumeralAbduction};    
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif
  
  #if MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_LEFT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_LEFT ON/OFF
  ///  
  AnyKinEqSimpleDriver GHDriverLeftFlexion={
    AnyKinMeasure& ref2 =..BODYMODEL_FOLDER.Interface.Left.GlenohumeralFlexion;
    #var DriverPos=pi/180*{.JntPos.Left.GlenohumeralFlexion};    
    DriverVel = pi/180*{.JntVel.Left.GlenohumeralFlexion};    
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};};
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif   
  };
  #endif

  #if MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_LEFT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_LEFT ON/OFF
  ///  
  AnyKinEqSimpleDriver GHDriverLeftExternalRotation={
    AnyKinMeasure& ref3 =..BODYMODEL_FOLDER.Interface.Left.GlenohumeralExternalRotation;
    #var DriverPos=pi/180*{.JntPos.Left.GlenohumeralExternalRotation};    
    DriverVel = pi/180*{.JntVel.Left.GlenohumeralExternalRotation};    
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif    
  };
  #endif

  //Elbow flexion driver  
  #if MANNEQUIN_DRIVER_ELBOW_FLEXION_LEFT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_ELBOW_FLEXION_LEFT ON/OFF
  ///  
  AnyKinEqSimpleDriver ElbowFlexionDriverLeft={
    AnyKinMeasureOrg  &Elbow =..BODYMODEL_FOLDER.Interface.Left.ElbowFlexion;
    #var DriverPos=pi/180*{.JntPos.Left.ElbowFlexion};  
    DriverVel = pi/180*{.JntVel.Left.ElbowFlexion};  
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif
  
  
  //Elbow pronation driver
  #if MANNEQUIN_DRIVER_ELBOW_PRONATION_LEFT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_ELBOW_PRONATION_LEFT ON/OFF
  ///  
  AnyKinEqSimpleDriver ElbowPronationDriverLeft={
    AnyKinMeasure& Elbow =..BODYMODEL_FOLDER.Interface.Left.ElbowPronation;
    #var DriverPos= pi/180*{.JntPos.Left.ElbowPronation };  
    DriverVel=pi/180*{.JntVel.Left.ElbowPronation };  
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif  
  
  //Wrist driver
  #if MANNEQUIN_DRIVER_WRIST_FLEXION_LEFT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_WRIST_FLEXION_LEFT ON/OFF
  ///  
  AnyKinEqSimpleDriver WristDriverLeftFlexion ={
    AnyKinMeasure& ref1 =..BODYMODEL_FOLDER.Interface.Left.WristFlexion;
    #var DriverPos= pi/180*{.JntPos.Left.WristFlexion};
    DriverVel = pi/180*{.JntVel.Left.WristFlexion};
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif
  
  #if MANNEQUIN_DRIVER_WRIST_ABDUCTION_LEFT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_LEFT ON/OFF
  ///  
  AnyKinEqSimpleDriver WristDriverLeftAbduction ={
    AnyKinMeasure& ref2 =..BODYMODEL_FOLDER.Interface.Left.WristAbduction;
    #var DriverPos= pi/180*{.JntPos.Left.WristAbduction};
    DriverVel = pi/180*{.JntVel.Left.WristAbduction};
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif  
  };
  #endif
  
  
  #endif //Left arm
  
  #if ARM_DETAILED_HAND 
  #if ARM_RIGHT & MANNEQUIN_DRIVER_HAND_RIGHT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_HAND_RIGHT ON/OFF
  ///  
  AnyKinEqSimpleDriver HandDriversRight ={
    AnyKinMeasure& CMC1Flexion = ..BODYMODEL_FOLDER.Interface.Right.CMCFlexion;
    AnyKinMeasure& CMC1Abduction = ..BODYMODEL_FOLDER.Interface.Right.CMCAbduction;
    AnyKinMeasure& MCP1Flexion = ..BODYMODEL_FOLDER.Interface.Right.MCPFlexion;
    AnyKinMeasure& MCP1Abduction = ..BODYMODEL_FOLDER.Interface.Right.MCPAbduction;
    AnyKinMeasure& DIP1 = ..BODYMODEL_FOLDER.Interface.Right.DIP;
    AnyKinMeasure& MCP2 = ..BODYMODEL_FOLDER.Right.ShoulderArm.Seg.Hand.Finger2.Jnt.MCP;
    AnyKinMeasure& PIP2 = ..BODYMODEL_FOLDER.Right.ShoulderArm.Seg.Hand.Finger2.Jnt.PIP;
    AnyKinMeasure& DIP2 = ..BODYMODEL_FOLDER.Right.ShoulderArm.Seg.Hand.Finger2.Jnt.DIP;
    AnyKinMeasure& MCP3 = ..BODYMODEL_FOLDER.Right.ShoulderArm.Seg.Hand.Finger3.Jnt.MCP;
    AnyKinMeasure& PIP3 = ..BODYMODEL_FOLDER.Right.ShoulderArm.Seg.Hand.Finger3.Jnt.PIP;
    AnyKinMeasure& DIP3 = ..BODYMODEL_FOLDER.Right.ShoulderArm.Seg.Hand.Finger3.Jnt.DIP;
    AnyKinMeasure& MCP4 = ..BODYMODEL_FOLDER.Right.ShoulderArm.Seg.Hand.Finger4.Jnt.MCP;
    AnyKinMeasure& PIP4 = ..BODYMODEL_FOLDER.Right.ShoulderArm.Seg.Hand.Finger4.Jnt.PIP;
    AnyKinMeasure& DIP4 = ..BODYMODEL_FOLDER.Right.ShoulderArm.Seg.Hand.Finger4.Jnt.DIP;
    AnyKinMeasure& MCP5 = ..BODYMODEL_FOLDER.Right.ShoulderArm.Seg.Hand.Finger5.Jnt.MCP;
    AnyKinMeasure& PIP5 = ..BODYMODEL_FOLDER.Right.ShoulderArm.Seg.Hand.Finger5.Jnt.PIP;
    AnyKinMeasure& DIP5 = ..BODYMODEL_FOLDER.Right.ShoulderArm.Seg.Hand.Finger5.Jnt.DIP;    
    #var DriverPos= pi/180*{
      .JntPos.Right.Finger1.CMCFlexion,
      .JntPos.Right.Finger1.CMCDeviation,
      .JntPos.Right.Finger1.MCPFlexion,
      .JntPos.Right.Finger1.MCPDeviation,
      .JntPos.Right.Finger1.DIPFlexion,
      .JntPos.Right.Finger2.MCPFlexion,
      .JntPos.Right.Finger2.PIPFlexion,
      .JntPos.Right.Finger2.DIPFlexion,
      .JntPos.Right.Finger3.MCPFlexion,
      .JntPos.Right.Finger3.PIPFlexion,
      .JntPos.Right.Finger3.DIPFlexion,
      .JntPos.Right.Finger4.MCPFlexion,
      .JntPos.Right.Finger4.PIPFlexion,
      .JntPos.Right.Finger4.DIPFlexion,
      .JntPos.Right.Finger5.MCPFlexion,
      .JntPos.Right.Finger5.PIPFlexion,
      .JntPos.Right.Finger5.DIPFlexion   
    };
    DriverVel = pi/180*{
      .JntVel.Right.Finger1.CMCFlexion,
      .JntVel.Right.Finger1.CMCDeviation,
      .JntVel.Right.Finger1.MCPFlexion,
      .JntVel.Right.Finger1.MCPDeviation,
      .JntVel.Right.Finger1.DIPFlexion,
      .JntVel.Right.Finger2.MCPFlexion,
      .JntVel.Right.Finger2.PIPFlexion,
      .JntVel.Right.Finger2.DIPFlexion,
      .JntVel.Right.Finger3.MCPFlexion,
      .JntVel.Right.Finger3.PIPFlexion,
      .JntVel.Right.Finger3.DIPFlexion,
      .JntVel.Right.Finger4.MCPFlexion,
      .JntVel.Right.Finger4.PIPFlexion,
      .JntVel.Right.Finger4.DIPFlexion,
      .JntVel.Right.Finger5.MCPFlexion,
      .JntVel.Right.Finger5.PIPFlexion,
      .JntVel.Right.Finger5.DIPFlexion   
    };    
    Reaction = {#var Type= repmat(.nDim, Off);};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun};
      #var CType = repmat(nDim, Soft);
    #endif  
  };
  #endif // MANNEQUIN_DRIVER_HAND
  
  
  #if ARM_LEFT & MANNEQUIN_DRIVER_HAND_LEFT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_HAND_LEFT ON/OFF
  ///  
  AnyKinEqSimpleDriver HandDriversLeft ={
    AnyKinMeasure& CMC1Flexion = ..BODYMODEL_FOLDER.Interface.Left.CMCFlexion;
    AnyKinMeasure& CMC1Abduction = ..BODYMODEL_FOLDER.Interface.Left.CMCAbduction;
    AnyKinMeasure& MCP1Flexion = ..BODYMODEL_FOLDER.Interface.Left.MCPFlexion;
    AnyKinMeasure& MCP1Abduction = ..BODYMODEL_FOLDER.Interface.Left.MCPAbduction;
    AnyKinMeasure& DIP1 = ..BODYMODEL_FOLDER.Interface.Left.DIP;
    AnyKinMeasure& MCP2 = ..BODYMODEL_FOLDER.Left.ShoulderArm.Seg.Hand.Finger2.Jnt.MCP;
    AnyKinMeasure& PIP2 = ..BODYMODEL_FOLDER.Left.ShoulderArm.Seg.Hand.Finger2.Jnt.PIP;
    AnyKinMeasure& DIP2 = ..BODYMODEL_FOLDER.Left.ShoulderArm.Seg.Hand.Finger2.Jnt.DIP;
    AnyKinMeasure& MCP3 = ..BODYMODEL_FOLDER.Left.ShoulderArm.Seg.Hand.Finger3.Jnt.MCP;
    AnyKinMeasure& PIP3 = ..BODYMODEL_FOLDER.Left.ShoulderArm.Seg.Hand.Finger3.Jnt.PIP;
    AnyKinMeasure& DIP3 = ..BODYMODEL_FOLDER.Left.ShoulderArm.Seg.Hand.Finger3.Jnt.DIP;
    AnyKinMeasure& MCP4 = ..BODYMODEL_FOLDER.Left.ShoulderArm.Seg.Hand.Finger4.Jnt.MCP;
    AnyKinMeasure& PIP4 = ..BODYMODEL_FOLDER.Left.ShoulderArm.Seg.Hand.Finger4.Jnt.PIP;
    AnyKinMeasure& DIP4 = ..BODYMODEL_FOLDER.Left.ShoulderArm.Seg.Hand.Finger4.Jnt.DIP;
    AnyKinMeasure& MCP5 = ..BODYMODEL_FOLDER.Left.ShoulderArm.Seg.Hand.Finger5.Jnt.MCP;
    AnyKinMeasure& PIP5 = ..BODYMODEL_FOLDER.Left.ShoulderArm.Seg.Hand.Finger5.Jnt.PIP;
    AnyKinMeasure& DIP5 = ..BODYMODEL_FOLDER.Left.ShoulderArm.Seg.Hand.Finger5.Jnt.DIP;    
    #var DriverPos= pi/180*{
      .JntPos.Left.Finger1.CMCFlexion,
      .JntPos.Left.Finger1.CMCDeviation,
      .JntPos.Left.Finger1.MCPFlexion,
      .JntPos.Left.Finger1.MCPDeviation,
      .JntPos.Left.Finger1.DIPFlexion,
      .JntPos.Left.Finger2.MCPFlexion,
      .JntPos.Left.Finger2.PIPFlexion,
      .JntPos.Left.Finger2.DIPFlexion,
      .JntPos.Left.Finger3.MCPFlexion,
      .JntPos.Left.Finger3.PIPFlexion,
      .JntPos.Left.Finger3.DIPFlexion,
      .JntPos.Left.Finger4.MCPFlexion,
      .JntPos.Left.Finger4.PIPFlexion,
      .JntPos.Left.Finger4.DIPFlexion,
      .JntPos.Left.Finger5.MCPFlexion,
      .JntPos.Left.Finger5.PIPFlexion,
      .JntPos.Left.Finger5.DIPFlexion   
    };
    DriverVel = pi/180*{
      .JntVel.Left.Finger1.CMCFlexion,
      .JntVel.Left.Finger1.CMCDeviation,
      .JntVel.Left.Finger1.MCPFlexion,
      .JntVel.Left.Finger1.MCPDeviation,
      .JntVel.Left.Finger1.DIPFlexion,
      .JntVel.Left.Finger2.MCPFlexion,
      .JntVel.Left.Finger2.PIPFlexion,
      .JntVel.Left.Finger2.DIPFlexion,
      .JntVel.Left.Finger3.MCPFlexion,
      .JntVel.Left.Finger3.PIPFlexion,
      .JntVel.Left.Finger3.DIPFlexion,
      .JntVel.Left.Finger4.MCPFlexion,
      .JntVel.Left.Finger4.PIPFlexion,
      .JntVel.Left.Finger4.DIPFlexion,
      .JntVel.Left.Finger5.MCPFlexion,
      .JntVel.Left.Finger5.PIPFlexion,
      .JntVel.Left.Finger5.DIPFlexion   
    };    
    Reaction = {#var Type= repmat(.nDim, Off);};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun,&Weights.Fun};
      #var CType = repmat(nDim, Soft);
    #endif  
  };
  #endif // MANNEQUIN_DRIVER_HAND  
  
  #endif //Detailed hand
  
  
  
  
 
  // ************************************
  // Drivers for the right leg
  // ************************************
  
  #if LEG_RIGHT == 1
  
   //Hip driver 
  #if MANNEQUIN_DRIVER_HIP_FLEXION_RIGHT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_HIP_FLEXION_RIGHT ON/OFF
  ///  
  AnyKinEqSimpleDriver HipDriverRightFlexion={
    AnyKinMeasure& ref1 =..BODYMODEL_FOLDER.Interface.Right.HipFlexion;
    #var DriverPos= pi/180*{.JntPos.Right.HipFlexion};    
    DriverVel = pi/180*{.JntVel.Right.HipFlexion};    
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif  
  };
  #endif
  
  #if MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_RIGHT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_RIGHT ON/OFF
  ///  
  AnyKinEqSimpleDriver HipDriverRightExternalRotation={
    AnyKinMeasure& ref2 =..BODYMODEL_FOLDER.Interface.Right.HipExternalRotation;
    #var DriverPos= pi/180*{.JntPos.Right.HipExternalRotation};    
    DriverVel = pi/180*{.JntVel.Right.HipExternalRotation};    
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif    
  };
  #endif
  
  #if MANNEQUIN_DRIVER_HIP_ABDUCTION_RIGHT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_HIP_ABDUCTION_RIGHT ON/OFF
  ///  
  AnyKinEqSimpleDriver HipDriverRightAbduction={
    AnyKinMeasure& ref3 =..BODYMODEL_FOLDER.Interface.Right.HipAbduction;
    #var DriverPos= pi/180*{.JntPos.Right.HipAbduction};    
    DriverVel = pi/180*{.JntVel.Right.HipAbduction};    
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif    
  };
  #endif
  
  
   
  //Knee driver
  #if MANNEQUIN_DRIVER_KNEE_FLEXION_RIGHT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_KNEE_FLEXION_RIGHT ON/OFF
  ///  
  AnyKinEqSimpleDriver KneeDriverRight={
    AnyKinMeasure  &Knee = ..BODYMODEL_FOLDER.Interface.Right.KneeFlexion;
    #var DriverPos=pi/180*{.JntPos.Right.KneeFlexion};  
    DriverVel = pi/180*{.JntVel.Right.KneeFlexion};  
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif
  
  
  //Ankle driver
  #if FOOT_MODEL == FOOT_MODEL_DEFAULT
  #if MANNEQUIN_DRIVER_ANKLE_FLEXION_RIGHT 
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_ANKLE_FLEXION_RIGHT ON/OFF
  ///  
  AnyKinEqSimpleDriver AnkleDriverRightFlexion={
    AnyKinMeasure& ref1=..BODYMODEL_FOLDER.Interface.Right.AnklePlantarFlexion;
    #var DriverPos= pi/180*{.JntPos.Right.AnklePlantarFlexion};  
    DriverVel=pi/180*{.JntVel.Right.AnklePlantarFlexion};  
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
  };
  #endif
  
  #if LEG_RIGHT & (LEG_MODEL == LEG_MODEL_Leg)
   #if MANNEQUIN_DRIVER_ANKLE_EVERSION_RIGHT
   /// Enabled/disabled with:
   /// #define BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_RIGHT ON/OFF
   ///  
   AnyKinEqSimpleDriver AnkleDriverRightEversion={
     AnyKinMeasure& ref2=..BODYMODEL_FOLDER.Interface.Right.AnkleEversion;
     #var DriverPos= pi/180*{.JntPos.Right.SubTalarEversion};  
     DriverVel=pi/180*{.JntVel.Right.SubTalarEversion};  
     Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif   
   };
   #endif
  #endif
 
  
  #if LEG_RIGHT & (LEG_MODEL == LEG_MODEL_TLEM | LEG_MODEL == LEG_MODEL_TLEM2)
   #if MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_RIGHT
   /// Enabled/disabled with:
   /// #define BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_RIGHT ON/OFF
   ///  
   AnyKinEqSimpleDriver AnkleDriverRightEversion={
     AnyKinMeasure& ref=..BODYMODEL_FOLDER.Interface.Right.SubTalarEversion;
     #var DriverPos= pi/180*{.JntPos.Right.SubTalarEversion};  
     DriverVel=pi/180*{.JntVel.Right.SubTalarEversion};  
     Reaction = {#var Type={Off};};
     #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif
   };
   #endif
  #endif
  
  #endif 
  
#endif
  

  // ************************************
  // Drivers for the Left leg
  // ************************************
  
  #if LEG_LEFT == 1 
  
  //Left hip driver
  #if MANNEQUIN_DRIVER_HIP_FLEXION_LEFT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_HIP_FLEXION_LEFT ON/OFF
  ///  
  AnyKinEqSimpleDriver HipDriverLeftFlexion={
    AnyKinMeasure& ref1 =..BODYMODEL_FOLDER.Interface.Left.HipFlexion;
    #var DriverPos=pi/180*{.JntPos.Left.HipFlexion};    
    DriverVel = pi/180*{.JntVel.Left.HipFlexion};    
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif  
  };
  #endif
  
  #if MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_LEFT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_LEFT ON/OFF
  ///  
  AnyKinEqSimpleDriver HipDriverLeftExternalRotation={
    AnyKinMeasure& ref2 =..BODYMODEL_FOLDER.Interface.Left.HipExternalRotation;
    #var DriverPos=pi/180*{.JntPos.Left.HipExternalRotation};    
    DriverVel = pi/180*{.JntVel.Left.HipExternalRotation};    
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif  
  };
  #endif
  
  #if MANNEQUIN_DRIVER_HIP_ABDUCTION_LEFT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_HIP_ABDUCTION_LEFT ON/OFF
  ///  
  AnyKinEqSimpleDriver HipDriverLeftAbduction={
    AnyKinMeasure& ref3 =..BODYMODEL_FOLDER.Interface.Left.HipAbduction;
    #var DriverPos=pi/180*{.JntPos.Left.HipAbduction};    
    DriverVel = pi/180*{.JntVel.Left.HipAbduction};    
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif    
  };
  #endif
  
  
  
  //Knee driver
  #if MANNEQUIN_DRIVER_KNEE_FLEXION_LEFT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_KNEE_FLEXION_LEFT ON/OFF
  ///  
  AnyKinEqSimpleDriver KneeDriverLeft={
    AnyKinMeasure& Knee =..BODYMODEL_FOLDER.Interface.Left.KneeFlexion;
    #var DriverPos=pi/180*{.JntPos.Left.KneeFlexion   };  
    DriverVel = pi/180*{.JntVel.Left.KneeFlexion   };  
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif   
  };
  #endif
  

  
 
  //Ankle driver
  #if FOOT_MODEL == FOOT_MODEL_DEFAULT
  
  #if MANNEQUIN_DRIVER_ANKLE_FLEXION_LEFT
  /// Enabled/disabled with:
  /// #define BM_MANNEQUIN_DRIVER_ANKLE_FLEXION_LEFT ON/OFF
  ///  
  AnyKinEqSimpleDriver AnkleDriverLeftFlexion={
    AnyKinMeasure& ref1=..BODYMODEL_FOLDER.Interface.Left.AnklePlantarFlexion;
    #var DriverPos= pi/180*{.JntPos.Left.AnklePlantarFlexion};  
    DriverVel=pi/180*{.JntVel.Left.AnklePlantarFlexion};  
    Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif   
  };
  #endif
  
  
  #if LEG_LEFT & (LEG_MODEL == LEG_MODEL_Leg)
   #if MANNEQUIN_DRIVER_ANKLE_EVERSION_LEFT
   /// Enabled/disabled with:
   /// #define BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_LEFT ON/OFF
   ///  
   AnyKinEqSimpleDriver AnkleDriverLeftEversion={
     AnyKinMeasure& ref2=..BODYMODEL_FOLDER.Interface.Left.AnkleEversion;
     #var DriverPos= pi/180*{.JntPos.Left.SubTalarEversion};  
     DriverVel=pi/180*{.JntVel.Left.SubTalarEversion};  
     Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif    
   };
   #endif
  #endif

  #if LEG_LEFT & (LEG_MODEL == LEG_MODEL_TLEM | LEG_MODEL == LEG_MODEL_TLEM2 )
  
   #if MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_LEFT
   /// Enabled/disabled with:
   /// #define BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_LEFT ON/OFF
   ///  
   AnyKinEqSimpleDriver AnkleDriverLeftEversion={
     AnyKinMeasure& ref2=..BODYMODEL_FOLDER.Interface.Left.SubTalarEversion;
     #var DriverPos= pi/180*{.JntPos.Left.SubTalarEversion};  
     DriverVel=pi/180*{.JntVel.Left.SubTalarEversion};  
     Reaction = {#var Type={Off};};
    #if MANNEQUIN_DRIVER_WEAK_SWITCH == 1
      #var AnyVar WeakDriverWeight = .DefaultWeakDriverWeight;
      AnyFolder Weights = 
      {
        AnyFunConst Fun = {
          #var Value = {..WeakDriverWeight};
        };
      };
      #var WeightFun = {&Weights.Fun};
      #var CType = {Soft};
    #endif   
   };
   #endif
  #endif
  
  #endif
  
  #endif
  
  
};
