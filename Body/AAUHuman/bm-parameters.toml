
[constants.ON]
default = "1"
nicename = "On"
text = "Switch ON"

[constants.OFF]
default = "0"
nicename = "Off"
text = "Switch OFF"

[constants._MUSCLES_NONE_]
default = "0"
valuetype = "integer"
descr = "Constant to switch off muscles"
nicename = "No Muscles"

[constants._MUSCLES_SIMPLE_]
default = "1"
valuetype = "integer"
descr = "Constant to use simple muscles"
nicename = "Simple Muscles"

[constants._MUSCLES_3E_HILL_]
default = "2"
valuetype = "integer"
descr = "Constant to use 3 element Hill-type muscle"
nicename = "Hill Muscles"

[constants._LEG_MODEL_OFF_]
default = "0"
valuetype = "integer"
descr = "Switch off a leg"

[constants._LEG_MODEL_TLEM_]
default = "1"
valuetype = "integer"
descr = "Switch to use leg model: \"TLEM 1\""
nicename = "TLEM Leg"

[constants._LEG_MODEL_TLEM1_]
default = "1"
valuetype = "integer"
descr = "Switch to use leg model: \"TLEM 1\""
nicename = "TLEM Leg"

[constants._LEG_MODEL_TLEM2_]
default = "2"
valuetype = "integer"
descr = "Switch to use leg model: \"TLEM 2\""
nicename = "TLEM Leg v2"

[constants._LEG_MODEL_LEG_]
default = "3"
valuetype = "integer"
descr = "Switch to use leg model: \"Leg\""
nicename = "Simple Leg"

[constants._FOOT_MODEL_DEFAULT_]
default = "0"
valuetype = "integer"
descr = "Switch for using the default foot model"

[constants._FOOT_MODEL_NONE_]
default = "1"
valuetype = "integer"
descr = "Switch for using the GM foot model\""

[constants._ELLIPSOID_CONTACT_]
default = "1"
valuetype = "integer"
descr = "Switch for using ellipsoid contact between scapula and thorax"

[constants._MULTIPLE_POINT_CONTACT_]
default = "0"
valuetype = "integer"
descr = "Switch for using multiple point contact between scapula and thorax\""

[constants._DELTOID_WRAPPING_RAKE_]
default = "0"
valuetype = "integer"
descr = "Switch for using pre AMMR 2.2. rake implementation for deltoid wrapping"

[constants._DELTOID_WRAPPING_CYLINDERS_]
default = "1"
valuetype = "integer"
descr = "Switch for using mulitple cylinder in the deltroid wrapping"

[constants._DELTOID_WRAPPING_ELIPSOIDS_]
default = "2"
valuetype = "integer"
descr = "Switch for using multiple elipsoids in the deltoid wrapping\""

[constants._MORPH_NONE_]
default = "0"
valuetype = "integer"
descr = "Constant for no-morphing between the upper and lower bodies."
nicename = "No interface"

[constants._MORPH_TRUNK_TO_LEG_]
default = "1"
valuetype = "integer"
descr = "Constant for the trunk-to-leg morphing"
nicename = "Trunk to Leg"

[constants._MORPH_LEG_TO_TRUNK_]
default = "2"
valuetype = "integer"
descr = "Constant for the leg-to-trunk morhping"
nicename = "Leg to Trunk"

[constants._PELVIS_DISPLAY_NONE_]
default = "0"
valuetype = "integer"
descr = "Constant to switch off pelvis visualization"

[constants._PELVIS_DISPLAY_LEGPELVIS_ONLY_]
default = "1"
valuetype = "integer"
descr = "Constant to display leg-dependent pevlis only"

[constants._PELVIS_DISPLAY_LEGANDTRUNKPELVIS_]
default = "2"
valuetype = "integer"
descr = "Constant to display both trunk and leg pelvises"

[constants._DISC_STIFFNESS_NONE_]
default = "0"
valuetype = "integer"
descr = "Constant to switch off disc spring in the spine"
nicename = "No Stiffness"

[constants._DISC_STIFFNESS_LINEAR_]
default = "1"
valuetype = "integer"
descr = "Constant to switch linear disc spring on in the spine"
nicename = "Linear Stiffness"

[constants._DISC_STIFFNESS_NONLINEAR_]
default = "2"
valuetype = "integer"
descr = "Constant to switch nonlinear disc spring on in the spine"
nicename = "Nonlinear Stiffness"

[constants._RHYTHM_SOFT_]
default = "2"
valuetype = "integer"
descr = "Constant to switch kinematic rhythms as soft contraints"
nicename = "Soft rhythm"

[constants._SCALING_NONE_]
default = "0"
valuetype = "integer"
descr = "A scaling law to use body part datasets as is without any scaling."

[constants._SCALING_STANDARD_]
default = "1"
valuetype = "integer"
descr = "A default scaling law that corresponds to the 50th percentile European male."

[constants._SCALING_UNIFORM_]
default = "2"
valuetype = "integer"
descr = "Uniform anthropometric scaling law to be used by the entire model."

[constants._SCALING_LENGTHMASS_]
default = "3"
valuetype = "integer"
descr = "Length/mass anthropometric scaling law to be used by the entire model."

[constants._SCALING_LENGTHMASSFAT_]
default = "4"
valuetype = "integer"
descr = "Length/mass/fat anthropometric scaling law to be used by the entire model."

[constants._SCALING_UNIFORM_EXTMEASUREMENTS_]
default = "5"
valuetype = "integer"
descr = "Uniform anthropometric scaling law  with external measurements to be used by the entire model."

[constants._SCALING_LENGTHMASS_EXTMEASUREMENTS_]
default = "6"
valuetype = "integer"
descr = "Length/mass anthropometric with external measurements scaling law to be used by the entire model."

[constants._SCALING_LENGTHMASSFAT_EXTMEASUREMENTS_]
default = "7"
valuetype = "integer"
descr = "Length/mass/fat anthropometric with external measurements scaling law to be used by the entire model."

[constants._SCALING_LENGTHMASSFAT_MULTIDOFS_]
deprecated = "true"
default = "8"
valuetype = "integer"
descr = "Length/mass/fat anthropometric with for multiple degree of freedom."

[constants._SCALING_XYZ_]
default = "9"
valuetype = "integer"
descr = "Scaling using xyz factors for all Segments."

[constants._SCALING_CUSTOM_]
deprecated = "true"
default = "10"
valuetype = "integer"
descr = "Custom anthropometric scaling law for the entire model"

[constants._SCALING_USERDEFINED_]
default = "10"
valuetype = "integer"
descr = "Don't use a builtin scaling law. A user-defined law must be specified with ``BM_SCALING_FILE``."

[constants._JOINT_TYPE_USERDEFINED_]
default = "0"
valuetype = "integer"
descr = "User-defined joint. This will exclude the joint and which nodes."

[constants._JOINT_TYPE_DEFAULT_]
default = "1"
valuetype = "integer"
descr = "Default joint definition."

[constants._JOINT_TYPE_BONY_LANDMARK_]
default = "2"
valuetype = "integer"
descr = "Joint definition based on bony landmarks. This will create a joint which resembles what is often used in traditional gait analysis. (E.g. revolute knee joint along the femoral condyles)."

[constants._CALIBRATION_TYPE_1PAR_]
default = "1"
valuetype = "integer"
descr = "Constant to use 1 parameter muscle tendon calibration"

[constants._CALIBRATION_TYPE_2PAR_]
default = "2"
valuetype = "integer"
descr = "Constant to use 2 parameter muscle tendon calibration"

[constants._CALIBRATION_TYPE_CUSTOM_]
default = "0"
valuetype = "integer"
descr = "Use custom calibration. I.e. diables calibration so the user can add their own code."

[constants.CONST_MUSCLES_NONE]
deprecated = "true"
default = "0"
valuetype = "integer"
descr = "Constant to switch off muscles"

[constants.CONST_MUSCLES_SIMPLE]
deprecated = "true"
default = "1"
valuetype = "integer"
descr = "Constant to use simple muscles"

[constants.CONST_MUSCLES_3E_HILL]
deprecated = "true"
default = "2"
valuetype = "integer"
descr = "Constant to use 3 element Hill-type muscle"

[constants.CONST_HAND_SIMPLE]
deprecated = "true"
default = "0"
valuetype = "integer"
descr = "Constant to use simplified hand model"

[constants.CONST_HAND_DETAILED]
deprecated = "true"
default = "1"
valuetype = "integer"
descr = "Constant to use detailed hand model"

[constants.CONST_LEG_MODEL_OFF]
deprecated = "true"
default = "0"
valuetype = "integer"
descr = "Switch off a leg"

[constants.CONST_LEG_MODEL_TLEM]
deprecated = "true"
default = "1"
valuetype = "integer"
descr = "Switch to use leg model: \"TLEM 1\""

[constants.CONST_LEG_MODEL_TLEM2]
deprecated = "true"
default = "2"
valuetype = "integer"
descr = "Switch to use leg model: \"TLEM 2\""

[constants.CONST_LEG_MODEL_Leg]
deprecated = "true"
default = "3"
valuetype = "integer"
descr = "Switch to use leg model: \"Leg\""

[constants.CONST_MORPH_NONE]
deprecated = "true"
default = "0"
valuetype = "integer"
descr = "Constant for no-morphing between the upper and lower bodies."

[constants.CONST_MORPH_TRUNK_TO_LEG]
deprecated = "true"
default = "1"
valuetype = "integer"
descr = "Constant for the trunk-to-leg morphing"

[constants.CONST_MORPH_LEG_TO_TRUNK]
deprecated = "true"
default = "2"
valuetype = "integer"
descr = "Constant for the leg-to-trunk morhping"

[constants.CONST_PELVIS_DISPLAY_NONE]
deprecated = "true"
default = "0"
valuetype = "integer"
descr = "Constant to switch off pelvis visualization"

[constants.CONST_PELVIS_DISPLAY_LEGPELVIS_ONLY]
deprecated = "true"
default = "1"
valuetype = "integer"
descr = "Constant to display leg-dependent pevlis only"

[constants.CONST_PELVIS_DISPLAY_LEGANDTRUNKPELVIS]
deprecated = "true"
default = "2"
valuetype = "integer"
descr = "Constant to display both trunk and leg pelvises"

[constants.CONST_DISC_STIFFNESS_NONE]
deprecated = "true"
default = "0"
valuetype = "integer"
descr = "Constant to switch off disc spring in the spine"

[constants.CONST_DISC_STIFFNESS_LINEAR]
deprecated = "true"
default = "1"
valuetype = "integer"
descr = "Constant to switch linear disc spring on in the spine"

[constants."CONST_DISC_STIFFNESS_NONLINEAR "]
deprecated = "true"
default = "2"
valuetype = "integer"
descr = "Constant to switch nonlinear disc spring on in the spine"

[constants.CONST_SCALING_STANDARD]
deprecated = "true"
default = "1"
valuetype = "integer"
descr = "Standard scaling law to be used by the entire model."

[constants.CONST_SCALING_UNIFORM]
deprecated = "true"
default = "2"
valuetype = "integer"
descr = "Uniform anthropometric scaling law to be used by the entire model."

[constants.CONST_SCALING_LENGTHMASS]
deprecated = "true"
default = "3"
valuetype = "integer"
descr = "Length/mass anthropometric scaling law to be used by the entire model."

[constants.CONST_SCALING_LENGTHMASSFAT]
deprecated = "true"
default = "4"
valuetype = "integer"
descr = "Length/mass/fat anthropometric scaling law to be used by the entire model."

[constants.CONST_SCALING_UNIFORM_EXTMEASUREMENTS]
deprecated = "true"
default = "5"
valuetype = "integer"
descr = "Uniform anthropometric scaling law  with external measurements to be used by the entire model."

[constants.CONST_SCALING_LENGTHMASS_EXTMEASUREMENTS]
deprecated = "true"
default = "6"
valuetype = "integer"
descr = "Length/mass anthropometric with external measurements scaling law to be used by the entire model."

[constants.CONST_SCALING_LENGTHMASSFAT_EXTMEASUREMENTS]
deprecated = "true"
default = "7"
valuetype = "integer"
descr = "Length/mass/fat anthropometric with external measurements scaling law to be used by the entire model."

[constants.CONST_SCALING_LENGTHMASSFAT_MULTIDOFS]
deprecated = "true"
default = "8"
valuetype = "integer"
descr = "Length/mass/fat anthropometric with for multiple degree of freedom."

[constants.CONST_SCALING_CUSTOM]
deprecated = "true"
default = "10"
valuetype = "integer"
descr = "Custom anthropometric scaling law for the entire model"

[parameters.BM_SCALING]
default = "_SCALING_STANDARD_"
valuetype = "integer"
descr = "Definition of an anthropometric scaling law"
opt = [ "_SCALING_NONE_", "_SCALING_STANDARD_", "_SCALING_UNIFORM_", "_SCALING_LENGTHMASS_", "_SCALING_LENGTHMASSFAT_", "_SCALING_UNIFORM_EXTMEASUREMENTS_", "_SCALING_LENGTHMASS_EXTMEASUREMENTS_", "_SCALING_LENGTHMASSFAT_EXTMEASUREMENTS_", "_SCALING_XYZ_", "_SCALING_USERDEFINED_",]

[parameters.BM_SCALING_ANTHRO_FILE]
type = "#path"
valuetype = "string"
descr = "Custom file with all anthropometric measurements used by the scaling law. This is some times called the AnyMan file."

[parameters.BM_SCALING_MY_FILE]
deprecated = "true"
type = "#path"
valuetype = "string"
descr = "Path with the ScalingLaw used. Can be set to override the BM_SCALING parameter and select a custom scaling law."

[parameters.BM_SCALING_FILE]
type = "#path"
valuetype = "string"
descr = "Path with the ScalingLaw used. Can be set to override the BM_SCALING parameter and select a user defined scaling law."

[parameters.BM_SCALING_STANDARDPARAM_EXTERIOR]
default = "OFF"
valuetype = "integer"
descr = "Specifies if the standard parameters and anthropometrics parameters are given as external measurements. This defaults to OFF, which means that all segment length are joint-joint distances. This is set automatically based on the ``BM_SCALING`` parameter, but can be overridden if you implement your own scaling law and need to use external mesaurements."

[parameters.BM_CONFIG_MESSAGES]
default = "OFF"
valuetype = "integer"
descr = "Switch for automatic display of all configuration values"

[parameters.BM_CONFIG_VALUES]
default = "OFF"
valuetype = "integer"
descr = "Switch for enabling configuration value information in the model tree"

[parameters.BM_DRAWSETTINGS_FILE]
type = "#path"
valuetype = "string"
descr = "A file with draw settings"

[parameters.BM_DRAWSETTINGS_SKIP]
default = "OFF"
valuetype = "integer"
descr = "A flag to switch on/off inclusion of the draw settings (may be needed in case of two human models)"

[parameters.BM_FOOT_MODEL]
default = "_FOOT_MODEL_DEFAULT_"
valuetype = "integer"
descr = "Parameter defining the foot model used."
opt = [ "_FOOT_MODEL_DEFAULT_", "_FOOT_MODEL_NONE_",]

[parameters.BM_LEG_MODEL]
default = "_LEG_MODEL_TLEM2_"
valuetype = "integer"
descr = "Parameter defining the Leg model used."
opt = [ "OFF", "_LEG_MODEL_TLEM_", "_LEG_MODEL_TLEM2_", "_LEG_MODEL_LEG_",]

[parameters.BM_ARM_THORAX_SCAPULA_CONTACT]
default = "_ELLIPSOID_CONTACT_"
valuetype = "integer"
descr = "Parameter defining the contact type between Thorax and Scapula"
opt = [ "_ELLIPSOID_CONTACT_", "_MULTIPLE_POINT_CONTACT_",]

[parameters.BM_LEG_LEFT]
default = "ON"
valuetype = "integer"
descr = "Parameter for switching the left leg On/Off. To control which leg model is used, please use the {any}`BM_LEG_MODEL` parameter."
nicename = "Left Leg"
opt = [ "OFF", "ON",]

[parameters.BM_LEG_RIGHT]
default = "ON"
valuetype = "integer"
descr = "Parameter for switching the right leg On/Off. To control which leg model is used, please use the {any}`BM_LEG_MODEL` parameter."
nicename = "Left Right"
opt = [ "OFF", "ON",]

[parameters.BM_LEG_STRENGTH_INDEX]
default = "1.0"
valuetype = "float"
descr = "Index parameter to specify muscle strength for lower extremities"
nicename = "Strength Index"

[parameters.BM_LEG_MUSCLES_BOTH]
default = "_MUSCLES_SIMPLE_"
valuetype = "integer"
descr = "Parameter to define muscle behavior of both right and left leg"
opt = [ "OFF", "_MUSCLES_SIMPLE_", "_MUSCLES_3E_HILL_",]

[parameters.BM_LEG_MUSCLES_LEFT]
default = "BM_LEG_MUSCLES_BOTH"
valuetype = "integer"
descr = "Parameter to define muscle behavior of the left leg"
nicename = "Left"
opt = [ "OFF", "_MUSCLES_SIMPLE_", "_MUSCLES_3E_HILL_", "BM_LEG_MUSCLES_BOTH",]

[parameters.BM_LEG_MUSCLES_RIGHT]
default = "BM_LEG_MUSCLES_BOTH"
valuetype = "integer"
descr = "Parameter to define muscle behavior of the right leg"
nicename = "Right"
opt = [ "OFF", "_MUSCLES_SIMPLE_", "_MUSCLES_3E_HILL_", "BM_LEG_MUSCLES_BOTH",]

[parameters.BM_LEG_DATASET]
type = "#path"
valuetype = "string"
descr = "Path to specify the underlying dataset. This currently only affects the TLEM based models. Valid options depends on which model (TLEM1/2) is used, and what dataset are available. If not specified, this will be configure automatically."

[parameters.BM_TRUNK_DATASET]
default = "\"TrunkData1.1\""
valuetype = "string"
descr = "Parameter to define a trunk model dataset."

[parameters.BM_TRUNK_STRENGTH_INDEX]
default = "1.0"
valuetype = "float"
descr = "Index parameter to specify strength for trunk muscles."

[parameters.BM_TRUNK_THORACIC_FUTURE]
default = "OFF"
deprecated = "true"
valuetype = "integer"
descr = "Internal swtich to enable some of the future detailed thoracic components in the model. This switch is for internal development use."
opt = [ "OFF", "ON"]

[parameters.BM_TRUNK_MUSCLES]
default = "_MUSCLES_SIMPLE_"
valuetype = "integer"
descr = "Definition of the type of all spine muscles."
opt = [ "OFF", "_MUSCLES_SIMPLE_",]

[parameters.BM_TRUNK_LUMBAR_MUSCLES]
default = "BM_TRUNK_MUSCLES"
valuetype = "integer"
descr = "Definition of the lumbar spine muscles type."
opt = [ "OFF", "_MUSCLES_SIMPLE_", "BM_TRUNK_MUSCLES",]

[parameters.BM_TRUNK_CERVICAL_MUSCLES]
default = "OFF"
valuetype = "integer"
descr = "Definition of the cervical spine muscles type."
opt = [ "OFF", "_MUSCLES_SIMPLE_", "BM_TRUNK_MUSCLES",]

[parameters.BM_TRUNK_DISC_STIFNESS]
default = "_DISC_STIFFNESS_NONE_"
valuetype = "integer"
descr = "Definition of the disc model of all spine parts."
opt = [ "_DISC_STIFFNESS_NONE_", "_DISC_STIFFNESS_LINEAR_", "_DISC_STIFFNESS_NONLINEAR_",]

[parameters.BM_TRUNK_LUMBAR_DISC_STIFNESS]
default = "BM_TRUNK_DISC_STIFNESS"
valuetype = "integer"
descr = "Definition of the lumbar spine disc model."
opt = [ "_DISC_STIFFNESS_NONE_", "_DISC_STIFFNESS_LINEAR_", "_DISC_STIFFNESS_NONLINEAR_", "BM_TRUNK_DISC_STIFNESS",]

[parameters.BM_TRUNK_CERVICAL_DISC_STIFNESS]
default = "BM_TRUNK_DISC_STIFNESS"
valuetype = "integer"
descr = "Definition of the cervical spine disc model."
opt = [ "_DISC_STIFFNESS_NONE_", "_DISC_STIFFNESS_LINEAR_", "_DISC_STIFFNESS_NONLINEAR_", "BM_TRUNK_DISC_STIFNESS",]

[parameters.BM_TRUNK_RHYTHM]
default = "ON"
valuetype = "integer"
nicename = "Trunk spine rhythm"
descr = "A switch to use a kinematic rhythm for the whole spine. ON indicate that the rhythm is a hard contraint while _RHYTHM_SOFT_ will make the rhythm as soft kinematic contraint."
opt = [ "OFF", "ON", "_RHYTHM_SOFT_",]

[parameters.BM_TRUNK_LUMBAR_RHYTHM]
default = "BM_TRUNK_RHYTHM"
valuetype = "integer"
nicename = "Lumbar spine rhythm"
descr = "A switch to use a kinematic rhythm for the lumbar spine. ON indicate that the rhythm is a hard contraint while _RHYTHM_SOFT_ will make the rhythm as soft kinematic contraint."
opt = [ "OFF", "ON", "_RHYTHM_SOFT_",]

[parameters.BM_TRUNK_CERVICAL_RHYTHM]
default = "BM_TRUNK_RHYTHM"
valuetype = "integer"
nicename = "Cervical spine rhythm"
descr = "A switch to use a kinematic rhythm for the cervical spine. ON indicate that the rhythm is a hard contraint while _RHYTHM_SOFT_ will make the rhythm as soft kinematic contraint."
opt = [ "OFF", "ON", "_RHYTHM_SOFT_",]

[parameters.BM_TRUNK_LIGAMENTS]
default = "OFF"
valuetype = "integer"
descr = "A switch to control all the ligaments in the spine."

[parameters.BM_TRUNK_LUMBAR_LIGAMENTS]
default = "BM_TRUNK_LIGAMENTS"
valuetype = "integer"
descr = "A switch to control the lumbar spine ligaments."

[parameters.BM_ARM_STRENGTH_INDEX]
default = "1.0"
valuetype = "float"
descr = "Index parameter to specify muscle strength for upper extremities."

[parameters.BM_ARM_LEFT]
default = "ON"
valuetype = "integer"
descr = "Switch for the left arm model being present or not."
nicename = "Left Arm"

[parameters.BM_ARM_DETAIL_HAND_LEFT]
deprecated = "true"
default = "OFF"
valuetype = "integer"
descr = "Keyword for the type of left hand."

[parameters.BM_ARM_SHOULDER_RHYTHM_LEFT]
deprecated = "true"
default = "OFF"
valuetype = "integer"
descr = "Switch for the shoulder rhythm constraints for the left arm being present or not."

[parameters.BM_ARM_RIGHT]
default = "ON"
valuetype = "integer"
descr = "Switch for the right arm model being present or not."
nicename = "Right Arm"

[parameters.BM_ARM_DETAIL_HAND_RIGHT]
deprecated = "true"
default = "OFF"
valuetype = "integer"
descr = "Keyword for the type of right hand."

[parameters.BM_ARM_SHOULDER_RHYTHM_RIGHT]
deprecated = "true"
default = "OFF"
valuetype = "integer"
descr = "Switch for the shoulder rhythm constraints for the right arm being present or not."

[parameters.BM_ARM_SHOULDER_RHYTHM]
default = "OFF"
valuetype = "integer"
descr = "Switch for the shoulder rhythm constraints. ON indicate that the rhythm is a hard contraint while _RHYTHM_SOFT_ will make the rhythm as soft kinematic contraint."
nicename = "Shoulder rhythm"
opt = [ "OFF", "ON", "_RHYTHM_SOFT_",]

[parameters.BM_ARM_CLAVICULA_ROTATION_RHYTHM]
default = "ON"
valuetype = "integer"
descr = "Switch for the clavicula rotation rhythm. If enabled axial rotation of the clavicula will be distributed evenly between the sterno-clavicula and acromio-clavicula joint. Effectively removing clavicula axial rotation as an independent degree of freedom.resterno-clavicula axial rotation."
nicename = "Clavicula rotation rhythm"
opt = [ "OFF", "ON", "_RHYTHM_SOFT_",]

[parameters.BM_ARM_DETAILED_HAND]
default = "OFF"
valuetype = "integer"
descr = "Switch for enabling the detailed hand."
nicename = "Detailed hands"

[parameters.BM_ARM_DELTOID_WRAPPING]
default = "_DELTOID_WRAPPING_ELIPSOIDS_"
valuetype = "integer"
descr = "Switch for deltoid wrapping. Setting this to OFF or _DELTOID_WRAPPING_RAKE_ will revert to the older rake based implementation of the deltoid."
nicename = "Deltoid wrapping"
opt = [ "_DELTOID_WRAPPING_RAKE_", "_DELTOID_WRAPPING_ELIPSOIDS_", "_DELTOID_WRAPPING_CYLINDERS_",]

[parameters.BM_ARM_MUSCLES_BOTH]
default = "_MUSCLES_SIMPLE_"
valuetype = "integer"
descr = "Keyword for the muscle model type for both left and right arms."
opt = [ "OFF", "_MUSCLES_SIMPLE_", "_MUSCLES_3E_HILL_",]

[parameters.BM_ARM_MUSCLES_LEFT]
default = "BM_ARM_MUSCLES_BOTH"
valuetype = "integer"
descr = "Keyword for the muscle model type for the left arm."
nicename = "Left arm"
opt = [ "OFF", "_MUSCLES_SIMPLE_", "_MUSCLES_3E_HILL_", "BM_ARM_MUSCLES_BOTH",]

[parameters.BM_ARM_MUSCLES_RIGHT]
default = "BM_ARM_MUSCLES_BOTH"
valuetype = "integer"
descr = "Keyword for the muscle model for both the right arm."
nicename = "Right arm:"
opt = [ "OFF", "_MUSCLES_SIMPLE_", "_MUSCLES_3E_HILL_", "BM_ARM_MUSCLES_BOTH",]

[parameters.BM_PELVIS_DISPLAY]
default = "_PELVIS_DISPLAY_LEGPELVIS_ONLY_"
valuetype = "integer"
descr = "Keyword for pelvis display setting."
opt = [ "_PELVIS_DISPLAY_NONE_", "_PELVIS_DISPLAY_LEGPELVIS_ONLY_", "_PELVIS_DISPLAY_LEGANDTRUNKPELVIS_",]

[parameters.BM_MANNEQUIN_FILE]
type = "#path"
valuetype = "string"
descr = "File name of the mannequin definition file. By default this is no longer used, since the values in ``HumanModel.Mannequin`` can be assigned directly in your applicaiton ( E.g. ``Main.HumanModel.Mannequin.Posture.NeckExtension = 30;``). However, the parameter can still be used to set your own mannequin file. Just define your own mannequin file in your applicaiton like this: ``#path BM_MANNEQUIN_FILE \"<ANYBODY_PATH_BODY>\\BodyModels\\GenericBodyModel\\BodyModel.mannequin.any\";``"

[parameters.BM_MANNEQUIN_DRIVER_DEFAULT]
default = "ON"
valuetype = "integer"
descr = "Setting of the default value for all mannequin drivers."
nicename = "Drivers Master Switch"

[parameters.BM_MANNEQUIN_DRIVER_WEAK_SWITCH]
default = "ON"
valuetype = "integer"
descr = "By default constraint type of mannequin drivers will be soft."
nicename = "Weak Switch"

[parameters.BM_LEG_TRUNK_INTERFACE]
default = "_MORPH_TRUNK_TO_LEG_"
valuetype = "integer"
descr = "Keyword for the interface morhping between the trunk and the leg pelvis segments."
nicename = "Leg-Trunk Interface:"
opt = [ "_MORPH_TRUNK_TO_LEG_", "_MORPH_LEG_TO_TRUNK_", "_MORPH_NONE_",]

[parameters.BM_CALIBRATION_TYPE]
default = "_CALIBRATION_TYPE_1PAR_"
valuetype = "integer"
descr = "Parameter to choose type of muscle tendon calibration"
opt = [ "_CALIBRATION_TYPE_1PAR_", "_CALIBRATION_TYPE_2PAR_", "_CALIBRATION_TYPE_CUSTOM_",]

[parameters.BM_MANNEQUIN_DRIVER_PELVIS_POS_X]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Pelvis Position X"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_PELVIS_POS_Y]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Pelvis Position Y"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_PELVIS_POS_Z]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Pelvis Position Z"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_PELVIS_ROT_Z]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Pelvis Rotation X"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_PELVIS_ROT_Y]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Pelvis Rotation Y"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_PELVIS_ROT_X]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Pelvis Rotation Z"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_NECK]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Neck"
opt = [ "ON", "OFF",]

[parameters.BM_MANNEQUIN_DRIVER_SKULL_THORAX_FLEXION]
default = "BM_MANNEQUIN_DRIVER_NECK"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Skull-thorax flexion"
opt = [ "ON", "OFF",]

[parameters.BM_MANNEQUIN_DRIVER_SKULL_THORAX_LATERALBENDING]
default = "BM_MANNEQUIN_DRIVER_NECK"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Skull-thorax lateral bending"
opt = [ "ON", "OFF",]

[parameters.BM_MANNEQUIN_DRIVER_SKULL_THORAX_ROTATION]
default = "BM_MANNEQUIN_DRIVER_NECK"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Skull-thorax rotation"
opt = [ "ON", "OFF",]

[parameters.BM_MANNEQUIN_DRIVER_PELVIS_THORAX_LATERAL_BENDING]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Pelvis-Thorax Lateral Bending"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_PELVIS_THORAX_ROTATION]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Pelvis-Thorax Rotation"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_PELVIS_THORAX_EXTENSION]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Pelvis-Thorax Extension"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for all the mannequin drivers for the sterno clavicular degrees of freedom."
nicename = "Right Sterno-Clavicular"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_PROTRACTION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not."
nicename = "Right Sterno-Clavicular Protraction"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT",]

[parameters.BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_ELEVATION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not."
nicename = "Right Sterno-Clvaicular Elevation"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT",]

[parameters.BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_AXIAL_ROTATION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not."
nicename = "Right Sterno-Clavicular Axial Rotation"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT",]

[parameters.BM_MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Right Glenohumeral Abduction"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Right Glenohumeral Flexion"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Right Glenohumeral External Rotation"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_ELBOW_FLEXION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Right Elbow Flexion"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_ELBOW_PRONATION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Right Elbow Pronation"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_WRIST_FLEXION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Right Wrist Flexion"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Right Wrist Abduction"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_HAND_RIGHT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Right Hand"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for all the mannequin drivers for the sterno clavicular degrees of freedom."
nicename = "Left Sterno-Clavicular"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_PROTRACTION_LEFT]
default = "BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not."
nicename = "Left Sterno-Clavicular Protraction"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT",]

[parameters.BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_ELEVATION_LEFT]
default = "BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not."
nicename = "Left Sterno-Clavicular Elevation"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT",]

[parameters.BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_AXIAL_ROTATION_LEFT]
default = "BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not."
nicename = "Left Sterno-Clavicular Axial Rotation"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT",]

[parameters.BM_MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_LEFT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Left Glenohumeral Abduction"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_LEFT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Left Glenohumeral Flexion"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_LEFT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Left Glenohumeral External Rotation"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_ELBOW_FLEXION_LEFT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Left Elbow Flexion"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_ELBOW_PRONATION_LEFT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Left Elbow Pronation"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_WRIST_FLEXION_LEFT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Left Wrist Flexion"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_LEFT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Left Wrist Abduction"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_HAND_LEFT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Left Hand"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_HIP_FLEXION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Right Hip Flexion"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Right Hip External Rotation"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_HIP_ABDUCTION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Right Hip Abduction"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_KNEE_FLEXION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Right Knee Flexion"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_ANKLE_FLEXION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Right Ankle Flexion"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
deprecated = "true"
descr = "Switch for the mannequin driver being active or not"
nicename = "Right Ankle Eversion"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_RIGHT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Right Ankle Subtalar Eversion"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_HIP_FLEXION_LEFT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Left Hip Flexion"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_LEFT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Left Hip External Rotation"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_HIP_ABDUCTION_LEFT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Left Hip Abduction"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_KNEE_FLEXION_LEFT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Left Knee Flexion"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_ANKLE_FLEXION_LEFT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Left Ankle Flexion"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_LEFT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
deprecated = "true"
descr = "Switch for the mannequin driver being active or not"
nicename = "Left Ankle Eversion"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_LEFT]
default = "BM_MANNEQUIN_DRIVER_DEFAULT"
valuetype = "integer"
descr = "Switch for the mannequin driver being active or not"
nicename = "Left Ankle Subtalar Eversion"
opt = [ "ON", "OFF", "BM_MANNEQUIN_DRIVER_DEFAULT",]

[parameters.BM_JOINT_TYPE_HIP_RIGHT]
default = "_JOINT_TYPE_DEFAULT_"
valuetype = "integer"
descr = "Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually."
opt = [ "_JOINT_TYPE_DEFAULT_", "_JOINT_TYPE_USERDEFINED_",]

[parameters.BM_JOINT_TYPE_HIP_LEFT]
default = "_JOINT_TYPE_DEFAULT_"
valuetype = "integer"
descr = "Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually."
opt = [ "_JOINT_TYPE_DEFAULT_", "_JOINT_TYPE_USERDEFINED_",]

[parameters.BM_JOINT_TYPE_KNEE_RIGHT]
default = "_JOINT_TYPE_DEFAULT_"
valuetype = "integer"
descr = "Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually."
opt = [ "_JOINT_TYPE_DEFAULT_", "_JOINT_TYPE_BONY_LANDMARK_", "_JOINT_TYPE_USERDEFINED_",]

[parameters.BM_JOINT_TYPE_KNEE_LEFT]
default = "_JOINT_TYPE_DEFAULT_"
valuetype = "integer"
descr = "Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually."
opt = [ "_JOINT_TYPE_DEFAULT_", "_JOINT_TYPE_BONY_LANDMARK_", "_JOINT_TYPE_USERDEFINED_",]

[parameters.BM_JOINT_TYPE_PATELLOFEMORAL_RIGHT]
default = "_JOINT_TYPE_DEFAULT_"
valuetype = "integer"
descr = "Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually."
opt = [ "_JOINT_TYPE_DEFAULT_", "_JOINT_TYPE_BONY_LANDMARK_", "_JOINT_TYPE_USERDEFINED_",]

[parameters.BM_JOINT_TYPE_PATELLOFEMORAL_LEFT]
default = "_JOINT_TYPE_DEFAULT_"
valuetype = "integer"
descr = "Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually."
opt = [ "_JOINT_TYPE_DEFAULT_", "_JOINT_TYPE_BONY_LANDMARK_", "_JOINT_TYPE_USERDEFINED_",]

[parameters.BM_JOINT_TYPE_ANKLE_RIGHT]
default = "_JOINT_TYPE_DEFAULT_"
valuetype = "integer"
descr = "Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually."
opt = [ "_JOINT_TYPE_DEFAULT_", "_JOINT_TYPE_BONY_LANDMARK_", "_JOINT_TYPE_USERDEFINED_",]

[parameters.BM_JOINT_TYPE_ANKLE_LEFT]
default = "_JOINT_TYPE_DEFAULT_"
valuetype = "integer"
descr = "Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually."
opt = [ "_JOINT_TYPE_DEFAULT_", "_JOINT_TYPE_BONY_LANDMARK_", "_JOINT_TYPE_USERDEFINED_",]

[parameters.BM_JOINT_TYPE_SUBTALAR_RIGHT]
default = "_JOINT_TYPE_DEFAULT_"
valuetype = "integer"
descr = "Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually."
opt = [ "_JOINT_TYPE_DEFAULT_", "_JOINT_TYPE_BONY_LANDMARK_", "_JOINT_TYPE_USERDEFINED_",]

[parameters.BM_JOINT_TYPE_SUBTALAR_LEFT]
default = "_JOINT_TYPE_DEFAULT_"
valuetype = "integer"
descr = "Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually."
opt = [ "_JOINT_TYPE_DEFAULT_", "_JOINT_TYPE_BONY_LANDMARK_", "_JOINT_TYPE_USERDEFINED_",]

[parameters.BM_JOINT_TYPE_PATELLATENDON_RIGHT]
default = "_JOINT_TYPE_DEFAULT_"
valuetype = "integer"
descr = "Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually."
opt = [ "_JOINT_TYPE_DEFAULT_", "_JOINT_TYPE_BONY_LANDMARK_", "_JOINT_TYPE_USERDEFINED_",]

[parameters.BM_JOINT_TYPE_PATELLATENDON_LEFT]
default = "_JOINT_TYPE_DEFAULT_"
valuetype = "integer"
descr = "Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually."
opt = [ "_JOINT_TYPE_DEFAULT_", "_JOINT_TYPE_BONY_LANDMARK_", "_JOINT_TYPE_USERDEFINED_",]

[parameters.BM_GLOBAL_REFERENCE_FRAME_SWITCH]
default = "OFF"
valuetype = "integer"
descr = "A switch to use different ref. frame than the default global reference frame"
nicename = "Global Reference Frame:"

[parameters.BM_GLOBAL_REFERENCE_FRAME]
default = "..GenericGlobalRefFrame"
valuetype = "reference"
descr = "An object path leading to the selected global reference frame"
nicename = "Global Reference Frame"
