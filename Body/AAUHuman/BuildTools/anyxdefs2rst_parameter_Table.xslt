<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="3.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

<xsl:output method="text" indent="no" encoding="utf-8"/>
<xsl:param name="table-type">Leg</xsl:param>


<xsl:template match="/">
.. Do not edit this file. It is generated automatically 
   by body/AAUHuman/BuildTools/anyxdefs.bat

.. csv-table:: <xsl:value-of select="translate($table-type, '_', ' ')"/> Parameters
   :header: "Name", "Description"
   :widths: 2, 5

<xsl:apply-templates select="anyxdefs/parameter" />

</xsl:template>

<xsl:template match="parameter">



</xsl:template>


<xsl:template match="parameter">
<xsl:variable name="up" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>
<xsl:variable name="lo" select="'abcdefghijklmnopqrstuvwxyz'"/>

<xsl:if test="starts-with(@name, concat('BM_',string(translate($table-type, $lo, $up)))) ">
<xsl:text>   :ammr:bm_statement:`</xsl:text><xsl:value-of select="@name"/>`, |<xsl:value-of select="@name"/>_DESCRIPTION|
</xsl:if>
<xsl:if test="$table-type='Other' and ( not(contains(@name,'ARM')) and not(contains(@name,'TRUNK'))and not(contains(@name,'MANNEQUIN')) and not(contains(@name,'SCALING')) and not(contains(@name,'LEG')) )">
<xsl:text>   :ammr:bm_statement:`</xsl:text><xsl:value-of select="@name"/>`, |<xsl:value-of select="@name"/>_DESCRIPTION|
</xsl:if>

</xsl:template>

</xsl:stylesheet>
