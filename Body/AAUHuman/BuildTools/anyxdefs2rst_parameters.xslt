<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="3.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <xsl:output method="text" indent="no" encoding="utf-8"/>

<xsl:template match="/">
.. Do not edit this file. It is generated automatically 
   by body/AAUHuman/BuildTools/anyxdefs.bat

All BodyModel parameters
-------------------------
<xsl:apply-templates select="anyxdefs/parameter" />
</xsl:template>

<xsl:template name="parameter_header">
<xsl:variable name="type">
                <xsl:choose>
                  <xsl:when test="not(@type)">
                    <xsl:text>#define </xsl:text>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="@type"/><xsl:text> </xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
</xsl:variable>
<xsl:variable name="default_ref">
  <xsl:choose>
    <xsl:when test="starts-with(@default, '_') or starts-with(@default, 'CONST_')">
    <xsl:text>:ammr:bm_constant:`</xsl:text><xsl:value-of select="@default"/><xsl:text>`</xsl:text>
    </xsl:when>
    <xsl:when test="starts-with(@default, 'BM_')">
    <xsl:text>:ammr:bm_statement:`</xsl:text><xsl:value-of select="@default"/><xsl:text>`</xsl:text>
    </xsl:when>
    <xsl:otherwise>
    <xsl:text>``</xsl:text><xsl:value-of select="@default"/><xsl:text>``</xsl:text>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

.. ammr:bm_statement:: <xsl:value-of select="@name"/><xsl:text>

    </xsl:text><xsl:value-of select="@descr"/>

    :Default: <xsl:value-of select="$default_ref"/>
    :Example: :anyscript:`<xsl:value-of select="$type"/><xsl:value-of select="@name"/><xsl:text> </xsl:text><xsl:value-of select="@default"/><xsl:text>`</xsl:text>


</xsl:template>

<xsl:template match="parameter[not(opt) and (@default='ON' or @default='OFF')]">
<xsl:call-template name="parameter_header"/>
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`
</xsl:template>

<xsl:template match="parameter[opt]">
<xsl:call-template name="parameter_header"/>
    :Options: <xsl:apply-templates select="opt"/>
</xsl:template>


<xsl:template match="parameter">
<xsl:call-template name="parameter_header"/>
</xsl:template>



<xsl:template match="opt">
<xsl:variable name="option_name"><xsl:value-of select="."/></xsl:variable>
<xsl:if test="position() > 1">
  <xsl:text>              </xsl:text>
</xsl:if>
<xsl:text>- :any:`</xsl:text><xsl:value-of select="$option_name"/>`: <xsl:value-of select="/anyxdefs/constant[@name=$option_name]/@descr"/><xsl:text>
</xsl:text>
</xsl:template>

</xsl:stylesheet>