

  #if IC_TYPE != OLD  
  //  #if IC_TYPE== MULTI_OFFSET

AnyRefNode IC_points={


  AnyInt NodeAmount =20;     

  AnyFloat Scaled_SupPoints = .Scale(.DataRib.IC_Sup_pos);
  AnyFloat Scaled_InfPoints = .Scale(.DataRib.IC_Inf_pos);
  
  
  
  //above
  Spline_template2 SupSpline( 
  NAME = SupSpline,
  NUM_ELEM = 20,
  POINTS   = .Scaled_SupPoints,
  START    = 0.0,
  END      = 1.0
  )={}; 
  
  //below
  Spline_template2 InfSpline( 
  NAME = InfSpline,
  NUM_ELEM = 20,
  POINTS = .Scaled_InfPoints,
  START    = 0.0,
  END      = 1.0
  )={}; 

  
  AnyFloat SupLength_Full = SupSpline.Fun_Resample.L;  
  AnyFloat InfLength_Full = InfSpline.Fun_Resample.L; 
  
AnyFloat Inn_Inf_Start_ABS = vnorm(.Scale(.DataRib.Inn_Inf_Start_ABS_pos)-InfSpline.Fun_Resample_ABS(0.0));
AnyFloat Inn_Sup_Start_ABS = vnorm(.Scale(.DataRib.Inn_Sup_Start_ABS_pos)-SupSpline.Fun_Resample_ABS(0.0));
AnyFloat Inn_Inf_End_ABS =   vnorm(.Scale(.DataRib.Inn_Inf_End_ABS_pos)-InfSpline.Fun_Resample_ABS(InfLength_Full));
AnyFloat Inn_Sup_End_ABS =   vnorm(.Scale(.DataRib.Inn_Sup_End_ABS_pos)-SupSpline.Fun_Resample_ABS(SupLength_Full));
  
AnyFloat Int_Inf_Start_ABS = vnorm(.Scale(.DataRib.Int_Inf_Start_ABS_pos)-InfSpline.Fun_Resample_ABS(0.0));
AnyFloat Int_Sup_Start_ABS = vnorm(.Scale(.DataRib.Int_Sup_Start_ABS_pos)-SupSpline.Fun_Resample_ABS(0.0));
AnyFloat Int_Inf_End_ABS =   vnorm(.Scale(.DataRib.Int_Inf_End_ABS_pos)-InfSpline.Fun_Resample_ABS(InfLength_Full));
AnyFloat Int_Sup_End_ABS =   vnorm(.Scale(.DataRib.Int_Sup_End_ABS_pos)-SupSpline.Fun_Resample_ABS(SupLength_Full));
  
AnyFloat Ext_Inf_Start_ABS = vnorm(.Scale(.DataRib.Ext_Inf_Start_ABS_pos)-InfSpline.Fun_Resample_ABS(0.0));
AnyFloat Ext_Sup_Start_ABS = vnorm(.Scale(.DataRib.Ext_Sup_Start_ABS_pos)-SupSpline.Fun_Resample_ABS(0.0));
AnyFloat Ext_Inf_End_ABS =   vnorm(.Scale(.DataRib.Ext_Inf_End_ABS_pos)-InfSpline.Fun_Resample_ABS(InfLength_Full));
AnyFloat Ext_Sup_End_ABS =   vnorm(.Scale(.DataRib.Ext_Sup_End_ABS_pos)-SupSpline.Fun_Resample_ABS(SupLength_Full));


    
  AnyFloat Inn_Sup_discretization_ABS = farr(Inn_Sup_Start_ABS,(SupLength_Full-Inn_Sup_End_ABS-Inn_Sup_Start_ABS)/NodeAmount,NodeAmount);
  AnyFloat Ext_Sup_discretization_ABS = farr(Ext_Sup_Start_ABS,(SupLength_Full-Ext_Sup_End_ABS-Ext_Sup_Start_ABS)/NodeAmount,NodeAmount);
  AnyFloat Int_Sup_discretization_ABS = farr(Int_Sup_Start_ABS,(SupLength_Full-Int_Sup_End_ABS-Int_Sup_Start_ABS)/NodeAmount,NodeAmount);
  
  
  AnyFloat Inn_Inf_discretization_ABS = farr(Inn_Inf_Start_ABS, (InfLength_Full-Inn_Inf_End_ABS-Inn_Inf_Start_ABS )/NodeAmount,NodeAmount);
  AnyFloat Ext_Inf_discretization_ABS = farr(Ext_Inf_Start_ABS, (InfLength_Full-Ext_Inf_End_ABS-Ext_Inf_Start_ABS )/NodeAmount,NodeAmount);
  AnyFloat Int_Inf_discretization_ABS = farr(Int_Inf_Start_ABS, (InfLength_Full-Int_Inf_End_ABS-Int_Inf_Start_ABS )/NodeAmount,NodeAmount);
  
  

  
  
//Allow visuals of points for debug  
//  AnyFloat test_sup  = LENGTH(Inn_SupPoints);
//  AnyFloat test_inf  = LENGTH(Inn_InfPoints);
//  AnyRefNodeGroup TEST_Inn_SupPoints ={
//    NodeAmount=20;
//    Node_sRels=.Inn_SupPoints;
//  };
//  
//  AnyRefNodeGroup TEST_Inn_InfPoints ={
//    NodeAmount=20; 
//    Node_sRels=.Inn_InfPoints;
//  };
  
  
  AnyFloat Inn_SupPoints=SupSpline.Fun_Resample_ABS(Inn_Sup_discretization_ABS);
  AnyFloat Inn_InfPoints=InfSpline.Fun_Resample_ABS(Inn_Inf_discretization_ABS);
  AnyFloat Ext_SupPoints=SupSpline.Fun_Resample_ABS(Ext_Sup_discretization_ABS);
  AnyFloat Ext_InfPoints=InfSpline.Fun_Resample_ABS(Ext_Inf_discretization_ABS);
  AnyFloat Int_SupPoints=SupSpline.Fun_Resample_ABS(Int_Sup_discretization_ABS);
  AnyFloat Int_InfPoints=InfSpline.Fun_Resample_ABS(Int_Inf_discretization_ABS);
  
  
};


#endif
