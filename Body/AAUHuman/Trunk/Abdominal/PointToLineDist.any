

AnyKinMeasureOrg Dist={
  AnyKinLinear lin = {
    Ref=0;
    AnyRefNode &ref=....Layer_Constraints_RectusLine.Dummy.JntNode; 
    AnyRefFrame &LayerNode = ..LayerNode;
  };
  MeasureOrganizer ={0};
};




AnyKinMeasureExpComb   Norm ={
  // A large negative number for the exponential combination measures causes
  // the measure to put emphasis on the "penetration" of the points,
  // while "ignoring" points far from the surface.
  a ??= -400;
  AnyKinMeasureOrg &ref=.Dist;
  AnyKinMeasure &MeasureLayer = .MeasureLayer;
};



////  dist = (|QPxQR|)/(|QR|)
//
//
//AnyKinLinear QP = {
//      AnyRefNode &Q =Main.HumanModel.BodyModel.Trunk.Muscles.Right.RectusAbdominis.RA_1.Ins;
//      AnyRefNode &P= .LayerNode;
//    };
//    AnyKinLinear QR = {
//      AnyRefNode &Q =Main.HumanModel.BodyModel.Trunk.Muscles.Right.RectusAbdominis.RA_1.Ins;
//      AnyRefNode &R= Main.HumanModel.BodyModel.Trunk.Muscles.Right.RectusAbdominis.RA_1.Org;
//    };
//    
//    AnyKinPLine  QR_L ={
//       AnyRefNode &Q =Main.HumanModel.BodyModel.Trunk.Muscles.Right.RectusAbdominis.RA_1.Ins;
//       AnyRefNode &R= Main.HumanModel.BodyModel.Trunk.Muscles.Right.RectusAbdominis.RA_1.Org;
//    };
//    
//
//    AnyKinMeasureQuadComb QP_cross_QR=     {
//        AnyKinMeasure &KM1 = .QP;
//        AnyKinMeasure &KM2 = .QR;
//        
//        OutDim = 3;
//        
//        /// This 3-dimensional tensor is an array of square matrices
//        /// Each matrix is the coefficient matrix for the quadratic term for one of 
//        /// the outputs of this measure, i.e. the array must be 'OutDim' (i.e. two) long.
//        /// Each of these matrices must be 3 by 3, because the input measure (.LinComb.KM) 
//        /// has three components 
//        CoefQuadTensor = {
//          {  {0,0,0,0,0,0},
//            {0,0,0,0,0,1},
//            {0,0,0,0,-1,0},
//            {0,0,0,0,0,0},
//            {0,0,0,0,0,0},
//            {0,0,0,0,0,0} 
//          },
//          {  {0,0,0,0,0,-1},
//            {0,0,0,0,0,0},
//            {0,0,0,1,0,0},
//            {0,0,0,0,0,0},
//            {0,0,0,0,0,0},
//            {0,0,0,0,0,0}
//          },
//          { {0,0,0,0,1,0},
//            {0,0,0,-1,0,0},
//            {0,0,0,0,0,0},
//            {0,0,0,0,0,0},
//            {0,0,0,0,0,0},
//            {0,0,0,0,0,0}}
//        }; 
//      };
//
//    
//     AnyKinMeasureQuadComb QP_cross_QR_sqr = {
//      AnyKinMeasureQuadComb &ref1=.QP_cross_QR;
//      OutDim = 1;
//      CoefQuadTensor = {
//        { { 1, 0, 0},
//          { 0, 1, 0},
//          { 0, 0, 1},
//        }
//      };
//    };
//
//
//   
//
//      AnyFunInterpol Sqrt = {
//        Type=PiecewiseLinear;      AnyVar ROM =0.02;     AnyVar StepSize = 0.0000001;
//        T    = farr(-0.5*ROM,StepSize,1+floor(ROM/StepSize));
//        Data = {sqrt(T)};  
//      };
//
//    AnyKinMeasureFunComb1 QP_cross_QR_length = { 
//      Functions ={ &.Sqrt};
//      AnyKinMeasure &ref = .QP_cross_QR_sqr;
//    };
//
//     AnyFunInterpol _div_x = {
//        Type=Bspline;      AnyVar ROM =1;     AnyVar StepSize = 0.00001;
//        T    = farr(-0.5*ROM,StepSize,1+floor(ROM/StepSize));
//        Data = {1/T};  
//      };
//
//     AnyKinMeasureFunComb1 div_QR  = { 
//      Functions ={ &._div_x};
//      AnyKinMeasure &ref = .QR_L;
//    };
//
//
//AnyKinMeasureQuadComb Dist= {
//      AnyKinMeasureFunComb1 &ref1=.QP_cross_QR_length ;
//      AnyKinMeasureFunComb1 &ref2=.div_QR ;
//
//      OutDim = 1;
//      CoefQuadTensor = {
//        { { 0, 0.5},
//          { 0.5, 0},
//        }
//      };
//    };
