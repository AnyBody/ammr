#if BM_TRUNK_THORACIC_MODEL != _THORACIC_MODEL_RIGID_

  AnySphericalJoint T11T12 = {
    AnyRefNode &T12Node = ...Segments.T12Seg.T11T12JntNode;
    AnyRefNode &T11Node = ...Segments.T11Seg.T11T12JntNode;
    //Joint reaction force transformed to the rotated reference node aligned with the vertebral body. 
    AnyForceMomentMeasure2 ReactionForceRotated = {
      RefPoint = &.T12Node.RotNode;
      IncludeForces = {&.Constraints.Reaction};
      IncludeSegments = {&....Segments.T12Seg};
      AnyFloat Flocal = -F * .T12Node.RotNode.Axes;
    };
  };

  AnySphericalJoint T10T11 = {
    AnyRefNode &T11Node = ...Segments.T11Seg.T10T11JntNode;
    AnyRefNode &T10Node = ...Segments.T10Seg.T10T11JntNode;
    //Joint reaction force transformed to the rotated reference node aligned with the vertebral body. 
    AnyForceMomentMeasure2 ReactionForceRotated = {
      RefPoint = &.T11Node.RotNode;
      IncludeForces = {&.Constraints.Reaction};
      IncludeSegments = {&....Segments.T11Seg};
      AnyFloat Flocal = -F * .T11Node.RotNode.Axes;
    };
  };

  AnySphericalJoint T9T10 = {
    AnyRefNode &T10Node = ...Segments.T10Seg.T9T10JntNode;
    AnyRefNode &T9Node = ...Segments.T9Seg.T9T10JntNode;
    //Joint reaction force transformed to the rotated reference node aligned with the vertebral body. 
    AnyForceMomentMeasure2 ReactionForceRotated = {
      RefPoint = &.T10Node.RotNode;
      IncludeForces = {&.Constraints.Reaction};
      IncludeSegments = {&....Segments.T10Seg};
      AnyFloat Flocal = -F * .T10Node.RotNode.Axes;
    };
  };

  AnySphericalJoint T8T9 = {
    AnyRefNode &T9Node = ...Segments.T9Seg.T8T9JntNode;
    AnyRefNode &T8Node = ...Segments.T8Seg.T8T9JntNode;
    //Joint reaction force transformed to the rotated reference node aligned with the vertebral body. 
    AnyForceMomentMeasure2 ReactionForceRotated = {
      RefPoint = &.T9Node.RotNode;
      IncludeForces = {&.Constraints.Reaction};
      IncludeSegments = {&....Segments.T9Seg};
      AnyFloat Flocal = -F * .T9Node.RotNode.Axes;
    };
  };

  AnySphericalJoint T7T8 = {
    AnyRefNode &T8Node = ...Segments.T8Seg.T7T8JntNode;
    AnyRefNode &T7Node = ...Segments.T7Seg.T7T8JntNode;
    //Joint reaction force transformed to the rotated reference node aligned with the vertebral body. 
    AnyForceMomentMeasure2 ReactionForceRotated = {
      RefPoint = &.T8Node.RotNode;
      IncludeForces = {&.Constraints.Reaction};
      IncludeSegments = {&....Segments.T8Seg};
      AnyFloat Flocal = -F * .T8Node.RotNode.Axes;
    };
  };

  AnySphericalJoint T6T7 = {
    AnyRefNode &T7Node = ...Segments.T7Seg.T6T7JntNode;
    AnyRefNode &T6Node = ...Segments.T6Seg.T6T7JntNode;
    //Joint reaction force transformed to the rotated reference node aligned with the vertebral body. 
    AnyForceMomentMeasure2 ReactionForceRotated = {
      RefPoint = &.T7Node.RotNode;
      IncludeForces = {&.Constraints.Reaction};
      IncludeSegments = {&....Segments.T7Seg};
      AnyFloat Flocal = -F * .T7Node.RotNode.Axes;
    };
  };

  AnySphericalJoint T5T6 = {
    AnyRefNode &T6Node = ...Segments.T6Seg.T5T6JntNode;
    AnyRefNode &T5Node = ...Segments.T5Seg.T5T6JntNode;
    //Joint reaction force transformed to the rotated reference node aligned with the vertebral body. 
    AnyForceMomentMeasure2 ReactionForceRotated = {
      RefPoint = &.T6Node.RotNode;
      IncludeForces = {&.Constraints.Reaction};
      IncludeSegments = {&....Segments.T6Seg};
      AnyFloat Flocal = -F * .T6Node.RotNode.Axes;
    };
  };

  AnySphericalJoint T4T5 = {
    AnyRefNode &T5Node = ...Segments.T5Seg.T4T5JntNode;
    AnyRefNode &T4Node = ...Segments.T4Seg.T4T5JntNode;
    //Joint reaction force transformed to the rotated reference node aligned with the vertebral body. 
    AnyForceMomentMeasure2 ReactionForceRotated = {
      RefPoint = &.T5Node.RotNode;
      IncludeForces = {&.Constraints.Reaction};
      IncludeSegments = {&....Segments.T5Seg};
      AnyFloat Flocal = -F * .T5Node.RotNode.Axes;
    };
  };

  AnySphericalJoint T3T4 = {
    AnyRefNode &T4Node = ...Segments.T4Seg.T3T4JntNode;
    AnyRefNode &T3Node = ...Segments.T3Seg.T3T4JntNode;
    //Joint reaction force transformed to the rotated reference node aligned with the vertebral body. 
    AnyForceMomentMeasure2 ReactionForceRotated = {
      RefPoint = &.T4Node.RotNode;
      IncludeForces = {&.Constraints.Reaction};
      IncludeSegments = {&....Segments.T4Seg};
      AnyFloat Flocal = -F * .T4Node.RotNode.Axes;
    };
  };

  AnySphericalJoint T2T3 = {
    AnyRefNode &T3Node = ...Segments.T3Seg.T2T3JntNode;
    AnyRefNode &T2Node = ...Segments.T2Seg.T2T3JntNode;
    //Joint reaction force transformed to the rotated reference node aligned with the vertebral body. 
    AnyForceMomentMeasure2 ReactionForceRotated = {
      RefPoint = &.T3Node.RotNode;
      IncludeForces = {&.Constraints.Reaction};
      IncludeSegments = {&....Segments.T3Seg};
      AnyFloat Flocal = -F * .T3Node.RotNode.Axes;
    };
  };

  AnySphericalJoint T1T2 = {
    AnyRefNode &T2Node = ...Segments.T2Seg.T1T2JntNode;
    AnyRefNode &T1Node = ...Segments.T1Seg.T1T2JntNode;
    //Joint reaction force transformed to the rotated reference node aligned with the vertebral body. 
    AnyForceMomentMeasure2 ReactionForceRotated = {
      RefPoint = &.T2Node.RotNode;
      IncludeForces = {&.Constraints.Reaction};
      IncludeSegments = {&....Segments.T2Seg};
      AnyFloat Flocal = -F * .T2Node.RotNode.Axes;
    };
  };

  
  #if BM_TRUNK_THORACIC_RHYTHM != OFF
  // See the documentation for the rhythms/links for better understanding of the numbers 
  // used for the coefficients. 

    RhythmDriverLinear LateralBendingRhythmDriver(RELATIVE_TO_DOF=10, _REDEFINE_VARIABLES=On) = 
    {
         //The RhythmCoefficients represent the realative change of the different measures 
         //compared to total change. 
        AnyFloat RhythmCoefficients ??= {0.133, 0.118, 0.111, 0.101, 0.088, 0.08, 0.073, 0.068, 0.071, 0.074, 0.083};
        
        Measures.Input = {
           AnyKinMeasure& T11T12_ref = ......Interface.Trunk.IntervertebralAngles.T11T12.LateralBending;      
           AnyKinMeasure& T10T11_ref = ......Interface.Trunk.IntervertebralAngles.T10T11.LateralBending;      
           AnyKinMeasure& T9T10_ref = ......Interface.Trunk.IntervertebralAngles.T9T10.LateralBending;      
           AnyKinMeasure& T8T9_ref = ......Interface.Trunk.IntervertebralAngles.T8T9.LateralBending;      
           AnyKinMeasure& T7T8_ref = ......Interface.Trunk.IntervertebralAngles.T7T8.LateralBending;      
           AnyKinMeasure& T6T7_ref = ......Interface.Trunk.IntervertebralAngles.T6T7.LateralBending;      
           AnyKinMeasure& T5T6_ref = ......Interface.Trunk.IntervertebralAngles.T5T6.LateralBending;      
           AnyKinMeasure& T4T5_ref = ......Interface.Trunk.IntervertebralAngles.T4T5.LateralBending;      
           AnyKinMeasure& T3T4_ref = ......Interface.Trunk.IntervertebralAngles.T3T4.LateralBending;      
           AnyKinMeasure& T2T3_ref = ......Interface.Trunk.IntervertebralAngles.T2T3.LateralBending;      
           AnyKinMeasure& T1T2_ref = ......Interface.Trunk.IntervertebralAngles.T1T2.LateralBending; 
        };      
    };
//  #endif

    RhythmDriverLinear AxialRotationRhythmDriver(RELATIVE_TO_DOF=10, _REDEFINE_VARIABLES=On) = 
    {
        AnyFloat RhythmCoefficients ??= {0.0727, 0.0747, 0.0766, 0.0845, 0.0923, 0.1002, 0.1012, 0.1002, 0.1002, 0.1002, 0.0972};
        
        Measures.Input = {
           AnyKinMeasure& T11T12_ref = ......Interface.Trunk.IntervertebralAngles.T11T12.Rotation;      
           AnyKinMeasure& T10T11_ref = ......Interface.Trunk.IntervertebralAngles.T10T11.Rotation;      
           AnyKinMeasure& T9T10_ref = ......Interface.Trunk.IntervertebralAngles.T9T10.Rotation;      
           AnyKinMeasure& T8T9_ref = ......Interface.Trunk.IntervertebralAngles.T8T9.Rotation;      
           AnyKinMeasure& T7T8_ref = ......Interface.Trunk.IntervertebralAngles.T7T8.Rotation;      
           AnyKinMeasure& T6T7_ref = ......Interface.Trunk.IntervertebralAngles.T6T7.Rotation;      
           AnyKinMeasure& T5T6_ref = ......Interface.Trunk.IntervertebralAngles.T5T6.Rotation;      
           AnyKinMeasure& T4T5_ref = ......Interface.Trunk.IntervertebralAngles.T4T5.Rotation;      
           AnyKinMeasure& T3T4_ref = ......Interface.Trunk.IntervertebralAngles.T3T4.Rotation;      
           AnyKinMeasure& T2T3_ref = ......Interface.Trunk.IntervertebralAngles.T2T3.Rotation;      
           AnyKinMeasure& T1T2_ref = ......Interface.Trunk.IntervertebralAngles.T1T2.Rotation;      
        };
    };

  
  
    RhythmDriverBiLinear ExtensionRhythmDriver(NDIM=11, RELATIVE_TO_DOF=10, _REDEFINE_VARIABLES=On) = 
    {
        AnyFloat RhythmCoefficients ??= {0.087, 0.079, 0.075, 0.074, 0.075, 0.077, 0.085, 0.1, 0.112, 0.116, 0.122};
        AnyFloat RhythmCoefficientsNegative ??= {0.167, 0.128, 0.107, 0.093, 0.082, 0.074, 0.07, 0.069, 0.067, 0.068, 0.076};

        // +/- 5 degree interval where rhythm transitions from one set of coefficients to the other
        AnyFloat TransitionInterval ??= 10*pi/180;

        Measures.Input = {
          AnyKinMeasure& T11T12_ref = ......Interface.Trunk.IntervertebralAngles.T11T12.Extension;      
          AnyKinMeasure& T10T11_ref = ......Interface.Trunk.IntervertebralAngles.T10T11.Extension;      
          AnyKinMeasure& T9T10_ref = ......Interface.Trunk.IntervertebralAngles.T9T10.Extension;      
          AnyKinMeasure& T8T9_ref = ......Interface.Trunk.IntervertebralAngles.T8T9.Extension;      
          AnyKinMeasure& T7T8_ref = ......Interface.Trunk.IntervertebralAngles.T7T8.Extension;      
          AnyKinMeasure& T6T7_ref = ......Interface.Trunk.IntervertebralAngles.T6T7.Extension;      
          AnyKinMeasure& T5T6_ref = ......Interface.Trunk.IntervertebralAngles.T5T6.Extension;      
          AnyKinMeasure& T4T5_ref = ......Interface.Trunk.IntervertebralAngles.T4T5.Extension;      
          AnyKinMeasure& T3T4_ref = ......Interface.Trunk.IntervertebralAngles.T3T4.Extension;      
          AnyKinMeasure& T2T3_ref = ......Interface.Trunk.IntervertebralAngles.T2T3.Extension;      
          AnyKinMeasure& T1T2_ref = ......Interface.Trunk.IntervertebralAngles.T1T2.Extension;      
        };
    };
    

    
    #if BM_TRUNK_LUMBAR_THORACIC_LINK
    RhythmDriverBiLinear LumbarThroacicExtensionLinkDriver(NDIM=2, _REDEFINE_VARIABLES=On) = 
    {
        AnyVector RhythmCoefficients ??= {0.258, 0.217};
        AnyFloat RhythmCoefficientsNegative ??= {0.43, 0.14};
        
        // +/- 5 degree interval where rhythm transitions from one set of coefficients to the other
        AnyFloat TransitionInterval ??= 5*pi/180;

        
        Measures.Input = {
          AnyKinMeasure& PelvisT12_ext_ref = ......Interface.Trunk.PelvisT12Extension;      
          AnyKinMeasure& T12T1_ext_ref = ......Interface.Trunk.T12T1Extension;      
        };
    };
        
    RhythmDriverLinear LumbarThroacicLatBendingLinkDriver(_REDEFINE_VARIABLES=On) = 
    {
        AnyVector RhythmCoefficients ??= {0.275, 0.275};
        Measures.Input = {
         AnyKinMeasure& PelvisT12_Latbend_ref = ......Interface.Trunk.PelvisT12LateralBending;      
         AnyKinMeasure& T12T1_latbend_ref = ......Interface.Trunk.T12T1LateralBending;      
        };
    };
    
    RhythmDriverLinear LumbarThroacicRotationLinkDriver(_REDEFINE_VARIABLES=On) = 
    {
        AnyVector RhythmCoefficients ??= {0.102, 0.320};
        Measures.Input = {
         AnyKinMeasure& PelvisT12_Rot_ref = ......Interface.Trunk.PelvisT12Rotation;      
         AnyKinMeasure& T12T1_Rot_ref = ......Interface.Trunk.T12T1Rotation;      
        };
    }; 
    #endif
    
  #endif

#endif
