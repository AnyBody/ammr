// Definition of the cervical spine
#include "SkullSeg.any"  
  
AnySeg C1Seg = {

  AnyFolder &Data = ..Data.unscaled.ModelParameters.C1;    

  r0= .C2Seg.C2C1JntNode.sRel*.C2Seg.Axes0'+.C2Seg.r0-C2C1JntNode.sRel*Axes0';

  // Inertia properties for the segment
  UseInertiaObjects = On;
  #if (BM_TRUNK_CAVITY_MODEL == _CAVITY_MODEL_VOLUME_)
    AnyInertiaSolid BoneInertiaObject = {
      BodyMassCorrection massCorrection() = {
        DensityTheoretical = ....Data.unscaled.ModelParameters.BoneDensity;
        enableMassCorrection = Off;
      };
      AnySurfSTL surface = {
        FileName = ..BoneDraw.FileName;
        AnyFunTransform3D &scale = ..Scale;
        viewSurface.RGB = {0,0,1};
        ScaleXYZ = ..BoneDraw.ScaleXYZ;
      };
    };
  #else
    AnyInertiaMatrix InertiaObject = {
      BodyMassCorrectionCompatibility massCorrection() = {
        DensityTheoretical = ....Data.unscaled.StandardParameters.CervicalSpine.C1Mass;
        enableMassCorrection = Off;
      };
      Jii = .Data.Jii;
      JaboutCoMOnOff = On;
      sCoM = .Scale(.Data.sCoM_pos);
    };
  #endif

  // This file includes the trunk specifc scaling function
  // and anatomical reference system
  #include "TrunkAnatomicalFrame.any"

  TrunkScaleWithInterfaceMorphing Scale(
    GeomScale = ...Scaling.GeometricalScaling.C1Seg.ScaleFunction,
    PelvisSeg = ..PelvisSeg,
  ) = {};
  
  
  AnyRefNode MoCapMarkerFrameAMMR24 = {}; ///< For backwards compatibility with AMMR 2.4 MoCap Marker protocols

  AnyRefNode C2C1JntNode = {sRel = .Scale(.Data.C2C1JntNode_pos);};        
  AnyRefNode C1C0JntNode = {
    sRel = .Scale(.Data.C1C0JntNode_pos); 
    //AnyDrawNodes DrwNode = {ScaleXYZ = 0.003*{1,1,1};RGB = {1, 0, 0};};
    // Rotated node with x axis aligned with the superior articular facet
    AnyRefNode RotNode = {
      ARel = RotMat(0.25*(..SuperiorArticularFacetAnteriorNodeR.sRel + ..SuperiorArticularFacetPosteriorNodeR.sRel + ..SuperiorArticularFacetAnteriorNodeL.sRel + ..SuperiorArticularFacetPosteriorNodeL.sRel),
                    0.5*(..SuperiorArticularFacetAnteriorNodeR.sRel + ..SuperiorArticularFacetAnteriorNodeL.sRel),
                    0.25*(..SuperiorArticularFacetAnteriorNodeR.sRel + ..SuperiorArticularFacetPosteriorNodeR.sRel + ..SuperiorArticularFacetAnteriorNodeL.sRel + ..SuperiorArticularFacetPosteriorNodeL.sRel)
                    + (..SuperiorArticularFacetAnteriorNodeL.sRel - ..SuperiorArticularFacetAnteriorNodeR.sRel))*RotMat(pi/2,x);
    };
  };

  // Nodes at the superior articular facet
  AnyRefNode SuperiorArticularFacetAnteriorNodeR = {sRel = .Scale(.Data.Right.SuperiorArticularFacetAnteriorNode_pos);};
  AnyRefNode SuperiorArticularFacetPosteriorNodeR = {sRel = .Scale(.Data.Right.SuperiorArticularFacetPosteriorNode_pos);};
  AnyRefNode SuperiorArticularFacetAnteriorNodeL = {sRel = .Scale(.Data.Left.SuperiorArticularFacetAnteriorNode_pos);};
  AnyRefNode SuperiorArticularFacetPosteriorNodeL = {sRel = .Scale(.Data.Left.SuperiorArticularFacetPosteriorNode_pos);};
    
  Right = {
  //Longus Colli
    AnyRefNode LongusColliC5C1Node = {sRel = ..Scale(..Data.Right.LongusColliC5C1Node_pos);};
  //Splenius cervicis nodes
  AnyRefNode SpleniusCervicisT3C1Node = {sRel = ..Scale(..Data.Right.SpleniusCervicisT3C1Node_pos);};
  };
  Left = {
  //Longus Colli
    AnyRefNode LongusColliC5C1Node = {sRel = ..Scale(..Data.Left.LongusColliC5C1Node_pos);};
  //Splenius cervicis nodes
  AnyRefNode SpleniusCervicisT3C1Node = {sRel = ..Scale(..Data.Left.SpleniusCervicisT3C1Node_pos);};
  };

  AnyDrawSurf BoneDraw = {
    FileName = ...Data.unscaled.STL.FilenameC1Seg;
    RGB = ...ColorRef.Segments;
    Opacity = Main.DrawSettings.BonesOpacity.C1;
    AnyFunTransform3D &Scale =.Scale;
  };

  AnyRefNode Right ={};
  AnyRefNode Left ={};
  
};

AnySeg C2Seg = {
  
  AnyFolder &Data = ..Data.unscaled.ModelParameters.C2;    

  r0= .C3Seg.C3C2JntNode.sRel*.C3Seg.Axes0'+.C3Seg.r0-C3C2JntNode.sRel*Axes0';

  // This file includes the trunk specifc scaling function
  // and anatomical reference system
  #include "TrunkAnatomicalFrame.any"

  TrunkScaleWithInterfaceMorphing Scale(
    GeomScale = ...Scaling.GeometricalScaling.C2Seg.ScaleFunction,
    PelvisSeg = ..PelvisSeg,
  ) = {};
  
  // Inertia properties for the segment
  UseInertiaObjects = On;
  #if (BM_TRUNK_CAVITY_MODEL == _CAVITY_MODEL_VOLUME_)
    AnyInertiaSolid BoneInertiaObject = {
      BodyMassCorrection massCorrection() = {
        DensityTheoretical = ....Data.unscaled.ModelParameters.BoneDensity;
        enableMassCorrection = Off;
      };
      AnySurfSTL surface = {
        FileName = ..BoneDraw.FileName;
        AnyFunTransform3D &scale = ..Scale;
        viewSurface.RGB = {0,0,1};
        ScaleXYZ = ..BoneDraw.ScaleXYZ;
      };
    };
  #else
    AnyInertiaMatrix InertiaObject = {
      BodyMassCorrectionCompatibility massCorrection() = {
        DensityTheoretical = ....Data.unscaled.StandardParameters.CervicalSpine.C2Mass;
        enableMassCorrection = Off;
      };
      Jii = .Data.Jii;
      JaboutCoMOnOff = On;
      sCoM = .Scale(.Data.sCoM_pos);
    };
  #endif
  
  AnyRefNode MoCapMarkerFrameAMMR24 = {}; ///< For backwards compatibility with AMMR 2.4 MoCap Marker protocols
  
  AnyRefNode C3C2JntNode = {sRel = .Scale(.Data.C3C2JntNode_pos);};        
  AnyRefNode C2C1JntNode = {
    sRel = .Scale(.Data.C2C1JntNode_pos);
    // AnyDrawNodes DrwNode = {ScaleXYZ = 0.003*{1,1,1};RGB = {1, 0, 0};};
    // Rotated node with x axis aligned with the superior articular facet
    AnyRefNode RotNode = {
      ARel = RotMat(0.25*(..SuperiorArticularFacetAnteriorNodeR.sRel + ..SuperiorArticularFacetPosteriorNodeR.sRel + ..SuperiorArticularFacetAnteriorNodeL.sRel + ..SuperiorArticularFacetPosteriorNodeL.sRel),
                    0.5*(..SuperiorArticularFacetAnteriorNodeR.sRel + ..SuperiorArticularFacetAnteriorNodeL.sRel),
                    0.25*(..SuperiorArticularFacetAnteriorNodeR.sRel + ..SuperiorArticularFacetPosteriorNodeR.sRel + ..SuperiorArticularFacetAnteriorNodeL.sRel + ..SuperiorArticularFacetPosteriorNodeL.sRel)
                    + (..SuperiorArticularFacetAnteriorNodeL.sRel - ..SuperiorArticularFacetAnteriorNodeR.sRel))*RotMat(pi/2,x);
    };
  };

  // Nodes at the superior articular facet
  AnyRefNode SuperiorArticularFacetAnteriorNodeR = {sRel = .Scale(.Data.Right.SuperiorArticularFacetAnteriorNode_pos);};
  AnyRefNode SuperiorArticularFacetPosteriorNodeR = {sRel = .Scale(.Data.Right.SuperiorArticularFacetPosteriorNode_pos);};
  AnyRefNode SuperiorArticularFacetAnteriorNodeL = {sRel = .Scale(.Data.Left.SuperiorArticularFacetAnteriorNode_pos);};
  AnyRefNode SuperiorArticularFacetPosteriorNodeL = {sRel = .Scale(.Data.Left.SuperiorArticularFacetPosteriorNode_pos);};
  
  //Semispinalis cervicis nodes
  AnyRefNode SemispinalisCervicisT1C2NodeR = {sRel = .Scale(.Data.Right.SemispinalisCervicisT1C2Node_pos);};
  AnyRefNode SemispinalisCervicisT1C2NodeL = {sRel = .Scale(.Data.Left.SemispinalisCervicisT1C2Node_pos);};
    
  //Multifidus cervicis nodes
  AnyRefNode MultifidusCervicisC2NodeR = {sRel = .Scale(.Data.Right.MultifidusCervicisC2Node_pos);};
  AnyRefNode MultifidusCervicisC2NodeL = {sRel = .Scale(.Data.Left.MultifidusCervicisC2Node_pos);};

  Right = {
  //Longus Colli
    AnyRefNode LongusColliC6C2Node = {sRel = ..Scale(..Data.Right.LongusColliC6C2Node_pos);};
    AnyRefNode LongusColliC5C1Node = {sRel = ..Scale(..Data.Right.LongusColliC5C1Node_pos);};
  //Scalenus Medius nodes
  AnyRefNode ScalenusMediusR1C2Node     =     {sRel = ..Scale(..Data.Right.ScalenusMediusR1C2Node_pos);};
  //Longissimus cervicis nodes
  AnyRefNode LongissimusCervicisT1C2Node = {sRel = ..Scale(..Data.Right.LongissimusCervicisT1C2Node_pos);};
  //Splenius cervicis nodes
  AnyRefNode SpleniusCervicisT4C2Node = {sRel = ..Scale(..Data.Right.SpleniusCervicisT4C2Node_pos);};
  };
  Left = {
  //Longus Colli
    AnyRefNode LongusColliC6C2Node = {sRel = ..Scale(..Data.Left.LongusColliC6C2Node_pos);};
    AnyRefNode LongusColliC5C1Node = {sRel = ..Scale(..Data.Left.LongusColliC5C1Node_pos);};
  //Scalenus Medius nodes
  AnyRefNode ScalenusMediusR1C2Node     =     {sRel = ..Scale(..Data.Left.ScalenusMediusR1C2Node_pos);};
  //Longissimus cervicis nodes
  AnyRefNode LongissimusCervicisT1C2Node = {sRel = ..Scale(..Data.Left.LongissimusCervicisT1C2Node_pos);};
  //Splenius cervicis nodes
  AnyRefNode SpleniusCervicisT4C2Node = {sRel = ..Scale(..Data.Left.SpleniusCervicisT4C2Node_pos);};
  };

  AnyDrawSurf BoneDraw = {
    FileName = ...Data.unscaled.STL.FilenameC2Seg;
    RGB = ...ColorRef.Segments;
    Opacity = Main.DrawSettings.BonesOpacity.C2;
    AnyFunTransform3D &Scale =.Scale;
  };

  AnyRefNode Right ={};
  AnyRefNode Left ={};
};    


AnySeg C3Seg = {

  AnyFolder &Data = ..Data.unscaled.ModelParameters.C3;    
  
  r0= .C4Seg.C4C3JntNode.sRel*.C4Seg.Axes0'+.C4Seg.r0-C4C3JntNode.sRel*Axes0';

  // Inertia properties for the segment
  UseInertiaObjects = On;
  #if (BM_TRUNK_CAVITY_MODEL == _CAVITY_MODEL_VOLUME_)
    AnyInertiaSolid BoneInertiaObject = {
      BodyMassCorrection massCorrection() = {
        DensityTheoretical = ....Data.unscaled.ModelParameters.BoneDensity;
        enableMassCorrection = Off;
      };
      AnySurfSTL surface = {
        FileName = ..BoneDraw.FileName;
        AnyFunTransform3D &scale = ..Scale;
        viewSurface.RGB = {0,0,1};
        ScaleXYZ = ..BoneDraw.ScaleXYZ;
      };
    };
  #else
    AnyInertiaMatrix InertiaObject = {
      BodyMassCorrectionCompatibility massCorrection() = {
        DensityTheoretical = ....Data.unscaled.StandardParameters.CervicalSpine.C3Mass;
        enableMassCorrection = Off;
      };
      Jii = .Data.Jii;
      JaboutCoMOnOff = On;
      sCoM = .Scale(.Data.sCoM_pos);
    };
  #endif

  // This file includes the trunk specific scaling function
  // and anatomical reference system
  #include "TrunkAnatomicalFrame.any"

  TrunkScaleWithInterfaceMorphing Scale(
    GeomScale = ...Scaling.GeometricalScaling.C3Seg.ScaleFunction,
    PelvisSeg = ..PelvisSeg,
  ) = {};
  
  
  AnyRefNode MoCapMarkerFrameAMMR24 = {}; ///< For backwards Compatibility with AMMR 2.4 MoCap Marker protocols

  AnyRefNode C4C3JntNode = {sRel = .Scale(.Data.C4C3JntNode_pos);};        
  AnyRefNode C3C2JntNode = {
    sRel = .Scale(.Data.C3C2JntNode_pos);
    //AnyDrawNodes DrwNode = {ScaleXYZ = 0.003*{1,1,1};RGB = {1, 0, 0};};
    // Rotated node with x axis parallel to the superior endplate surface
    AnyRefNode RotNode = {
      ARel = RotMat(
           0.5*(..SuperiorEndplateAnteriorNode.sRel + ..SuperiorEndplatePosteriorNode.sRel),
           ..SuperiorEndplateAnteriorNode.sRel,
           0.5*(..SuperiorEndplateAnteriorNode.sRel + ..SuperiorEndplatePosteriorNode.sRel) + (..UncinateProcessNodeL.sRel - ..UncinateProcessNodeR.sRel)
        )*RotMat(pi/2,x);
    };
  };

  // Nodes at the anterior and posterior points on the superior endplate
  AnyRefNode SuperiorEndplateAnteriorNode = {sRel = .Scale(.Data.SuperiorEndplateAnteriorNode_pos);};
  AnyRefNode SuperiorEndplatePosteriorNode = {sRel = .Scale(.Data.SuperiorEndplatePosteriorNode_pos);};

  // Nodes at the right and left points on the superior endplate
  AnyRefNode UncinateProcessNodeR = {sRel = .Scale(.Data.Right.UncinateProcessNode_pos);};
  AnyRefNode UncinateProcessNodeL = {sRel = .Scale(.Data.Left.UncinateProcessNode_pos);};
     
    
  //Longus cappitis nodes
  AnyRefNode LongusCapitisC3C0NodeR = {sRel = .Scale(.Data.Right.LongusCapitisC3C0Node_pos);};
  AnyRefNode LongusCapitisC3C0NodeL = {sRel = .Scale(.Data.Left.LongusCapitisC3C0Node_pos);};
      
  //Semispinalis cervicis nodes
  AnyRefNode SemispinalisCervicisT2C3NodeR = {sRel = .Scale(.Data.Right.SemispinalisCervicisT2C3Node_pos);};
  AnyRefNode SemispinalisCervicisT2C3NodeL = {sRel = .Scale(.Data.Left.SemispinalisCervicisT2C3Node_pos);};
  
  //Longissimus capitis nodes
  AnyRefNode LongissimusCapitisC3C0NodeR = {sRel = .Scale(.Data.Right.LongissimusCapitisC3C0Node_pos);};
  AnyRefNode LongissimusCapitisC3C0NodeL = {sRel = .Scale(.Data.Left.LongissimusCapitisC3C0Node_pos);};
    
  //Multifidus cervicis nodes
  AnyRefNode MultifidusCervicisC3NodeR = {sRel = .Scale(.Data.Right.MultifidusCervicisC3Node_pos);};
  AnyRefNode MultifidusCervicisC3NodeL = {sRel = .Scale(.Data.Left.MultifidusCervicisC3Node_pos);};
  
  
  Right = {
    //Longus Colli
    AnyRefNode LongusColliC7C3Node = {sRel = ..Scale(..Data.Right.LongusColliC7C3Node_pos);};
    AnyRefNode LongusColliC6C2Node = {sRel = ..Scale(..Data.Right.LongusColliC6C2Node_pos);};
    AnyRefNode LongusColliC5C1Node = {sRel = ..Scale(..Data.Right.LongusColliC5C1Node_pos);};
    //Scalenus Anterior nodes
    AnyRefNode ScalenusAnteriorR1C3Node   =     {sRel = ..Scale(..Data.Right.ScalenusAnteriorR1C3Node_pos);};
    //Scalenus Medius nodes
    AnyRefNode ScalenusMediusR1C3Node     =     {sRel = ..Scale(..Data.Right.ScalenusMediusR1C3Node_pos);};
    //Longissimus cervicis nodes
    AnyRefNode LongissimusCervicisT2C3Node = {sRel = ..Scale(..Data.Right.LongissimusCervicisT2C3Node_pos);};
    //Splenius cervicis nodes
    AnyRefNode SpleniusCervicisT5C3Node = {sRel = ..Scale(..Data.Right.SpleniusCervicisT5C3Node_pos);};
    AnyRefNode SpleniusCervicisT6C3Node = {sRel = ..Scale(..Data.Right.SpleniusCervicisT6C3Node_pos);};
  };
  Left = {
    //Longus Colli
    AnyRefNode LongusColliC7C3Node = {sRel = ..Scale(..Data.Left.LongusColliC7C3Node_pos);};
    AnyRefNode LongusColliC6C2Node = {sRel = ..Scale(..Data.Left.LongusColliC6C2Node_pos);};
    AnyRefNode LongusColliC5C1Node = {sRel = ..Scale(..Data.Left.LongusColliC5C1Node_pos);};
    //Scalenus Anterior nodes
    AnyRefNode ScalenusAnteriorR1C3Node   =     {sRel = ..Scale(..Data.Left.ScalenusAnteriorR1C3Node_pos);};
    //Scalenus Medius nodes
    AnyRefNode ScalenusMediusR1C3Node     =     {sRel = ..Scale(..Data.Left.ScalenusMediusR1C3Node_pos);};
    //Longissimus cervicis nodes
    AnyRefNode LongissimusCervicisT2C3Node = {sRel = ..Scale(..Data.Left.LongissimusCervicisT2C3Node_pos);};
    //Splenius cervicis nodes
    AnyRefNode SpleniusCervicisT5C3Node = {sRel = ..Scale(..Data.Left.SpleniusCervicisT5C3Node_pos);};
    AnyRefNode SpleniusCervicisT6C3Node = {sRel = ..Scale(..Data.Left.SpleniusCervicisT6C3Node_pos);};
  };

  AnyDrawSurf BoneDraw = {
    FileName = ...Data.unscaled.STL.FilenameC3Seg;
    RGB = ...ColorRef.Segments;
    Opacity = Main.DrawSettings.BonesOpacity.C3;
    AnyFunTransform3D &Scale =.Scale;
  };

  AnyRefNode Right ={};
  AnyRefNode Left ={};
};

AnySeg C4Seg = {

  AnyFolder &Data = ..Data.unscaled.ModelParameters.C4;    

  r0= .C5Seg.C5C4JntNode.sRel*.C5Seg.Axes0'+.C5Seg.r0-C5C4JntNode.sRel*Axes0';    
  
  // Inertia properties for the segment
  UseInertiaObjects = On;
  #if (BM_TRUNK_CAVITY_MODEL == _CAVITY_MODEL_VOLUME_)
    AnyInertiaSolid BoneInertiaObject = {
      BodyMassCorrection massCorrection() = {
        DensityTheoretical = ....Data.unscaled.ModelParameters.BoneDensity;
        enableMassCorrection = Off;
      };
      AnySurfSTL surface = {
        FileName = ..BoneDraw.FileName;
        AnyFunTransform3D &scale = ..Scale;
        viewSurface.RGB = {0,0,1};
        ScaleXYZ = ..BoneDraw.ScaleXYZ;
      };
    };
  #else
    AnyInertiaMatrix InertiaObject = {
      BodyMassCorrectionCompatibility massCorrection() = {
        DensityTheoretical = ....Data.unscaled.StandardParameters.CervicalSpine.C4Mass;
        enableMassCorrection = Off;
      };
      Jii = .Data.Jii;
      JaboutCoMOnOff = On;
      sCoM = .Scale(.Data.sCoM_pos);
    };           
  #endif

  // This file includes the trunk specifc scaling function
  // and anatomical reference system
  #include "TrunkAnatomicalFrame.any"

  TrunkScaleWithInterfaceMorphing Scale(
    GeomScale = ...Scaling.GeometricalScaling.C4Seg.ScaleFunction,
    PelvisSeg = ..PelvisSeg,
  ) = {};
  
  
  AnyRefNode MoCapMarkerFrameAMMR24 = {}; ///< For backwards compatibility with AMMR 2.4 MoCap Marker protocols
  
  AnyRefNode C5C4JntNode = {sRel = .Scale(.Data.C5C4JntNode_pos);};        
  AnyRefNode C4C3JntNode = {
    sRel = .Scale(.Data.C4C3JntNode_pos);
    //AnyDrawNodes DrwNode = {ScaleXYZ = 0.003*{1,1,1};RGB = {1, 0, 0};};
    // Rotated node with x axis parallel to the superior endplate surface
    AnyRefNode RotNode = {
      ARel = RotMat(0.5*(..SuperiorEndplateAnteriorNode.sRel + ..SuperiorEndplatePosteriorNode.sRel),
                    ..SuperiorEndplateAnteriorNode.sRel,
                    0.5*(..SuperiorEndplateAnteriorNode.sRel + ..SuperiorEndplatePosteriorNode.sRel) + (..UncinateProcessNodeL.sRel - ..UncinateProcessNodeR.sRel))*RotMat(pi/2,x);
    };
  };

  // Nodes at the anterior and posterior points on the superior endplate
  AnyRefNode SuperiorEndplateAnteriorNode = {sRel = .Scale(.Data.SuperiorEndplateAnteriorNode_pos);};
  AnyRefNode SuperiorEndplatePosteriorNode = {sRel = .Scale(.Data.SuperiorEndplatePosteriorNode_pos);};

  // Nodes at the right and left points on the superior endplate
  AnyRefNode UncinateProcessNodeR = {sRel = .Scale(.Data.Right.UncinateProcessNode_pos);};
  AnyRefNode UncinateProcessNodeL = {sRel = .Scale(.Data.Left.UncinateProcessNode_pos);};
  
  //Longus cappitis nodes
  AnyRefNode LongusCapitisC4C0NodeR = {sRel = .Scale(.Data.Right.LongusCapitisC4C0Node_pos);};
  AnyRefNode LongusCapitisC4C0NodeL = {sRel = .Scale(.Data.Left.LongusCapitisC4C0Node_pos);};
    
  //Semispinalis capitis nodes
  AnyRefNode SemispinalisCapitisC4C0NodeR = {sRel = .Scale(.Data.Right.SemispinalisCapitisC4C0Node_pos);};
  AnyRefNode SemispinalisCapitisC4C0NodeL = {sRel = .Scale(.Data.Left.SemispinalisCapitisC4C0Node_pos);};
  
  //Semispinalis cervicis nodes
  AnyRefNode SemispinalisCervicisT3C4NodeR = {sRel = .Scale(.Data.Right.SemispinalisCervicisT3C4Node_pos);};
  AnyRefNode SemispinalisCervicisT3C4NodeL = {sRel = .Scale(.Data.Left.SemispinalisCervicisT3C4Node_pos);};
  
  //Longissimus capitis nodes
  AnyRefNode LongissimusCapitisC4C0NodeR = {sRel = .Scale(.Data.Right.LongissimusCapitisC4C0Node_pos);};
  AnyRefNode LongissimusCapitisC4C0NodeL = {sRel = .Scale(.Data.Left.LongissimusCapitisC4C0Node_pos);};
    
  //Multifidus cervicis nodes
  AnyRefNode MultifidusCervicisC4NodeR = {sRel = .Scale(.Data.Right.MultifidusCervicisC4Node_pos);};
  AnyRefNode MultifidusCervicisC4NodeL = {sRel = .Scale(.Data.Left.MultifidusCervicisC4Node_pos);};

  Right = {
    // Iliocostalis Cervicis
    AnyRefNode ICptR3C4Node        = {sRel = ..Scale(..Data.Right.ICptR3C4Node_pos);};
    AnyRefNode ICptR6C4Node        = {sRel = ..Scale(..Data.Right.ICptR6C4Node_pos);};
    //Longus Colli
    AnyRefNode LongusColliT1C4Node = {sRel = ..Scale(..Data.Right.LongusColliT1C4Node_pos);};
    AnyRefNode LongusColliC7C3Node = {sRel = ..Scale(..Data.Right.LongusColliC7C3Node_pos);};
    AnyRefNode LongusColliC6C2Node = {sRel = ..Scale(..Data.Right.LongusColliC6C2Node_pos);};
    AnyRefNode LongusColliC5C1Node = {sRel = ..Scale(..Data.Right.LongusColliC5C1Node_pos);};
    //Scalenus Anterior nodes
    AnyRefNode ScalenusAnteriorR1C4Node   =     {sRel = ..Scale(..Data.Right.ScalenusAnteriorR1C4Node_pos);};
    //Scalenus Medius nodes
    AnyRefNode ScalenusMediusR1C4Node     =     {sRel = ..Scale(..Data.Right.ScalenusMediusR1C4Node_pos);};
    //Longissimus cervicis nodes
    AnyRefNode LongissimusCervicisT3C4Node = {sRel = ..Scale(..Data.Right.LongissimusCervicisT3C4Node_pos);};
  };
  Left = {
    // Iliocostalis Cervicis
    AnyRefNode ICptR3C4Node        = {sRel = ..Scale(..Data.Left.ICptR3C4Node_pos);};
    AnyRefNode ICptR6C4Node        = {sRel = ..Scale(..Data.Left.ICptR6C4Node_pos);};
    //Longus Colli
    AnyRefNode LongusColliT1C4Node = {sRel = ..Scale(..Data.Left.LongusColliT1C4Node_pos);};
    AnyRefNode LongusColliC7C3Node = {sRel = ..Scale(..Data.Left.LongusColliC7C3Node_pos);};
    AnyRefNode LongusColliC6C2Node = {sRel = ..Scale(..Data.Left.LongusColliC6C2Node_pos);};
    AnyRefNode LongusColliC5C1Node = {sRel = ..Scale(..Data.Left.LongusColliC5C1Node_pos);};
    //Scalenus Anterior nodes
    AnyRefNode ScalenusAnteriorR1C4Node   =     {sRel = ..Scale(..Data.Left.ScalenusAnteriorR1C4Node_pos);};
    //Scalenus Medius nodes
    AnyRefNode ScalenusMediusR1C4Node     =     {sRel = ..Scale(..Data.Left.ScalenusMediusR1C4Node_pos);};
    //Longissimus cervicis nodes
    AnyRefNode LongissimusCervicisT3C4Node = {sRel = ..Scale(..Data.Left.LongissimusCervicisT3C4Node_pos);};
  };

  AnyDrawSurf BoneDraw = {
    FileName = ...Data.unscaled.STL.FilenameC4Seg;
    RGB = ...ColorRef.Segments;
    Opacity = Main.DrawSettings.BonesOpacity.C4;
    AnyFunTransform3D &Scale =.Scale;
  };

  AnyRefNode Right ={};
  AnyRefNode Left ={};
};

AnySeg C5Seg = {

  AnyFolder &Data = ..Data.unscaled.ModelParameters.C5;    
  
  r0= .C6Seg.C6C5JntNode.sRel*.C6Seg.Axes0'+.C6Seg.r0-C6C5JntNode.sRel*Axes0';

  // Inertia properties for the segment
  UseInertiaObjects = On;
  #if (BM_TRUNK_CAVITY_MODEL == _CAVITY_MODEL_VOLUME_)
    AnyInertiaSolid BoneInertiaObject = {
      BodyMassCorrection massCorrection() = {
        DensityTheoretical = ....Data.unscaled.ModelParameters.BoneDensity;
        enableMassCorrection = Off;
      };
      AnySurfSTL surface = {
        FileName = ..BoneDraw.FileName;
        AnyFunTransform3D &scale = ..Scale;
        viewSurface.RGB = {0,0,1};
        ScaleXYZ = ..BoneDraw.ScaleXYZ;
      };
    };
  #else
    AnyInertiaMatrix InertiaObject = {
      BodyMassCorrectionCompatibility massCorrection() = {
        DensityTheoretical = ....Data.unscaled.StandardParameters.CervicalSpine.C5Mass;
        enableMassCorrection = Off;
      };
      Jii = .Data.Jii;
      JaboutCoMOnOff = On;
      sCoM = .Scale(.Data.sCoM_pos);
    };          
  #endif

  // This file includes the trunk specifc scaling function
  // and anatomical reference system
  #include "TrunkAnatomicalFrame.any"

  TrunkScaleWithInterfaceMorphing Scale(
    GeomScale = ...Scaling.GeometricalScaling.C5Seg.ScaleFunction,
    PelvisSeg = ..PelvisSeg,
  ) = {};
  
   
  AnyRefNode MoCapMarkerFrameAMMR24 = {}; ///< For backwards compatibility with AMMR 2.4 MoCap Marker protocols

  AnyRefNode C6C5JntNode = {sRel = .Scale(.Data.C6C5JntNode_pos);};        
  AnyRefNode C5C4JntNode = {
    sRel = .Scale(.Data.C5C4JntNode_pos);
    //AnyDrawNodes DrwNode = {ScaleXYZ = 0.003*{1,1,1};RGB = {1, 0, 0};};
    // Rotated node with x axis parallel to the superior endplate surface
    AnyRefNode RotNode = {
      ARel = RotMat(0.5*(..SuperiorEndplateAnteriorNode.sRel + ..SuperiorEndplatePosteriorNode.sRel),
                    ..SuperiorEndplateAnteriorNode.sRel,
                    0.5*(..SuperiorEndplateAnteriorNode.sRel + ..SuperiorEndplatePosteriorNode.sRel) + (..UncinateProcessNodeL.sRel - ..UncinateProcessNodeR.sRel))*RotMat(pi/2,x);
    };
  };

  // Nodes at the anterior and posterior points on the superior endplate
  AnyRefNode SuperiorEndplateAnteriorNode = {sRel = .Scale(.Data.SuperiorEndplateAnteriorNode_pos);};
  AnyRefNode SuperiorEndplatePosteriorNode = {sRel = .Scale(.Data.SuperiorEndplatePosteriorNode_pos);};

  // Nodes at the right and left points on the superior endplate
  AnyRefNode UncinateProcessNodeR = {sRel = .Scale(.Data.Right.UncinateProcessNode_pos);};
  AnyRefNode UncinateProcessNodeL = {sRel = .Scale(.Data.Left.UncinateProcessNode_pos);};
  
  //Longus cappitis nodes
  AnyRefNode LongusCapitisC5C0NodeR = {sRel = .Scale(.Data.Right.LongusCapitisC5C0Node_pos);};
  AnyRefNode LongusCapitisC5C0NodeL = {sRel = .Scale(.Data.Left.LongusCapitisC5C0Node_pos);};
    
  //Semispinalis capitis nodes
  AnyRefNode SemispinalisCapitisC5C0NodeR = {sRel = .Scale(.Data.Right.SemispinalisCapitisC5C0Node_pos);};
  AnyRefNode SemispinalisCapitisC5C0NodeL = {sRel = .Scale(.Data.Left.SemispinalisCapitisC5C0Node_pos);};
  
  //Semispinalis cervicis nodes
  AnyRefNode SemispinalisCervicisT4C5NodeR = {sRel = .Scale(.Data.Right.SemispinalisCervicisT4C5Node_pos);};
  AnyRefNode SemispinalisCervicisT4C5NodeL = {sRel = .Scale(.Data.Left.SemispinalisCervicisT4C5Node_pos);};
  
  //Longissimus capitis nodes
  AnyRefNode LongissimusCapitisC5C0NodeR = {sRel = .Scale(.Data.Right.LongissimusCapitisC5C0Node_pos);};
  AnyRefNode LongissimusCapitisC5C0NodeL = {sRel = .Scale(.Data.Left.LongissimusCapitisC5C0Node_pos);};
  
  //Multifidus cervicis nodes
  AnyRefNode MultifidusCervicisC5C2NodeR = {sRel = .Scale(.Data.Right.MultifidusCervicisC5C2Node_pos);};
  AnyRefNode MultifidusCervicisC5C2NodeL = {sRel = .Scale(.Data.Left.MultifidusCervicisC5C2Node_pos);};
  
  AnyRefNode MultifidusCervicisC5NodeR = {sRel = .Scale(.Data.Right.MultifidusCervicisC5Node_pos);};
  AnyRefNode MultifidusCervicisC5NodeL = {sRel = .Scale(.Data.Left.MultifidusCervicisC5Node_pos);};
 

  Right = {
    // Iliocostalis Cervicis
    AnyRefNode ICptR4C5Node        = {sRel = ..Scale(..Data.Right.ICptR4C5Node_pos);};
    //Longus Colli
    AnyRefNode LongusColliT2C5Node = {sRel = ..Scale(..Data.Right.LongusColliT2C5Node_pos);};
    AnyRefNode LongusColliT1C4Node = {sRel = ..Scale(..Data.Right.LongusColliT1C4Node_pos);};
    AnyRefNode LongusColliC7C3Node = {sRel = ..Scale(..Data.Right.LongusColliC7C3Node_pos);};
    AnyRefNode LongusColliC6C2Node = {sRel = ..Scale(..Data.Right.LongusColliC6C2Node_pos);};
    AnyRefNode LongusColliC5C1Node = {sRel = ..Scale(..Data.Right.LongusColliC5C1Node_pos);};
  	//Scalenus Anterior nodes
  	AnyRefNode ScalenusAnteriorR1C5Node   =     {sRel = ..Scale(..Data.Right.ScalenusAnteriorR1C5Node_pos);};
  	//Scalenus Medius nodes
  	AnyRefNode ScalenusMediusR1C5Node     =     {sRel = ..Scale(..Data.Right.ScalenusMediusR1C5Node_pos);};
  	//Scalenus Posterior nodes
  	AnyRefNode ScalenusPosteriorR2C5Node  =     {sRel = ..Scale(..Data.Right.ScalenusPosteriorR2C5Node_pos);};
  	//Longissimus cervicis nodes
  	AnyRefNode LongissimusCervicisT4C5Node = {sRel = ..Scale(..Data.Right.LongissimusCervicisT4C5Node_pos);};
  };
  Left = {
    // Iliocostalis Cervicis
    AnyRefNode ICptR4C5Node        = {sRel = ..Scale(..Data.Left.ICptR4C5Node_pos);};
    AnyRefNode LongusColliT2C5Node = {sRel = ..Scale(..Data.Left.LongusColliT2C5Node_pos);};
    AnyRefNode LongusColliT1C4Node = {sRel = ..Scale(..Data.Left.LongusColliT1C4Node_pos);};
    AnyRefNode LongusColliC7C3Node = {sRel = ..Scale(..Data.Left.LongusColliC7C3Node_pos);};
    AnyRefNode LongusColliC6C2Node = {sRel = ..Scale(..Data.Left.LongusColliC6C2Node_pos);};
    AnyRefNode LongusColliC5C1Node = {sRel = ..Scale(..Data.Left.LongusColliC5C1Node_pos);};
  	//Scalenus Anterior nodes
  	AnyRefNode ScalenusAnteriorR1C5Node   =     {sRel = ..Scale(..Data.Left.ScalenusAnteriorR1C5Node_pos);};
  	//Scalenus Medius nodes
  	AnyRefNode ScalenusMediusR1C5Node     =     {sRel = ..Scale(..Data.Left.ScalenusMediusR1C5Node_pos);};
  	//Scalenus Posterior nodes
  	AnyRefNode ScalenusPosteriorR2C5Node  =     {sRel = ..Scale(..Data.Left.ScalenusPosteriorR2C5Node_pos);};
  	//Longissimus cervicis nodes
  	AnyRefNode LongissimusCervicisT4C5Node = {sRel = ..Scale(..Data.Left.LongissimusCervicisT4C5Node_pos);};
  };

  AnyDrawSurf BoneDraw = {
    FileName = ...Data.unscaled.STL.FilenameC5Seg;
    RGB = ...ColorRef.Segments;
    Opacity = Main.DrawSettings.BonesOpacity.C5;
    AnyFunTransform3D &Scale =.Scale;
  };

  AnyRefNode Right ={};
  AnyRefNode Left ={};
};

AnySeg C6Seg = {

  AnyFolder &Data = ..Data.unscaled.ModelParameters.C6;    

  r0= .C7Seg.C7C6JntNode.sRel*.C7Seg.Axes0'+.C7Seg.r0-C7C6JntNode.sRel*Axes0';

  // Inertia properties for the segment
  UseInertiaObjects = On;
  #if (BM_TRUNK_CAVITY_MODEL == _CAVITY_MODEL_VOLUME_)
    AnyInertiaSolid BoneInertiaObject = {
      BodyMassCorrection massCorrection() = {
        DensityTheoretical = ....Data.unscaled.ModelParameters.BoneDensity;
        enableMassCorrection = Off;
      };
      AnySurfSTL surface = {
        FileName = ..BoneDraw.FileName;
        AnyFunTransform3D &scale = ..Scale;
        viewSurface.RGB = {0,0,1};
        ScaleXYZ = ..BoneDraw.ScaleXYZ;
      };
    };
  #else
    AnyInertiaMatrix InertiaObject = {
      BodyMassCorrectionCompatibility massCorrection() = {
        DensityTheoretical = ....Data.unscaled.StandardParameters.CervicalSpine.C1Mass;
        enableMassCorrection = Off;
      };
      Jii = .Data.Jii;
      JaboutCoMOnOff = On;
      sCoM = .Scale(.Data.sCoM_pos);
    };           
  #endif

  // This file includes the trunk specifc scaling function
  // and anatomical reference system
  #include "TrunkAnatomicalFrame.any"

  TrunkScaleWithInterfaceMorphing Scale(
    GeomScale = ...Scaling.GeometricalScaling.C6Seg.ScaleFunction,
    PelvisSeg = ..PelvisSeg,
  ) = {};
  

  AnyRefNode MoCapMarkerFrameAMMR24 = {}; ///< For backwards compatibility with AMMR 2.4 MoCap Marker protocols
  
  AnyRefNode C7C6JntNode = {sRel = .Scale(.Data.C7C6JntNode_pos);};        
  AnyRefNode C6C5JntNode = {
    sRel = .Scale(.Data.C6C5JntNode_pos);
    // AnyDrawNodes DrwNode = {ScaleXYZ = 0.003*{1,1,1};RGB = {1, 0, 0};};
    // Rotated node with x axis parallel to the superior endplate surface
    AnyRefNode RotNode = {
      ARel = RotMat(0.5*(..SuperiorEndplateAnteriorNode.sRel + ..SuperiorEndplatePosteriorNode.sRel),
                    ..SuperiorEndplateAnteriorNode.sRel,
                    0.5*(..SuperiorEndplateAnteriorNode.sRel + ..SuperiorEndplatePosteriorNode.sRel) + (..UncinateProcessNodeL.sRel - ..UncinateProcessNodeR.sRel))*RotMat(pi/2,x);
    };
  };

  // Nodes at the anterior and posterior points on the superior endplate
  AnyRefNode SuperiorEndplateAnteriorNode = {sRel = .Scale(.Data.SuperiorEndplateAnteriorNode_pos);};
  AnyRefNode SuperiorEndplatePosteriorNode = {sRel = .Scale(.Data.SuperiorEndplatePosteriorNode_pos);};

  // Nodes at the right and left points on the superior endplate
  AnyRefNode UncinateProcessNodeR = {sRel = .Scale(.Data.Right.UncinateProcessNode_pos);};
  AnyRefNode UncinateProcessNodeL = {sRel = .Scale(.Data.Left.UncinateProcessNode_pos);};
  
  //Longus cappitis nodes
  AnyRefNode LongusCapitisC6C0NodeR = {sRel = .Scale(.Data.Right.LongusCapitisC6C0Node_pos);};
  AnyRefNode LongusCapitisC6C0NodeL = {sRel = .Scale(.Data.Left.LongusCapitisC6C0Node_pos);};
  
  //Semispinalis capitis nodes
  AnyRefNode SemispinalisCapitisC6C0NodeR = {sRel = .Scale(.Data.Right.SemispinalisCapitisC6C0Node_pos);};
  AnyRefNode SemispinalisCapitisC6C0NodeL = {sRel = .Scale(.Data.Left.SemispinalisCapitisC6C0Node_pos);};
  
  //Semispinalis cervicis nodes
  AnyRefNode SemispinalisCervicisT5C6NodeR = {sRel = .Scale(.Data.Right.SemispinalisCervicisT5C6Node_pos);};
  AnyRefNode SemispinalisCervicisT5C6NodeL = {sRel = .Scale(.Data.Left.SemispinalisCervicisT5C6Node_pos);};
  
  //Longissimus capitis nodes
  AnyRefNode LongissimusCapitisC6C0NodeR = {sRel = .Scale(.Data.Right.LongissimusCapitisC6C0Node_pos);};
  AnyRefNode LongissimusCapitisC6C0NodeL = {sRel = .Scale(.Data.Left.LongissimusCapitisC6C0Node_pos);};
    
  //Multifidus cervicis nodes
  AnyRefNode MultifidusCervicisC6C2NodeR = {sRel = .Scale(.Data.Right.MultifidusCervicisC6C2Node_pos);};
  AnyRefNode MultifidusCervicisC6C2NodeL = {sRel = .Scale(.Data.Left.MultifidusCervicisC6C2Node_pos);};
  
  AnyRefNode MultifidusCervicisC6C3NodeR = {sRel = .Scale(.Data.Right.MultifidusCervicisC6C3Node_pos);};
  AnyRefNode MultifidusCervicisC6C3NodeL = {sRel = .Scale(.Data.Left.MultifidusCervicisC6C3Node_pos);};
  
  AnyRefNode MultifidusCervicisC6NodeR = {sRel = .Scale(.Data.Right.MultifidusCervicisC6Node_pos);};
  AnyRefNode MultifidusCervicisC6NodeL = {sRel = .Scale(.Data.Left.MultifidusCervicisC6Node_pos);};
  
  AnyRefNode SSTC6Spinous = {sRel = .Scale(.Data.SSTC6Spinous_pos);};
  Right = {
    // Iliocostalis Cervicis
    AnyRefNode ICptR5C6Node        = {sRel = ..Scale(..Data.Right.ICptR5C6Node_pos);};
    //Longus Colli
    AnyRefNode LongusColliT3C6Node = {sRel = ..Scale(..Data.Right.LongusColliT3C6Node_pos);};
    AnyRefNode LongusColliT2C5Node = {sRel = ..Scale(..Data.Right.LongusColliT2C5Node_pos);};
    AnyRefNode LongusColliT1C4Node = {sRel = ..Scale(..Data.Right.LongusColliT1C4Node_pos);};
    AnyRefNode LongusColliC7C3Node = {sRel = ..Scale(..Data.Right.LongusColliC7C3Node_pos);};
    AnyRefNode LongusColliC6C2Node = {sRel = ..Scale(..Data.Right.LongusColliC6C2Node_pos);};
    //Scalenus Anterior nodes
    AnyRefNode ScalenusAnteriorR1C6Node   =     {sRel = ..Scale(..Data.Right.ScalenusAnteriorR1C6Node_pos);};
    //Scalenus Medius nodes
    AnyRefNode ScalenusMediusR1C6Node     =     {sRel = ..Scale(..Data.Right.ScalenusMediusR1C6Node_pos);};
    //Scalenus Posterior nodes
    AnyRefNode ScalenusPosteriorR2C6Node  =     {sRel = ..Scale(..Data.Right.ScalenusPosteriorR2C6Node_pos);};
    //Longissimus cervicis nodes
    AnyRefNode LongissimusCervicisT5C6Node = {sRel = ..Scale(..Data.Right.LongissimusCervicisT5C6Node_pos);};
  };
  Left = {
    // Iliocostalis Cervicis
    AnyRefNode ICptR5C6Node        = {sRel = ..Scale(..Data.Left.ICptR5C6Node_pos);};
    AnyRefNode LongusColliT3C6Node = {sRel = ..Scale(..Data.Left.LongusColliT3C6Node_pos);};
    AnyRefNode LongusColliT2C5Node = {sRel = ..Scale(..Data.Left.LongusColliT2C5Node_pos);};
    AnyRefNode LongusColliT1C4Node = {sRel = ..Scale(..Data.Left.LongusColliT1C4Node_pos);};
    AnyRefNode LongusColliC7C3Node = {sRel = ..Scale(..Data.Left.LongusColliC7C3Node_pos);};
    AnyRefNode LongusColliC6C2Node = {sRel = ..Scale(..Data.Left.LongusColliC6C2Node_pos);};
    //Scalenus Anterior nodes
    AnyRefNode ScalenusAnteriorR1C6Node   =     {sRel = ..Scale(..Data.Left.ScalenusAnteriorR1C6Node_pos);};
    //Scalenus Medius nodes
    AnyRefNode ScalenusMediusR1C6Node     =     {sRel = ..Scale(..Data.Left.ScalenusMediusR1C6Node_pos);};
    //Scalenus Posterior nodes
    AnyRefNode ScalenusPosteriorR2C6Node  =     {sRel = ..Scale(..Data.Left.ScalenusPosteriorR2C6Node_pos);};
    //Longissimus cervicis nodes
    AnyRefNode LongissimusCervicisT5C6Node = {sRel = ..Scale(..Data.Left.LongissimusCervicisT5C6Node_pos);};
  };

  AnyDrawSurf BoneDraw = {
    FileName = ...Data.unscaled.STL.FilenameC6Seg;
    RGB = ...ColorRef.Segments;
    Opacity = Main.DrawSettings.BonesOpacity.C6;
    AnyFunTransform3D &Scale =.Scale;
  };

  AnyRefNode Right ={};
  AnyRefNode Left ={};
};

AnySeg C7Seg = {

  AnyFolder &Data = ..Data.unscaled.ModelParameters.C7;    
  
  r0= ..Segments.T1Seg.T1C7JntNode.sRel*..Segments.T1Seg.Axes0'+..Segments.T1Seg.r0-T1C7JntNode.sRel*Axes0';
  
  // Inertia properties for the segment
  UseInertiaObjects = On;
  #if (BM_TRUNK_CAVITY_MODEL == _CAVITY_MODEL_VOLUME_)
    AnyInertiaSolid BoneInertiaObject = {
      BodyMassCorrection massCorrection() = {
        DensityTheoretical = ....Data.unscaled.ModelParameters.BoneDensity;
        enableMassCorrection = Off;
      };
      AnySurfSTL surface = {
        FileName = ..BoneDraw.FileName;
        AnyFunTransform3D &scale = ..Scale;
        viewSurface.RGB = {0,0,1};
        ScaleXYZ = ..BoneDraw.ScaleXYZ;
      };
    };
  #else
    AnyInertiaMatrix InertiaObject = {
      BodyMassCorrectionCompatibility massCorrection() = {
        DensityTheoretical = ....Data.unscaled.StandardParameters.CervicalSpine.C1Mass;
        enableMassCorrection = Off;
      };
      Jii = .Data.Jii;
      JaboutCoMOnOff = On;
      sCoM = .Scale(.Data.sCoM_pos);
    };          
  #endif

  // This file includes the trunk specifc scaling function
  // and anatomical reference system
  #include "TrunkAnatomicalFrame.any"

  TrunkScaleWithInterfaceMorphing Scale(
    GeomScale = ...Scaling.GeometricalScaling.C7Seg.ScaleFunction,
    PelvisSeg = ..PelvisSeg,
  ) = {};
  

  AnyRefNode MoCapMarkerFrameAMMR24 = {}; ///< For backwards compatibility with AMMR 2.4 MoCap Marker protocols

  AnyRefNode T1C7JntNode = {sRel = .Scale(.Data.T1C7JntNode_pos);};        
  AnyRefNode C7C6JntNode = {
    sRel = .Scale(.Data.C7C6JntNode_pos);
    // Rotated node with x axis parallel to the superior endplate surface
    AnyRefNode RotNode = {
      ARel = RotMat(0.5*(..SuperiorEndplateAnteriorNode.sRel + ..SuperiorEndplatePosteriorNode.sRel),
                    ..SuperiorEndplateAnteriorNode.sRel,
                    0.5*(..SuperiorEndplateAnteriorNode.sRel + ..SuperiorEndplatePosteriorNode.sRel) + (..SuperiorEndplateNodeL.sRel - ..SuperiorEndplateNodeR.sRel))*RotMat(pi/2,x);
    };
  };        

  // Nodes at the anterior and posterior points on the superior endplate
  AnyRefNode SuperiorEndplateAnteriorNode = {sRel = .Scale(.Data.SuperiorEndplateAnteriorNode_pos);};
  AnyRefNode SuperiorEndplatePosteriorNode = {sRel = .Scale(.Data.SuperiorEndplatePosteriorNode_pos);};

  // Nodes at the right and left points on the superior endplate
  AnyRefNode SuperiorEndplateNodeR = {sRel = .Scale(.Data.Right.SuperiorEndplateNode_pos);};
  AnyRefNode SuperiorEndplateNodeL = {sRel = .Scale(.Data.Left.SuperiorEndplateNode_pos);};

  AnyRefNode MidNode = {sRel = .Scale(.Data.MidNode_pos);};        

  //Splenius capitis nodes
  AnyRefNode SpleniusCapitisC7C0NodeR = {sRel = .Scale(.Data.Right.SpleniusCapitisC7C0Node_pos);};
  AnyRefNode SpleniusCapitisC7C0NodeL = {sRel = .Scale(.Data.Left.SpleniusCapitisC7C0Node_pos);};
  
  //Semispinalis capitis nodes
  AnyRefNode SemispinalisCapitisC7C0NodeR = {sRel = .Scale(.Data.Right.SemispinalisCapitisC7C0Node_pos);};
  AnyRefNode SemispinalisCapitisC7C0NodeL = {sRel = .Scale(.Data.Left.SemispinalisCapitisC7C0Node_pos);};
  
  //Semispinalis cervicis nodes
  AnyRefNode SemispinalisCervicisT6C7NodeR = {sRel = .Scale(.Data.Right.SemispinalisCervicisT6C7Node_pos);};
  AnyRefNode SemispinalisCervicisT6C7NodeL = {sRel = .Scale(.Data.Left.SemispinalisCervicisT6C7Node_pos);};
  
  //Longissimus capitis nodes
  AnyRefNode LongissimusCapitisC7C0NodeR = {sRel = .Scale(.Data.Right.LongissimusCapitisC7C0Node_pos);};
  AnyRefNode LongissimusCapitisC7C0NodeL = {sRel = .Scale(.Data.Left.LongissimusCapitisC7C0Node_pos);};
  
  //Longissimus cervicis nodes
  AnyRefNode LongissimusCervicisT2C7NodeR = {sRel = .Scale(.Data.Right.LongissimusCervicisT2C7Node_pos);};
  AnyRefNode LongissimusCervicisT2C7NodeL = {sRel = .Scale(.Data.Left.LongissimusCervicisT2C7Node_pos);};
  
  //Multifidus cervicis nodes
  AnyRefNode MultifidusCervicisC7C3NodeR = {sRel = .Scale(.Data.Right.MultifidusCervicisC7C3Node_pos);};
  AnyRefNode MultifidusCervicisC7C3NodeL = {sRel = .Scale(.Data.Left.MultifidusCervicisC7C3Node_pos);};
                                                                
  AnyRefNode MultifidusCervicisC7C4NodeR = {sRel = .Scale(.Data.Right.MultifidusCervicisC7C4Node_pos);};
  AnyRefNode MultifidusCervicisC7C4NodeL = {sRel = .Scale(.Data.Left.MultifidusCervicisC7C4Node_pos);};
  
  AnyRefNode MultifidusCervicisC7NodeR = {sRel = .Scale(.Data.Right.MultifidusCervicisC7Node_pos);};
  AnyRefNode MultifidusCervicisC7NodeL = {sRel = .Scale(.Data.Left.MultifidusCervicisC7Node_pos);};
  
  //Levator Costarum
  AnyRefNode LCBrC7R1ROrg                   =     {sRel =  .Scale(.Data.Right.LCBrC7R1_pos);};
  AnyRefNode LCBrC7R1LOrg                   =     {sRel =  .Scale(.Data.Left.LCBrC7R1_pos);};
  
  //Serratus Posterior
  AnyRefNode O_serratus_posterior_superior_1C7NodeR = {sRel = .Scale(.Data.Right.O_serratus_posterior_superior_1C7Node_pos); };
  AnyRefNode O_serratus_posterior_superior_1C7NodeL = {sRel = .Scale(.Data.Left.O_serratus_posterior_superior_1C7Node_pos); };
  
  AnyRefNode SSTC7Spinous = {sRel = .Scale(.Data.SSTC7Spinous_pos); };

  
  Right = {
    //Iliocostalis Cervicis
    AnyRefNode ICptR3C4Via1Node   = {sRel = ..Scale(..Data.Right.ICptR3C4Via1Node_pos);};
    AnyRefNode ICptR4C5Via1Node   = {sRel = ..Scale(..Data.Right.ICptR4C5Via1Node_pos);};
    AnyRefNode ICptR5C6Via1Node   = {sRel = ..Scale(..Data.Right.ICptR5C6Via1Node_pos);};
    AnyRefNode ICptR6C4Via1Node   = {sRel = ..Scale(..Data.Right.ICptR6C4Via1Node_pos);};
    //Longus Colli
    AnyRefNode LongusColliT3C6Node = {sRel = ..Scale(..Data.Right.LongusColliT3C6Node_pos);};
    AnyRefNode LongusColliT2C5Node = {sRel = ..Scale(..Data.Right.LongusColliT2C5Node_pos);};
    AnyRefNode LongusColliT1C4Node = {sRel = ..Scale(..Data.Right.LongusColliT1C4Node_pos);};
    AnyRefNode LongusColliC7C3Node = {sRel = ..Scale(..Data.Right.LongusColliC7C3Node_pos);};
    //Scalenus Medius nodes
    AnyRefNode ScalenusMediusR1C7Node     =     {sRel = ..Scale(..Data.Right.ScalenusMediusR1C7Node_pos);};
    //Scalenus Posterior nodes
    AnyRefNode ScalenusPosteriorR2C7Node  =     {sRel = ..Scale(..Data.Right.ScalenusPosteriorR2C7Node_pos);};
    //Rotatores
    AnyRefNode RotatoresBrevisT1C7Node = {sRel = ..Scale(..Data.Right.RotatoresBrevisT1C7InsNode_pos);};
    AnyRefNode RotatoresLongusT2C7Node = {sRel = ..Scale(..Data.Right.RotatoresLongusT2C7InsNode_pos);};
    //Illiocostalis thoracic
    AnyRefNode ITC7R7NodeOrg = {sRel = ..Scale(..Data.Right.ITC7R7Node_pos);};
  };
  Left = {
    //Iliocostalis Cervicis
    AnyRefNode ICptR3C4Via1Node   = {sRel = ..Scale(..Data.Left.ICptR3C4Via1Node_pos);};
    AnyRefNode ICptR4C5Via1Node   = {sRel = ..Scale(..Data.Left.ICptR4C5Via1Node_pos);};
    AnyRefNode ICptR5C6Via1Node   = {sRel = ..Scale(..Data.Left.ICptR5C6Via1Node_pos);};
    AnyRefNode ICptR6C4Via1Node   = {sRel = ..Scale(..Data.Left.ICptR6C4Via1Node_pos);};
    //Longus Colli
    AnyRefNode LongusColliT3C6Node = {sRel = ..Scale(..Data.Left.LongusColliT3C6Node_pos);};
    AnyRefNode LongusColliT2C5Node = {sRel = ..Scale(..Data.Left.LongusColliT2C5Node_pos);};
    AnyRefNode LongusColliT1C4Node = {sRel = ..Scale(..Data.Left.LongusColliT1C4Node_pos);};
    AnyRefNode LongusColliC7C3Node = {sRel = ..Scale(..Data.Left.LongusColliC7C3Node_pos);};
    //Scalenus Medius nodes
    AnyRefNode ScalenusMediusR1C7Node     =     {sRel = ..Scale(..Data.Left.ScalenusMediusR1C7Node_pos);};
    //Scalenus Posterior nodes
    AnyRefNode ScalenusPosteriorR2C7Node  =     {sRel = ..Scale(..Data.Left.ScalenusPosteriorR2C7Node_pos);};
    //Rotatores
    AnyRefNode RotatoresBrevisT1C7Node = {sRel = ..Scale(..Data.Left.RotatoresBrevisT1C7InsNode_pos);};
    AnyRefNode RotatoresLongusT2C7Node = {sRel = ..Scale(..Data.Left.RotatoresLongusT2C7InsNode_pos);};
    //Illiocostalis thoracic
    AnyRefNode ITC7R7NodeOrg = {sRel = ..Scale(..Data.Left.ITC7R7Node_pos);};
  };
  
  AnyDrawSurf BoneDraw = {
    FileName = ...Data.unscaled.STL.FilenameC7Seg;
    RGB = ...ColorRef.Segments;
    Opacity = Main.DrawSettings.BonesOpacity.C7;
    AnyFunTransform3D &Scale =.Scale;
  };

  AnyRefNode Right ={};
  AnyRefNode Left ={};
};