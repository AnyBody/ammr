/**
Definitions of the Joints of the cervical spine spine. From T1C7 to Skull
*/
AnyFolder JointsCervicalSpine = {
  
  AnySphericalJoint T1C7Jnt = {
    AnyRefNode &T1Node = ..SegmentsThorax.ThoraxSeg.T1C7JntNode;
    AnyRefNode &C7Node = ..SegmentsCervicalSpine.C7Seg.T1C7JntNode;
  };
  
  AnySphericalJoint C7C6Jnt = {
    AnyRefNode &C7Node = ..SegmentsCervicalSpine.C7Seg.C7C6JntNode;
    AnyRefNode &C6Node = ..SegmentsCervicalSpine.C6Seg.C7C6JntNode;
  };
  
  AnySphericalJoint C6C5Jnt = {
    AnyRefNode &C6Node = ..SegmentsCervicalSpine.C6Seg.C6C5JntNode;
    AnyRefNode &C5Node = ..SegmentsCervicalSpine.C5Seg.C6C5JntNode;
  };
  
  AnySphericalJoint C5C4Jnt = {
    AnyRefNode &C5Node = ..SegmentsCervicalSpine.C5Seg.C5C4JntNode;
    AnyRefNode &C4Node = ..SegmentsCervicalSpine.C4Seg.C5C4JntNode;
  };
  
  AnySphericalJoint C4C3Jnt = {
    AnyRefNode &C4Node = ..SegmentsCervicalSpine.C4Seg.C4C3JntNode;
    AnyRefNode &C3Node = ..SegmentsCervicalSpine.C3Seg.C4C3JntNode;
  };
  
  AnySphericalJoint C3C2Jnt = {
    AnyRefNode &C3Node = ..SegmentsCervicalSpine.C3Seg.C3C2JntNode;
    AnyRefNode &C2Node = ..SegmentsCervicalSpine.C2Seg.C3C2JntNode;
  };
  
  AnyRevoluteJoint C2C1Jnt = {
    Axis = y;
    AnyRefNode &C2Node = ..SegmentsCervicalSpine.C2Seg.C2C1JntNode;
    AnyRefNode &C1Node = ..SegmentsCervicalSpine.C1Seg.C2C1JntNode;
  };
  
  AnyRevoluteJoint C1C0Jnt = {
    Axis = z;
    AnyRefNode &C1Node = ..SegmentsCervicalSpine.C1Seg.C1C0JntNode;
    AnyRefNode &C0Node = ..SegmentsThorax.SkullSeg.C1C0JntNode;
  };
  
  //@! Should be handled by 
//  //  There is no muscles attached to skull 
//  AnyReacForce NeckJntReaction = {
//    AnyRevoluteJoint &ref=.C1C0Jnt;
//  };
  
  AnyKinRotational SkullThoraxRotMeasure = {
    AnyRefFrame &Skull = ..SegmentsThorax.SkullSeg.AnatomicalFrame; 
    AnyRefFrame &Thorax = ..SegmentsThorax.ThoraxSeg.AnatomicalFrame;  
    Type = RotVector;
    AngVelOnOff = On;
  };
  
  
  // CervicalRhythm
  
  AnyFolder Flexion = {
    
    AnyKinMeasureOrg C3C2JntFlexion  = {
      MeasureOrganizer = {2};
      AnyKinMeasure& ref = ..C3C2Jnt;
    };  
    
    AnyKinMeasureOrg C4C3JntFlexion  = {
      MeasureOrganizer = {2};
      AnyKinMeasure& ref = ..C4C3Jnt;
    };  
    
    AnyKinMeasureOrg C5C4JntFlexion  = {
      MeasureOrganizer = {2};
      AnyKinMeasure& ref = ..C5C4Jnt;
    };  
    
    AnyKinMeasureOrg C6C5JntFlexion  = {
      MeasureOrganizer = {2};
      AnyKinMeasure& ref = ..C6C5Jnt;
    };  
    
    AnyKinMeasureOrg C7C6JntFlexion  = {
      MeasureOrganizer = {2};
      AnyKinMeasure& ref = ..C7C6Jnt;
    };  
    
    AnyKinMeasureOrg T1C7JntFlexion  = {
      MeasureOrganizer = {2};
      AnyKinMeasure& ref = ..T1C7Jnt;
    };  
    
    #if BM_TRUNK_CERVICAL_RHYTHM == ON
    AnyKinEqSimpleDriver CervicalFlexionRhythmDrv = {
      
      AnyKinMeasureLinComb Measure = {
        
        AnyKinMeasure& u0 = ..SkullThoraxFlexion;
        AnyKinMeasure& u1 = ...C1C0Jnt;
        AnyKinMeasure& u2 = ..C3C2JntFlexion;
        AnyKinMeasure& u3 = ..C4C3JntFlexion;
        AnyKinMeasure& u4 = ..C5C4JntFlexion;
        AnyKinMeasure& u5 = ..C6C5JntFlexion;
        AnyKinMeasure& u6 = ..C7C6JntFlexion;
        AnyKinMeasure& u7 = ..T1C7JntFlexion;
        OutDim = 6;
        Const = {0, 0, 0, 0, 0, 0};
        Coef = {
          {40/122, 1, 0, 0, 0, 0, 0, 0},
          {0, 0, 1, -1, 0, 0,  0,  0},
          {0, 0, 0, 1, -1, 0,  0,  0},
          {0, 0, 0, 0, 1, -1,  0,  0},
          {0, 0, 0, 0, 0,  1, -1,  0},
          {0, 0, 0, 0, 0,  0,  1, -1}};
        
      }; // Measure
      
      DriverPos = {0, 0, 0, 0, 0, 0};
      DriverVel = {0, 0, 0, 0, 0, 0};
      Reaction.Type = {Off,Off,Off, Off,Off,Off};
      
    }; // CervicalFlexionRhythmDrv
    #endif
    
    
    AnyKinMeasureOrg SkullThoraxFlexion  = {
      MeasureOrganizer = {2};
      AnyKinMeasure& ref = ..SkullThoraxRotMeasure;
    };
    
  };//Flexion
  
  
  AnyFolder LateralBending = {
    
    AnyKinMeasureOrg C3C2JntLateralBending  = {
      MeasureOrganizer = {0};
      AnyKinMeasure& ref = ..C3C2Jnt;
    };  
    
    AnyKinMeasureOrg C4C3JntLateralBending  = {
      MeasureOrganizer = {0};
      AnyKinMeasure& ref = ..C4C3Jnt;
    };  
    
    AnyKinMeasureOrg C5C4JntLateralBending  = {
      MeasureOrganizer = {0};
      AnyKinMeasure& ref = ..C5C4Jnt;
    };  
    
    AnyKinMeasureOrg C6C5JntLateralBending  = {
      MeasureOrganizer = {0};
      AnyKinMeasure& ref = ..C6C5Jnt;
    };  
    
    AnyKinMeasureOrg C7C6JntLateralBending  = {
      MeasureOrganizer = {0};
      AnyKinMeasure& ref = ..C7C6Jnt;
    };  
    
    AnyKinMeasureOrg T1C7JntLateralBending  = {
      MeasureOrganizer = {0};
      AnyKinMeasure& ref = ..T1C7Jnt;
    };  
    
    #if BM_TRUNK_CERVICAL_RHYTHM == ON
    AnyKinEqSimpleDriver CervicalLateralBendingRhythmDrv = {
      
      AnyKinMeasureLinComb Measure = {
        
        AnyKinMeasure& u2 = ..C3C2JntLateralBending;
        AnyKinMeasure& u3 = ..C4C3JntLateralBending;
        AnyKinMeasure& u4 = ..C5C4JntLateralBending;
        AnyKinMeasure& u5 = ..C6C5JntLateralBending;
        AnyKinMeasure& u6 = ..C7C6JntLateralBending;
        AnyKinMeasure& u7 = ..T1C7JntLateralBending;
        OutDim = 5;
        Const = {0, 0, 0, 0, 0};
        Coef = {
          {1, -1, 0, 0,  0,  0},
          {0, 1, -1, 0,  0,  0},
          {0, 0, 1, -1,  0,  0},
          {0, 0, 0,  1, -1,  0},
          {0, 0, 0,  0,  1, -1}};
        
      }; // Measure
      
      DriverPos = {0, 0, 0, 0, 0};
      DriverVel = {0, 0, 0, 0, 0};
      Reaction.Type = {Off,Off,Off, Off,Off};
      
    }; // CervicalLateralBendingRhythmDrv
    #endif
    
    AnyKinMeasureOrg SkullThoraxLateralBending  = {
      MeasureOrganizer = {0};
      AnyKinMeasure& ref = ..SkullThoraxRotMeasure;
    };
    
  };//LateralBending
  
  
  
  AnyFolder Rotation = {
    
    AnyKinMeasureOrg C3C2JntRotation  = {
      MeasureOrganizer = {1};
      AnyKinMeasure& ref = ..C3C2Jnt;
    };  
    
    AnyKinMeasureOrg C4C3JntRotation  = {
      MeasureOrganizer = {1};
      AnyKinMeasure& ref = ..C4C3Jnt;
    };  
    
    AnyKinMeasureOrg C5C4JntRotation  = {
      MeasureOrganizer = {1};
      AnyKinMeasure& ref = ..C5C4Jnt;
    };  
    
    AnyKinMeasureOrg C6C5JntRotation  = {
      MeasureOrganizer = {1};
      AnyKinMeasure& ref = ..C6C5Jnt;
    };  
    
    AnyKinMeasureOrg C7C6JntRotation  = {
      MeasureOrganizer = {1};
      AnyKinMeasure& ref = ..C7C6Jnt;
    };  
    
    AnyKinMeasureOrg T1C7JntRotation  = {
      MeasureOrganizer = {1};
      AnyKinMeasure& ref = ..T1C7Jnt;
    };  
    
    #if BM_TRUNK_CERVICAL_RHYTHM == ON
    AnyKinEqSimpleDriver CervicalRotationRhythmDrv = {
      
      AnyKinMeasureLinComb Measure = {
        
        AnyKinMeasure& u0 = ..SkullThoraxRotation;
        AnyKinMeasure& u1 = ...C2C1Jnt;
        AnyKinMeasure& u2 = ..C3C2JntRotation;
        AnyKinMeasure& u3 = ..C4C3JntRotation;
        AnyKinMeasure& u4 = ..C5C4JntRotation;
        AnyKinMeasure& u5 = ..C6C5JntRotation;
        AnyKinMeasure& u6 = ..C7C6JntRotation;
        AnyKinMeasure& u7 = ..T1C7JntRotation;
        OutDim = 6;
        Const = {0, 0, 0, 0, 0, 0};
        Coef = {
          {77/132, 1, 0, 0, 0, 0, 0, 0},
          {0, 0, 1, -1, 0, 0,  0,  0},
          {0, 0, 0, 1, -1, 0,  0,  0},
          {0, 0, 0, 0, 1, -1,  0,  0},
          {0, 0, 0, 0, 0,  1, -1,  0},
          {0, 0, 0, 0, 0,  0,  1, -1}};
        
      }; // Measure
      
      DriverPos = {0, 0, 0, 0, 0, 0};
      DriverVel = {0, 0, 0, 0, 0, 0};
      Reaction.Type = {Off,Off,Off, Off,Off,Off};
      
    }; // CervicalRotationRhythmDrv
    #endif
    
    AnyKinMeasureOrg SkullThoraxRotation  = {
      MeasureOrganizer = {1};
      AnyKinMeasure& ref = ..SkullThoraxRotMeasure;
    };
    
  };//Rotation
  
  
}; //End of JointsCervicalSpine

