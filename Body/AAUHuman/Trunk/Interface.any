//Interface for trunk
//
#define _INTERFACE_DOF_SELECT_(idx)  AnyKinMeasure& jnt = .Jnt; MeasureOrganizer = {idx};

//AnyFolder& IVA = IntervertebralAngles;
AnyFolder IntervertebralAngles =
{
    AnyFolder SacrumPelvis = {
       AnyKinMeasureOrg &Jnt = ...Joints.Lumbar.SacrumPelvis;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder L5Sacrum = {
       AnyKinMeasureOrg &Jnt = ...Joints.Lumbar.L5Sacrum;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder L4L5 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Lumbar.L4L5;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder L3L4 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Lumbar.L3L4;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder L2L3 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Lumbar.L2L3;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder L1L2 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Lumbar.L1L2;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder T12L1 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Lumbar.T12L1;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    #if BM_TRUNK_THORACIC_MODEL != _THORACIC_MODEL_RIGID_
    AnyFolder T11T12 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Thorax.T11T12;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder T10T11 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Thorax.T10T11;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder T9T10 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Thorax.T9T10;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder T8T9 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Thorax.T8T9;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder T7T8 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Thorax.T7T8;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder T6T7 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Thorax.T6T7;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder T5T6 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Thorax.T5T6;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder T4T5 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Thorax.T4T5;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder T3T4 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Thorax.T3T4;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder T2T3 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Thorax.T2T3;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder T1T2 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Thorax.T1T2;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    #endif
    AnyFolder T1C7 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Cervical.T1C7;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder C7C6 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Cervical.C7C6;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder C6C5 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Cervical.C6C5;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder C5C4 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Cervical.C5C4;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder C4C3 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Cervical.C4C3;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder C3C2 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Cervical.C3C2;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(2) };
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(1)  };
       AnyKinMeasureOrg LateralBending = { _INTERFACE_DOF_SELECT_(0) };
    };
    AnyFolder C2C1 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Cervical.C2C1;
       AnyKinMeasureOrg Rotation = { _INTERFACE_DOF_SELECT_(0)  };
    };
    AnyFolder C1C0 = {
       AnyKinMeasureOrg &Jnt = ...Joints.Cervical.C1C0;
       AnyKinMeasureOrg Extension = { _INTERFACE_DOF_SELECT_(0) };
    };
    #undef _INTERFACE_DOF_SELECT_

};


// Rotational measures used for joint nuscles
AnyFolder AngularVelocityMeasures = {
  AnyKinRotational L5SacrumJntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &SacrumNode = ....Trunk.Segments.SacrumSeg.SacrumL5JntNode;
    AnyRefFrame &L5Node = ....Trunk.Segments.L5Seg.L5SacrumJntNode;
  };


  AnyKinRotational L4L5JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &L5Node = ....Trunk.Segments.L5Seg.L4L5JntNode;
    AnyRefFrame &L4Node = ....Trunk.Segments.L4Seg.L4L5JntNode;
  };


  AnyKinRotational L3L4JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &L4Node = ....Trunk.Segments.L4Seg.L3L4JntNode;
    AnyRefFrame &L3Node = ....Trunk.Segments.L3Seg.L3L4JntNode;
  };


  AnyKinRotational L2L3JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &L3Node = ....Trunk.Segments.L3Seg.L2L3JntNode;
    AnyRefFrame &L2Node = ....Trunk.Segments.L2Seg.L2L3JntNode;
  };


  AnyKinRotational L1L2JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &L2Node = ....Trunk.Segments.L2Seg.L1L2JntNode;
    AnyRefFrame &L1Node = ....Trunk.Segments.L1Seg.L1L2JntNode;
  };


  AnyKinRotational T12L1JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &L1Node = ....Trunk.Segments.L1Seg.T12L1JntNode;
    AnyRefFrame &T12Node = ....Trunk.Segments.T12Seg.T12L1JntNode;
  };


  //#if (BM_TRUNK_THORACIC_MODEL == _THORACIC_MODEL_RIGID_)
  AnyKinRotational T11T12JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &T12Node = ....Trunk.Segments.T12Seg.T11T12JntNode;
    AnyRefFrame &T11Node = ....Trunk.Segments.T11Seg.T11T12JntNode;
  };

  AnyKinRotational T10T11JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &T11Node = ....Trunk.Segments.T11Seg.T10T11JntNode;
    AnyRefFrame &T10Node = ....Trunk.Segments.T10Seg.T10T11JntNode;
  };

  AnyKinRotational T9T10JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &T10Node = ....Trunk.Segments.T10Seg.T9T10JntNode;
    AnyRefFrame &T9Node = ....Trunk.Segments.T9Seg.T9T10JntNode;
  };

  AnyKinRotational T8T9JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &T9Node = ....Trunk.Segments.T9Seg.T8T9JntNode;
    AnyRefFrame &T8Node = ....Trunk.Segments.T8Seg.T8T9JntNode;
  };

  AnyKinRotational T7T8JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &T8Node = ....Trunk.Segments.T8Seg.T7T8JntNode;
    AnyRefFrame &T7Node = ....Trunk.Segments.T7Seg.T7T8JntNode;
  };

  AnyKinRotational T6T7JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &T7Node = ....Trunk.Segments.T7Seg.T6T7JntNode;
    AnyRefFrame &T6Node = ....Trunk.Segments.T6Seg.T6T7JntNode;
  };

  AnyKinRotational T5T6JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &T6Node = ....Trunk.Segments.T6Seg.T5T6JntNode;
    AnyRefFrame &T5Node = ....Trunk.Segments.T5Seg.T5T6JntNode;
  };

  AnyKinRotational T4T5JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &T5Node = ....Trunk.Segments.T5Seg.T4T5JntNode;
    AnyRefFrame &T4Node = ....Trunk.Segments.T4Seg.T4T5JntNode;
  };

  AnyKinRotational T3T4JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &T4Node = ....Trunk.Segments.T4Seg.T3T4JntNode;
    AnyRefFrame &T3Node = ....Trunk.Segments.T3Seg.T3T4JntNode;
  };

  AnyKinRotational T2T3JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &T3Node = ....Trunk.Segments.T3Seg.T2T3JntNode;
    AnyRefFrame &T2Node = ....Trunk.Segments.T2Seg.T2T3JntNode;
  };

  AnyKinRotational T1T2JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &T2Node = ....Trunk.Segments.T2Seg.T1T2JntNode;
    AnyRefFrame &T1Node = ....Trunk.Segments.T1Seg.T1T2JntNode;
  };
  //#endif


  AnyKinRotational T1C7JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &T1Node = ....Trunk.Segments.T1Seg.T1C7JntNode;
    AnyRefFrame &C7Node = ....Trunk.Segments.C7Seg.T1C7JntNode;
  };


  AnyKinRotational C7C6JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &C7Node = ....Trunk.Segments.C7Seg.C7C6JntNode;
    AnyRefFrame &C6Node = ....Trunk.Segments.C6Seg.C7C6JntNode;
  };


  AnyKinRotational C6C5JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &C6Node = ....Trunk.Segments.C6Seg.C6C5JntNode;
    AnyRefFrame &C5Node = ....Trunk.Segments.C5Seg.C6C5JntNode;
  };


  AnyKinRotational C5C4JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &C5Node = ....Trunk.Segments.C5Seg.C5C4JntNode;
    AnyRefFrame &C4Node = ....Trunk.Segments.C4Seg.C5C4JntNode;
  };


  AnyKinRotational C4C3JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &C4Node = ....Trunk.Segments.C4Seg.C4C3JntNode;
    AnyRefFrame &C3Node = ....Trunk.Segments.C3Seg.C4C3JntNode;
  };


  AnyKinRotational C3C2JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &C3Node = ....Trunk.Segments.C3Seg.C3C2JntNode;
    AnyRefFrame &C2Node = ....Trunk.Segments.C2Seg.C3C2JntNode;
  };


  AnyKinRotational C2C1JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &C2Node = ....Trunk.Segments.C2Seg.C2C1JntNode;
    AnyRefFrame &C1Node = ....Trunk.Segments.C1Seg.C2C1JntNode;
  };


  AnyKinRotational C1C0JntMus =
  {
    Type = RotAxesAngles;
    AngVelOnOff = On;
    AnyRefFrame &C1Node = ....Trunk.Segments.C1Seg.C1C0JntNode;
    AnyRefFrame &C0Node = ....Trunk.Segments.SkullSeg.C1C0JntNode;
  };

  // End of rotational measures used for joint nuscles

  #if (BM_TRUNK_THORACIC_MODEL != _THORACIC_MODEL_RIGID_)
  // Measures used for joint nuscles

  AnyKinMeasureOrg T1R1RJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T1 =.....Trunk.Segments.T1Seg.Right.CTCVJntNode;
      AnyRefFrame &R1R =.....Trunk.Segments.Right.R1Seg.CTCVJntNode;
    };
  };
  AnyKinMeasureOrg T2R2RJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T2 =.....Trunk.Segments.T2Seg.Right.CTCVJntNode;
      AnyRefFrame &R2R =.....Trunk.Segments.Right.R2Seg.CTCVJntNode;
    };
  };

  AnyKinMeasureOrg T3R3RJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T3 =.....Trunk.Segments.T3Seg.Right.CTCVJntNode;
      AnyRefFrame &R3R =.....Trunk.Segments.Right.R3Seg.CTCVJntNode;
    };
  };
  AnyKinMeasureOrg T4R4RJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T4 =.....Trunk.Segments.T4Seg.Right.CTCVJntNode;
      AnyRefFrame &R4R =.....Trunk.Segments.Right.R4Seg.CTCVJntNode;
    };
  };
  AnyKinMeasureOrg T5R5RJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T5 =.....Trunk.Segments.T5Seg.Right.CTCVJntNode;
      AnyRefFrame &R5R =.....Trunk.Segments.Right.R5Seg.CTCVJntNode;
    };
  };
  AnyKinMeasureOrg T6R6RJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T6 =.....Trunk.Segments.T6Seg.Right.CTCVJntNode;
      AnyRefFrame &R6R =.....Trunk.Segments.Right.R6Seg.CTCVJntNode;
    };
  };
  AnyKinMeasureOrg T7R7RJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T7 =.....Trunk.Segments.T7Seg.Right.CTCVJntNode;
      AnyRefFrame &R7R =.....Trunk.Segments.Right.R7Seg.CTCVJntNode;
    };
  };

  AnyKinMeasureOrg T8R8RJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T8 =.....Trunk.Segments.T8Seg.Right.CTCVJntNode;
      AnyRefFrame &R8R =.....Trunk.Segments.Right.R8Seg.CTCVJntNode;
    };
  };

  AnyKinMeasureOrg T9R9RJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T9 =.....Trunk.Segments.T9Seg.Right.CTCVJntNode;
      AnyRefFrame &R9R =.....Trunk.Segments.Right.R9Seg.CTCVJntNode;
    };
  };

  AnyKinMeasureOrg T10R10RJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T10 =.....Trunk.Segments.T10Seg.Right.CTCVJntNode;
      AnyRefFrame &R10R =.....Trunk.Segments.Right.R10Seg.CTCVJntNode;
    };
  };

  AnyKinMeasureOrg T1R1LJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T1 =.....Trunk.Segments.T1Seg.Left.CTCVJntNode;
      AnyRefFrame &R1L =.....Trunk.Segments.Left.R1Seg.CTCVJntNode;
    };
  };
  AnyKinMeasureOrg T2R2LJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T2 =.....Trunk.Segments.T2Seg.Left.CTCVJntNode;
      AnyRefFrame &R2L =.....Trunk.Segments.Left.R2Seg.CTCVJntNode;
    };
  };
  AnyKinMeasureOrg T3R3LJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T3 =.....Trunk.Segments.T3Seg.Left.CTCVJntNode;
      AnyRefFrame &R3L =.....Trunk.Segments.Left.R3Seg.CTCVJntNode;
    };
  };
  AnyKinMeasureOrg T4R4LJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T4 =.....Trunk.Segments.T4Seg.Left.CTCVJntNode;
      AnyRefFrame &R4L =.....Trunk.Segments.Left.R4Seg.CTCVJntNode;
    };
  };
  AnyKinMeasureOrg T5R5LJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T5 =.....Trunk.Segments.T5Seg.Left.CTCVJntNode;
      AnyRefFrame &R5L =.....Trunk.Segments.Left.R5Seg.CTCVJntNode;
    };
  };
  AnyKinMeasureOrg T6R6LJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T6 =.....Trunk.Segments.T6Seg.Left.CTCVJntNode;
      AnyRefFrame &R6L =.....Trunk.Segments.Left.R6Seg.CTCVJntNode;
    };
  };
  AnyKinMeasureOrg T7R7LJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T7 =.....Trunk.Segments.T7Seg.Left.CTCVJntNode;
      AnyRefFrame &R7L =.....Trunk.Segments.Left.R7Seg.CTCVJntNode;
    };
  };

  AnyKinMeasureOrg T8R8LJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T8 =.....Trunk.Segments.T8Seg.Left.CTCVJntNode;
      AnyRefFrame &R8L =.....Trunk.Segments.Left.R8Seg.CTCVJntNode;
    };
  };

  AnyKinMeasureOrg T9R9LJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T9 =.....Trunk.Segments.T9Seg.Left.CTCVJntNode;
      AnyRefFrame &R9L =.....Trunk.Segments.Left.R9Seg.CTCVJntNode;
    };
  };

  AnyKinMeasureOrg T10R10LJntMus =
  {
    MeasureOrganizer = {2};
    AnyKinRotational rot = {

      Type = RotAxesAngles;
      AngVelOnOff = On;
      AnyRefFrame &T10 =.....Trunk.Segments.T10Seg.Left.CTCVJntNode;
      AnyRefFrame &R10L =.....Trunk.Segments.Left.R10Seg.CTCVJntNode;
    };
  };

  #endif

};


AnyKinMeasureOrg PelvisPosX ={
  AnyKinLinear lin ={};
  // The linear position of pelvis is given by a frame at the midpoints between the ASIS
  lin = {AnyRefFrame &ref2 =....Trunk.Segments.PelvisSeg.AnatomicalFrame; };
  MeasureOrganizer={0};
};
AnyKinMeasureOrg PelvisPosY ={
  AnyKinLinear &ref=.PelvisPosX.lin;
  MeasureOrganizer={1};
};
AnyKinMeasureOrg PelvisPosZ ={
  AnyKinLinear &ref=.PelvisPosX.lin;
  MeasureOrganizer={2};
};


AnyKinMeasureOrg PelvisRotX ={
  AnyKinRotational rot = {Type=RotAxesAngles;};
  //The pelvis frame is added in its own scope to allow the user to
  //inject another reference as the first member to override the implicit
  //default global frame
  rot = {AnyRefFrame &ref2 =....Trunk.Segments.PelvisSeg.AnatomicalFrameTrunk; };
  MeasureOrganizer={2};
};
AnyKinMeasureOrg PelvisRotY ={
  AnyKinRotational &ref=.PelvisRotX.rot;
  MeasureOrganizer={1};
};
AnyKinMeasureOrg PelvisRotZ ={
  AnyKinRotational &ref=.PelvisRotX.rot;
  MeasureOrganizer={0};
};



AnyKinRotational PelvisRotVec = {
  Type = RotVector;
  AnyRefFrame &ref =...Trunk.Segments.PelvisSeg.AnatomicalFrameTrunk;
};

AnyKinMeasureOrg  PelvisThoraxExtension={
  AnyKinRotational &ref=...Trunk.Joints.Lumbar.PelvisThoraxRotMeasure;
  MeasureOrganizer={2};
};

AnyKinMeasureOrg  PelvisThoraxLateralBending={
  AnyKinRotational &ref=...Trunk.Joints.Lumbar.PelvisThoraxRotMeasure;
  MeasureOrganizer={0};
};

AnyKinMeasureOrg  PelvisThoraxRotation={
  AnyKinRotational &ref=...Trunk.Joints.Lumbar.PelvisThoraxRotMeasure;
  MeasureOrganizer={1};
};


AnyKinMeasure& SkullThoraxFlexion = ..Trunk.Joints.Cervical.Flexion.SkullThoraxFlexion;

AnyKinMeasureOrg  PelvisT12Extension={
  AnyKinRotational &ref=...Trunk.Joints.Lumbar.PelvisT12RotMeasure;
  MeasureOrganizer={2};
};

AnyKinMeasureOrg  PelvisT12LateralBending={
  AnyKinRotational &ref=...Trunk.Joints.Lumbar.PelvisT12RotMeasure;
  MeasureOrganizer={0};
};

AnyKinMeasureOrg  PelvisT12Rotation={
  AnyKinRotational &ref=...Trunk.Joints.Lumbar.PelvisT12RotMeasure;
  MeasureOrganizer={1};
};

#if (BM_TRUNK_THORACIC_MODEL != _THORACIC_MODEL_RIGID_)

AnyKinMeasureOrg  T12T1Extension={
  AnyKinRotational T12T1RotMeasure = {
    AnyRefFrame &T12 = ...Segments.T12Seg;
    AnyRefFrame &T1  = ...Segments.T1Seg;
    Type = RotVector;
  };
  MeasureOrganizer={2};
};

AnyKinMeasureOrg  T12T1Rotation={
  AnyKinRotational &T12T1RotMeasure=.T12T1Extension.T12T1RotMeasure;
  MeasureOrganizer={1};
};

AnyKinMeasureOrg  T12T1LateralBending={
  AnyKinRotational &T12T1RotMeasure=.T12T1Extension.T12T1RotMeasure;
  MeasureOrganizer={0};
};
#endif

AnyKinMeasure& SkullThoraxLateralBending = ..Trunk.Joints.Cervical.LateralBending.SkullThoraxLateralBending;
AnyKinMeasure& SkullThoraxRotation = ..Trunk.Joints.Cervical.Rotation.SkullThoraxRotation;

//Make references to contact points on the spine
AnyRefNode & Seat1RContactNode= ..Trunk.Segments.PelvisSeg.Right.Seat1ContactNode;
AnyRefNode & Seat2RContactNode= ..Trunk.Segments.PelvisSeg.Right.Seat2ContactNode;
AnyRefNode & Seat3RContactNode= ..Trunk.Segments.PelvisSeg.Right.Seat3ContactNode;
AnyRefNode & Seat4RContactNode= ..Trunk.Segments.PelvisSeg.Right.Seat4ContactNode;
AnyRefNode & Seat1LContactNode= ..Trunk.Segments.PelvisSeg.Left.Seat1ContactNode;
AnyRefNode & Seat2LContactNode= ..Trunk.Segments.PelvisSeg.Left.Seat2ContactNode;
AnyRefNode & Seat3LContactNode= ..Trunk.Segments.PelvisSeg.Left.Seat3ContactNode;
AnyRefNode & Seat4LContactNode= ..Trunk.Segments.PelvisSeg.Left.Seat4ContactNode;
AnyRefNode & SacrumContactNode = ..Trunk.Segments.SacrumSeg.SacrumContactNode;






