


AnyFolder Cal ={
  //these next lines finds x and z values at a given height y on a line.
  AnyFloat  A1 = (._y-.P0[1])/(.P1[1]-.P0[1]);
  AnyFloat  _x1 = (.P1[0]-.P0[0])*(A1+.P0[0]/(.P1[0]-.P0[0]));     
  AnyFloat  _z1 = (.P1[2]-.P0[2])*(A1+.P0[2]/(.P1[2]-.P0[2]));
  
  AnyFloat Center = {_x1,._y,0};
  AnyFloat Point1 = {_x1,._y,_z1};  //side
  
  AnyFloat  A2 = (._y-.P0_Mid[1])/(.P1_Mid[1]-.P0_Mid[1]);
  AnyFloat  _x2 = (.P1_Mid[0]-.P0_Mid[0])*(A2+.P0_Mid[0]/(.P1_Mid[0]-.P0_Mid[0]));     
  
  AnyFloat Point2 = {_x2,._y,0};  //front
  
  AnyFloat Point3 = 0.5*(Point2+Center);  //midway front to center
  AnyFloat RadiusOneEllipsoid   ={vnorm(Point2-Center),0.05,vnorm(Point1-Center)};  
  AnyFloat CenterSideEllipsoid = 0.5*(Point3+Point1);
  
  

  AnyFloat CalculatedPoint0 = {RadiusOneEllipsoid[0]*sin(.Angle1)+Center[0],._y,RadiusOneEllipsoid[2]*cos(.Angle1)+Center[2]}  ;
  AnyFloat CalculatedPoint1 = {RadiusOneEllipsoid[0]*sin(.Angle2)+Center[0],._y,RadiusOneEllipsoid[2]*cos(.Angle2)+Center[2]}  ;
  
  
   AnyFloat Angles = farr(-pi/2,pi/7,8);
   AnyFloat CalculatedPoints = {RadiusOneEllipsoid[0]*sin(Angles)+Center[0],._y*ones(1,8)[0],RadiusOneEllipsoid[2]*cos(Angles)+Center[2]}'  ;
  
  
// AnyFixedRefFrame Visual_Debug ={
//    
//    
//     AnyRefNode P0_R ={
//       sRel=Main.HumanModel.BodyModel.Trunk.ModelParameters.Abdominal.P0_R;
//       AnyDrawRefFrame drw ={         ScaleXYZ={1,1,1}*0.1;        RGB={0,1,0};
//       };
//     };
//     AnyRefNode P1_R ={
//       sRel=Main.HumanModel.BodyModel.Trunk.ModelParameters.Abdominal.P1_R;       
//       AnyDrawRefFrame drw ={RGB={0,1,0};         ScaleXYZ={1,1,1}*0.1;};
//    };
//
//         AnyRefNode P0_L ={
//       sRel=Main.HumanModel.BodyModel.Trunk.ModelParameters.Abdominal.P0_L;
//       AnyDrawRefFrame drw ={RGB={0,1,0};         ScaleXYZ={1,1,1}*0.1;};
//     };
//     AnyRefNode P1_L ={
//       sRel=Main.HumanModel.BodyModel.Trunk.ModelParameters.Abdominal.P1_L;       
//       AnyDrawRefFrame drw ={RGB={0,1,0};         ScaleXYZ={1,1,1}*0.1;};
//    };
//
//    
//    
//
//    
//    AnyDrawSphere Sphere1 ={
//      Position=..Point1;
//      ScaleXYZ={1,1,1}*0.005;
//      RGB={0,1,0};
//    };
//    
//    AnyDrawSphere Sphere2 ={
//      Position=..Center;
//      ScaleXYZ={1,1,1}*0.005;
//      RGB={0,1,0};
//    };
//    
//    
//    AnyDrawLine LineR ={
//      p0=Main.HumanModel.BodyModel.Trunk.ModelParameters.Abdominal.P0_R;
//      p1=Main.HumanModel.BodyModel.Trunk.ModelParameters.Abdominal.P1_R;       
//      Line.Thickness=.005; Line.RGB={0,1,0};
//    };
//    
//    
//    AnyDrawLine LineL ={
//      p0=Main.HumanModel.BodyModel.Trunk.ModelParameters.Abdominal.P0_L;
//      p1=Main.HumanModel.BodyModel.Trunk.ModelParameters.Abdominal.P1_L;       
//      Line.Thickness=.005; Line.RGB={0,1,0};
//    };
//    
//    AnyDrawLine LineMid ={
//      p0=Main.HumanModel.BodyModel.Trunk.ModelParameters.Abdominal.P0_Mid;
//      p1=Main.HumanModel.BodyModel.Trunk.ModelParameters.Abdominal.P1_Mid;       
//      Line.Thickness=.005; Line.RGB={0,1,0};
//      
//    };
//    
//    
//    
//    AnyDrawSphere Sphere3 ={
//      Position=...P0_Mid;
//      ScaleXYZ={1,1,1}*0.005;
//      RGB={0,1,0};
//    };
//    AnyDrawSphere Sphere4 ={
//      Position=...P1_Mid;
//      ScaleXYZ={1,1,1}*0.005;
//      RGB={0,1,0};
//    };
//    
//    
//    
//  };


};

//
//AnyFolder Cal_Old ={
//  //these next lines finds x and z values at a given height y on a line.
//  AnyFloat  A1 = (._y-.P0[1])/(.P1[1]-.P0[1]);
//  AnyFloat  _x1 = (.P1[0]-.P0[0])*(A1+.P0[0]/(.P1[0]-.P0[0]));     
//  AnyFloat  _z1 = (.P1[2]-.P0[2])*(A1+.P0[2]/(.P1[2]-.P0[2]));
//  
//  AnyFloat Center = {_x1,._y,0};
//  AnyFloat Point1 = {_x1,._y,_z1};
//  
//  AnyFloat  A2 = (._y-.P0_Mid[1])/(.P1_Mid[1]-.P0_Mid[1]);
//  AnyFloat  _x2 = (.P1_Mid[0]-.P0_Mid[0])*(A2+.P0_Mid[0]/(.P1_Mid[0]-.P0_Mid[0]));     
//  
//  AnyFloat Point2 = {_x2,._y,0};
//  
//  AnyFloat Radius   ={vnorm(Point2-Center),0.05,vnorm(Point1-Center)};
//  
//  AnyFloat Angles = farr(-pi/2,pi/7,8);
//  AnyFloat CalculatedPoints = {Radius[0]*sin(Angles)+Center[0],._y*ones(1,8)[0],Radius[2]*cos(Angles)+Center[2]}'  ;
//    
//  
//  
//  
//};
   
