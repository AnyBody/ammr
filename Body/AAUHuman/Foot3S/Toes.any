//  switch off drawings of segs:
//ProximalPhalange1.DrwSurf.Visible =Off;
//ProximalPhalange2.DrwSurf.Visible =Off;
//ProximalPhalange3.DrwSurf.Visible =Off;
//ProximalPhalange4.DrwSurf.Visible =Off;
//ProximalPhalange5.DrwSurf.Visible =Off;
//MiddlePhalange2.DrwSurf.Visible =Off;
//MiddlePhalange3.DrwSurf.Visible =Off;
//MiddlePhalange4.DrwSurf.Visible =Off;
//MiddlePhalange5.DrwSurf.Visible =Off;
//DistalPhalange1.DrwSurf.Visible =Off;
//DistalPhalange2.DrwSurf.Visible =Off;
//DistalPhalange3.DrwSurf.Visible =Off;
//DistalPhalange4.DrwSurf.Visible =Off;
//DistalPhalange5.DrwSurf.Visible =Off;


//Toe1.ProximalPhalange1.DrwSurf.Visible =Off;
//Toe2.ProximalPhalange2.DrwSurf.Visible =Off;
//Toe3.ProximalPhalange3.DrwSurf.Visible =Off;
//Toe4.ProximalPhalange4.DrwSurf.Visible =Off;
//Toe5.ProximalPhalange5.DrwSurf.Visible =Off;
//Toe2.MiddlePhalange2.DrwSurf.Visible =Off;
//Toe3.MiddlePhalange3.DrwSurf.Visible =Off;
//Toe4.MiddlePhalange4.DrwSurf.Visible =Off;
//Toe5.MiddlePhalange5.DrwSurf.Visible =Off;
//Toe1.DistalPhalange1.DrwSurf.Visible =Off;
//Toe2.DistalPhalange2.DrwSurf.Visible =Off;
//Toe3.DistalPhalange3.DrwSurf.Visible =Off;
//Toe4.DistalPhalange4.DrwSurf.Visible =Off;
//Toe5.DistalPhalange5.DrwSurf.Visible =Off;


//***********************
//         Toe 1
//***********************

AnySeg Toe1 = {
  Mass = ProximalPhalange1.Mass + DistalPhalange1.Mass;
  sCoM = (
          ProximalPhalange1.Mass*ProximalPhalange1.sCoM +
          DistalPhalange1.Mass*DistalPhalange1.sCoM
         )/Mass;
  r0=.Midfoot.Metatarsal1.MtPhalJoint.sRel*.Midfoot.Metatarsal1.ARel'+.Midfoot.r0-ProximalPhalange1.MtPhalJoint.sRel*ProximalPhalange1.ARel';
 
  AnyRefNode CoM = {sRel =.sCoM;};        
  AnyRefNode PPCoM = {sRel =.ProximalPhalange1.sCoM;};

  Jii = EqInertia.Jii;
  Jij = EqInertia.Jij;
  JaboutCoMOnOff = On;
  
  AnyFolder EqInertia = {
    // Equivalent inertia is calculated using parallel axis theorem. Jii of constituent segments, expressed about their corresponding
    // CoM are translated to the CoM of the lumped segment using the formula: JiiNew = JiiCoM + mr^2
    // r vector is calculated as the difference between constituent segment CoM and lumped segment CoM.
    // m is the mass of the constituent segment.
    // JiiCoM is the Jii of the constituent segment about its own CoM
    // JiiNew is the Jii of the constituent segment about the CoM of the lumped segment.
          
    AnyFloat sRelPP1CoM = .ProximalPhalange1.sCoM-.sCoM;
    AnyFloat JMPP1T = .ProximalPhalange1.Mass*{{sRelPP1CoM[1]^2 + sRelPP1CoM[2]^2, -sRelPP1CoM[0]*sRelPP1CoM[1], -sRelPP1CoM[0]*sRelPP1CoM[2]},
                                         {-sRelPP1CoM[1]*sRelPP1CoM[0], sRelPP1CoM[2]^2 + sRelPP1CoM[0]^2, -sRelPP1CoM[1]*sRelPP1CoM[2]},
                                         {-sRelPP1CoM[2]*sRelPP1CoM[0], -sRelPP1CoM[2]*sRelPP1CoM[1], sRelPP1CoM[0]^2 + sRelPP1CoM[1]^2}};
    AnyFloat JMPP1CoM = .ProximalPhalange1.JM + JMPP1T;
    AnyFloat JiiPP1CoM = {JMPP1CoM[0][0], JMPP1CoM[1][1], JMPP1CoM[2][2]};
    AnyFloat JijPP1CoM = {JMPP1CoM[1][0], JMPP1CoM[2][1], JMPP1CoM[2][0]};
    
    AnyFloat sRelDP1CoM = .DistalPhalange1.sCoM-.sCoM;
    AnyFloat JMDP1T = .DistalPhalange1.Mass*{{sRelDP1CoM[1]^2 + sRelDP1CoM[2]^2, -sRelDP1CoM[0]*sRelDP1CoM[1], -sRelDP1CoM[0]*sRelDP1CoM[2]},
                                         {-sRelDP1CoM[1]*sRelDP1CoM[0], sRelDP1CoM[2]^2 + sRelDP1CoM[0]^2, -sRelDP1CoM[1]*sRelDP1CoM[2]},
                                         {-sRelDP1CoM[2]*sRelDP1CoM[0], -sRelDP1CoM[2]*sRelDP1CoM[1], sRelDP1CoM[0]^2 + sRelDP1CoM[1]^2}};
    AnyFloat JMDP1CoM = .DistalPhalange1.JM + JMDP1T;
    AnyFloat JiiDP1CoM = {JMDP1CoM[0][0], JMDP1CoM[1][1], JMDP1CoM[2][2]};
    AnyFloat JijDP1CoM = {JMDP1CoM[1][0], JMDP1CoM[2][1], JMDP1CoM[2][0]};
    
    
    AnyFloat Jii = JiiPP1CoM + JiiDP1CoM;
    AnyFloat Jij = JijPP1CoM + JijDP1CoM;
  };
  
  AnyRefNode ProximalPhalange1 = {
    
    AnyFolder &FootType = ....FootType;
    //  r0=.Metatarsal1.MtPhalJoint.sRel*.Metatarsal1.Axes0'+.Metatarsal1.r0-MtPhalJoint.sRel*Axes0';
    
    AnyFunTransform3D &Scale = ....GeoScaling.ProximalPhalanges1.ScaleFunction;  
    AnyFunTransform3D &GeomScale =Scale;
    AnyRefNode AnatomicalFrame = {};
    AnyRefNode& ScalingNode=AnatomicalFrame ;
    /// For backwards compatability with AMMR 2.4 MoCap Marker protocols
    AnyRefNode& MoCapMarkerFrameAMMR24 = AnatomicalFrame;
    
    
    AnyVar MassS = ....MassScaling.Foot.MassScale;
    AnyVar MassStandard = ....StandardParameters.Foot.Mass*0.017790222;
    AnyVar Mass = MassS*MassStandard;
    
    //AnyDrawSeg Draw = {};
    AnyFloat sCoM = 0.5*(RefDist.sRel + MtPhalJoint.sRel);
    //  JaboutCoMOnOff = On;
    
    AnyVar Length = vnorm(RefDist.sRel - MtPhalJoint.sRel);
    AnyVar Radius = (Mass/(3.1416*Length*....StandardParameters.Foot.Density))^0.5;
    
    AnyVar Ixx = 1/12 * Mass * (3*Radius^2 + Length^2);
    AnyVar Iyy = 0.5 * Mass * Radius^2;
    AnyVar Izz = Ixx;
    
    AnyMat33 JM = CenterNode.ARel*{{Iyy,0,0},{0,Ixx,0},{0,0,Izz}}*CenterNode.ARel';
    AnyFloat Jii = {JM[0][0], JM[1][1], JM[2][2]};
    AnyFloat Jij = {JM[1][0], JM[2][1], JM[2][0]};
    
    AnyDrawSurf DrwSurf = {
      FileName = ....AnySurfFolder+"/ProximalPhalange1";
      ScaleXYZ = {1.0, 1.0, .....Sign*1.0}*.FootType.ProxPhalScale;
      RGB = Main.DrawSettings.Colors.Segments;
      AnyFunTransform3D &Scale =.Scale;
      Opacity=1;
    };
    
    AnyRefNode MtPhalJoint = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ=10*{0.005,0.005,0.005};RGB={0.0,1.0,0.0};};
      sRel = .Scale({0.00461532, -0.0629641, .....Sign*-0.0155316}*.FootType.ProxPhalScale);
      ARel = .CenterNode.ARel*RotMat(-20*pi/180,x);
    };
    
    AnyRefNode RefDist = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1.0,1.0,0.0};};
      sRel = .Scale({-0.000441674, -0.1014964, .....Sign*-0.006944514}*.FootType.ProxPhalScale);
    };
    
    //Segment center node
    AnyRefNode CenterNode={
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,1,0};};
      sRel = 0.5*(.MtPhalJoint.sRel+.RefDist.sRel);
      ARel = RotMat(.MtPhalJoint.sRel,.RefDist.sRel,{0.1,0,0} );
    };
    
    
    AnyRefNode DistPhalJoint = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      // sRel = .Scale({-0.001083079, -0.10166927, ....Sign*-0.008109532}*.FootType.ProxPhalScale);
      sRel =..DistalPhalange1.DistPhalJoint.sRel;
      
      ARel = ..DistalPhalange1.DistPhalJoint.ARel;
      
    };
    
    
    AnyRefNode RefDistTop ={
      sRel = .DistPhalJoint.sRel+({0, 0.01,0})*.DistPhalJoint.ARel';
      
      AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1.0,1.0,0.0};};
      
    };
    
    
    //***********************
    //Muscles nodes
    //***********************
    AnyRefNode ExtensorHallucisLongusViaNode10= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({0.005761685, -0.09947411, .....Sign*-0.007985534}*.FootType.ProxPhalScale);
    };
    
    AnyRefNode FlexorHallucisLongusViaNode10= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.008933837, -0.09484615, .....Sign*-0.00810336}*.FootType.ProxPhalScale);
    };
    
    //***********************
    //Ligaments nodes
    //***********************
    
    AnyRefNode LigAponeurosisPlantaris = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1.0,1.0,0.0};};
      sRel = .Scale({-0.007756465, -0.07420416, .....Sign*-0.01336598}*.FootType.ProxPhalScale);
    };
    
  }; // End of ProximalPhalanges1
  
  AnyRefNode DistalPhalange1 = {
    
    AnyFolder &FootType = ....FootType;
    sRel=.ProximalPhalange1.DistPhalJoint.sRel*.ProximalPhalange1.ARel'+.ProximalPhalange1.sRel-DistPhalJoint.sRel*ARel';
    
    AnyFunTransform3D &Scale = ....GeoScaling.DistalPhalanges1.ScaleFunction;  
    AnyFunTransform3D &GeomScale =Scale;
    AnyRefNode AnatomicalFrame = {};
    AnyRefNode& ScalingNode=AnatomicalFrame ;
    /// For backwards compatability with AMMR 2.4 MoCap Marker protocols
    AnyRefNode& MoCapMarkerFrameAMMR24 = AnatomicalFrame;
    
    AnyVar MassS = ....MassScaling.Foot.MassScale;
    AnyVar MassStandard = ....StandardParameters.Foot.Mass*0.008262117;
    AnyVar Mass = MassS*MassStandard;
    
    //AnyDrawSeg Draw = {};
    AnyFloat sCoM = 0.5*(RefDist.sRel + DistPhalJoint.sRel);
    //  JaboutCoMOnOff = On;
    
    AnyVar Length = vnorm(RefDist.sRel - DistPhalJoint.sRel);
    AnyVar Radius = (Mass/(3.1416*Length*....StandardParameters.Foot.Density))^0.5;
    
    AnyVar Ixx = 1/12 * Mass * (3*Radius^2 + Length^2);
    AnyVar Iyy = 0.5 * Mass * Radius^2;
    AnyVar Izz = Ixx;
    
    AnyMat33 JM = CenterNode.ARel*{{Iyy,0,0},{0,Ixx,0},{0,0,Izz}}*CenterNode.ARel';
    AnyFloat Jii = {JM[0][0], JM[1][1], JM[2][2]};
    AnyFloat Jij = {JM[1][0], JM[2][1], JM[2][0]};
    
    AnyDrawSurf DrwSurf = {
      FileName = ....AnySurfFolder+"/DistalPhalange1";
      ScaleXYZ = {1.0, 1.0, .....Sign*1.0}*.FootType.DistPhalScale;
      RGB = Main.DrawSettings.Colors.Segments;
      AnyFunTransform3D &Scale =.Scale; 
      Opacity=1;
    };
    
    AnyRefNode DistPhalJoint = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = .Scale({-0.001083079, -0.10166927+0.003, .....Sign*-0.008109532}*.FootType.DistPhalScale);
      ARel = .CenterNode.ARel;
    };
    
    AnyRefNode RefDist = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = .Scale({0.00136714, -0.1228519, .....Sign*0.002927616}*.FootType.DistPhalScale);
    };
    
    
    //Segment center node
    AnyRefNode CenterNode={
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,1,0};};
      sRel = 0.5*(.DistPhalJoint.sRel+.RefDist.sRel);
      ARel = RotMat(.DistPhalJoint.sRel,.RefDist.sRel,{1.0,0.0,0.0});
    };
    
    
    AnyRefNode ToeTip = 
    {
      //     AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,1};};
      sRel = .Scale({0.00136714, -0.1268519, .....Sign*0.002927616}*.FootType.DistPhalScale);
    };
    
    AnyRefNode GroundContactNode = 
    {
      //     AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,1};};
      sRel = .Scale({-0.006705874, -0.1152933, .....Sign*-0.001366105}*.FootType.DistPhalScale);
    };
    
    //***********************
    //Muscles nodes
    //***********************
    AnyRefNode ExtensorHallucisLongus1Node = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({0.00544894, -0.1095213, .....Sign*-0.001445225}*.FootType.DistPhalScale);
    };
    
    AnyRefNode ExtensorHallucisLongus2Node = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({0.00544894, -0.1095213, .....Sign*-0.001445225}*.FootType.DistPhalScale);
    };
    
    AnyRefNode ExtensorHallucisLongus3Node = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({0.00544894, -0.1095213, .....Sign*-0.001445225}*.FootType.DistPhalScale);
    };
    
    
    AnyRefNode FlexorHallucisLongus1Node= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.009178465, -0.1076628, .....Sign*-0.00480216}*.FootType.DistPhalScale);
    };
    
    AnyRefNode FlexorHallucisLongus2Node= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.009178465, -0.1076628, .....Sign*-0.00480216}*.FootType.DistPhalScale);
    };
    
    AnyRefNode FlexorHallucisLongus3Node= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.009178465, -0.1076628, .....Sign*-0.00480216}*.FootType.DistPhalScale);
    };
    
  }; // End of DistalPhalanges1
  
  
}; // Toe1


//***********************
//         Toe 2
//***********************


AnySeg Toe2 = {
  Mass = ProximalPhalange2.Mass + MiddlePhalange2.Mass + DistalPhalange2.Mass;
  sCoM = (
          ProximalPhalange2.Mass*ProximalPhalange2.sCoM +
          MiddlePhalange2.Mass*MiddlePhalange2.sCoM +
          DistalPhalange2.Mass*DistalPhalange2.sCoM
         )/Mass;
  r0=.Midfoot.Metatarsal2.MtPhalJoint.sRel*.Midfoot.Metatarsal2.ARel'+.Midfoot.r0-ProximalPhalange2.MtPhalJoint.sRel*ProximalPhalange2.ARel';
  AnyRefNode CoM = {sRel =.sCoM;}; 
  Jii = EqInertia.Jii;
  Jij = EqInertia.Jij;
  JaboutCoMOnOff = On;
  
  AnyFolder EqInertia = {
    // Equivalent inertia is calculated using parallel axis theorem. Jii of constituent segments, expressed about their corresponding
    // CoM are translated to the CoM of the lumped segment using the formula: JiiNew = JiiCoM + mr^2
    // r vector is calculated as the difference between constituent segment CoM and lumped segment CoM.
    // m is the mass of the constituent segment.
    // JiiCoM is the Jii of the constituent segment about its own CoM
    // JiiNew is the Jii of the constituent segment about the CoM of the lumped segment.
          
    AnyFloat sRelPP2CoM = .ProximalPhalange2.sCoM-.sCoM;
    AnyFloat JMPP2T = .ProximalPhalange2.Mass*{{sRelPP2CoM[1]^2 + sRelPP2CoM[2]^2, -sRelPP2CoM[0]*sRelPP2CoM[1], -sRelPP2CoM[0]*sRelPP2CoM[2]},
                                         {-sRelPP2CoM[1]*sRelPP2CoM[0], sRelPP2CoM[2]^2 + sRelPP2CoM[0]^2, -sRelPP2CoM[1]*sRelPP2CoM[2]},
                                         {-sRelPP2CoM[2]*sRelPP2CoM[0], -sRelPP2CoM[2]*sRelPP2CoM[1], sRelPP2CoM[0]^2 + sRelPP2CoM[1]^2}};
    AnyFloat JMPP2CoM = .ProximalPhalange2.JM + JMPP2T;
    AnyFloat JiiPP2CoM = {JMPP2CoM[0][0], JMPP2CoM[1][1], JMPP2CoM[2][2]};
    AnyFloat JijPP2CoM = {JMPP2CoM[1][0], JMPP2CoM[2][1], JMPP2CoM[2][0]};
    
    AnyFloat sRelMP2CoM = .MiddlePhalange2.sCoM-.sCoM;
    AnyFloat JMMP2T = .MiddlePhalange2.Mass*{{sRelMP2CoM[1]^2 + sRelMP2CoM[2]^2, -sRelMP2CoM[0]*sRelMP2CoM[1], -sRelMP2CoM[0]*sRelMP2CoM[2]},
                                         {-sRelMP2CoM[1]*sRelMP2CoM[0], sRelMP2CoM[2]^2 + sRelMP2CoM[0]^2, -sRelMP2CoM[1]*sRelMP2CoM[2]},
                                         {-sRelMP2CoM[2]*sRelMP2CoM[0], -sRelMP2CoM[2]*sRelMP2CoM[1], sRelMP2CoM[0]^2 + sRelMP2CoM[1]^2}};
    AnyFloat JMMP2CoM = .MiddlePhalange2.JM + JMMP2T;
    AnyFloat JiiMP2CoM = {JMMP2CoM[0][0], JMMP2CoM[1][1], JMMP2CoM[2][2]};
    AnyFloat JijMP2CoM = {JMMP2CoM[1][0], JMMP2CoM[2][1], JMMP2CoM[2][0]};

    AnyFloat sRelDP2CoM = .DistalPhalange2.sCoM-.sCoM;
    AnyFloat JMDP2T = .DistalPhalange2.Mass*{{sRelDP2CoM[1]^2 + sRelDP2CoM[2]^2, -sRelDP2CoM[0]*sRelDP2CoM[1], -sRelDP2CoM[0]*sRelDP2CoM[2]},
                                         {-sRelDP2CoM[1]*sRelDP2CoM[0], sRelDP2CoM[2]^2 + sRelDP2CoM[0]^2, -sRelDP2CoM[1]*sRelDP2CoM[2]},
                                         {-sRelDP2CoM[2]*sRelDP2CoM[0], -sRelDP2CoM[2]*sRelDP2CoM[1], sRelDP2CoM[0]^2 + sRelDP2CoM[1]^2}};
    AnyFloat JMDP2CoM = .DistalPhalange2.JM + JMDP2T;
    AnyFloat JiiDP2CoM = {JMDP2CoM[0][0], JMDP2CoM[1][1], JMDP2CoM[2][2]};
    AnyFloat JijDP2CoM = {JMDP2CoM[1][0], JMDP2CoM[2][1], JMDP2CoM[2][0]};
    
    
    AnyFloat Jii = JiiPP2CoM + JiiMP2CoM + JiiDP2CoM;
    AnyFloat Jij = JijPP2CoM + JijMP2CoM + JijDP2CoM;
  };

  AnyRefNode ProximalPhalange2 = {
    //  sRel=.Metatarsal2.MtPhalJoint.sRel*.Metatarsal2.Axes0'+.Metatarsal2.r0-MtPhalJoint.sRel*Axes0';
    
    AnyFunTransform3D &Scale = ....GeoScaling.ProximalPhalanges2.ScaleFunction; 
    AnyFunTransform3D &GeomScale =Scale;
    AnyRefNode AnatomicalFrame = {};
    AnyRefNode& ScalingNode=AnatomicalFrame ;
    /// For backwards compatability with AMMR 2.4 MoCap Marker protocols
    AnyRefNode& MoCapMarkerFrameAMMR24 = AnatomicalFrame;
    
    AnyVar MassS = ....MassScaling.Foot.MassScale;
    AnyVar MassStandard = ....StandardParameters.Foot.Mass*0.007562741;
    AnyVar Mass = MassS*MassStandard;
    
    //AnyDrawSeg Draw = {};
    AnyFloat sCoM = 0.5*(RefDist.sRel + MtPhalJoint.sRel);
    //  JaboutCoMOnOff = On;
    
    AnyVar Length = vnorm(RefDist.sRel - MtPhalJoint.sRel);
    AnyVar Radius = (Mass/(3.1416*Length*....StandardParameters.Foot.Density))^0.5;
    
    AnyVar Ixx = 1/12 * Mass * (3*Radius^2 + Length^2);
    AnyVar Iyy = 0.5 * Mass * Radius^2;
    AnyVar Izz = Ixx;
    
    AnyMat33 JM = CenterNode.ARel*{{Iyy,0,0},{0,Ixx,0},{0,0,Izz}}*CenterNode.ARel';
    AnyFloat Jii = {JM[0][0], JM[1][1], JM[2][2]};
    AnyFloat Jij = {JM[1][0], JM[2][1], JM[2][0]};
    
    AnyDrawSurf DrwSurf = {
      FileName = ....AnySurfFolder+"/ProximalPhalange2";
      ScaleXYZ = {1.0, 1.0, .....Sign*1.0}; 
      RGB = Main.DrawSettings.Colors.Segments;
      AnyFunTransform3D &Scale =.Scale; 
      Opacity=1;
      
    };
    
    AnyRefNode MtPhalJoint = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0.0,1.0,0.0};};
      sRel = .Scale({0.0006, -0.0675, .....Sign*0.0126588});
      ARel = .CenterNode.ARel;
    };
    
    AnyRefNode RefDist = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0.0,1.0,0.0};};
      sRel = .Scale({-0.001707296, -0.09941698, .....Sign*0.01747704});
    };
    
    AnyRefNode RefProx = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0.0,1.0,0.0};};
      sRel = .Scale({0.005556107, -0.07297692, .....Sign*0.01393468});
    };
    
    //Segment center node
    AnyRefNode CenterNode={
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,1,0};};
      sRel = 0.5*(.MtPhalJoint.sRel+.RefDist.sRel);
      ARel = RotMat(.MtPhalJoint.sRel,.RefDist.sRel,.RefProx.sRel);
    };
    
    AnyRefNode ProxPhalJoint = 
    {
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={1,0,0};};
      sRel = ..MiddlePhalange2.ProxPhalJoint.sRel;
      ARel = ..MiddlePhalange2.ProxPhalJoint.ARel;
    };
    
    
    
    //***********************
    //Muscles nodes
    //***********************
    
    AnyRefNode ExtensorDigitorumLongusViaNode7= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({0.004356564, -0.09994124, .....Sign*0.01804176});
    };
    
    AnyRefNode FlexorDigitorumLongusViaNode10= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.00711984, -0.09624732, .....Sign*0.01596708});
    };
    
    
    //***********************
    //Ligaments nodes
    //***********************
    
    AnyRefNode LigAponeurosisPlantaris = 
    {
      //   AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1.0,1.0,0.0};};
      sRel = .Scale({-0.009073988, -0.07490946, .....Sign*0.01194693});
    };
    
  }; // End of ProximalPhalanges2
  
  AnyRefNode MiddlePhalange2 = {
    sRel=.ProximalPhalange2.ProxPhalJoint.sRel*.ProximalPhalange2.ARel'+.ProximalPhalange2.sRel-ProxPhalJoint.sRel*ARel';
    
    AnyFunTransform3D &Scale = ....GeoScaling.MiddlePhalanges2.ScaleFunction;  
    AnyFunTransform3D &GeomScale =Scale;
    AnyRefNode AnatomicalFrame = {};
    AnyRefNode& ScalingNode=AnatomicalFrame ;
    /// For backwards compatability with AMMR 2.4 MoCap Marker protocols
    AnyRefNode& MoCapMarkerFrameAMMR24 = AnatomicalFrame;
    
    AnyVar MassS = ....MassScaling.Foot.MassScale;
    AnyVar MassStandard = ....StandardParameters.Foot.Mass*0.001591376;
    AnyVar Mass = MassS*MassStandard;
    
    //AnyDrawSeg Draw = {};
    AnyFloat sCoM = 0.5*(RefDist.sRel + ProxPhalJoint.sRel);
    //  JaboutCoMOnOff = On;
    
    AnyVar Length = vnorm(RefDist.sRel - ProxPhalJoint.sRel);
    AnyVar Radius = (Mass/(3.1416*Length*....StandardParameters.Foot.Density))^0.5;
    
    AnyVar Ixx = 1/12 * Mass * (3*Radius^2 + Length^2);
    AnyVar Iyy = 0.5 * Mass * Radius^2;
    AnyVar Izz = Ixx;
    
    AnyMat33 JM = CenterNode.ARel*{{Iyy,0,0},{0,Ixx,0},{0,0,Izz}}*CenterNode.ARel';
    AnyFloat Jii = {JM[0][0], JM[1][1], JM[2][2]};
    AnyFloat Jij = {JM[1][0], JM[2][1], JM[2][0]};
    
    AnyDrawSurf DrwSurf = {
      FileName = ....AnySurfFolder+"/MiddlePhalange2";
      ScaleXYZ = {1.0, 1.0, .....Sign*1.0};
      RGB = Main.DrawSettings.Colors.Segments;
      AnyFunTransform3D &Scale =.Scale; 
      Opacity=1;
    };
    
    AnyRefNode ProxPhalJoint = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={1,0,0};};
      sRel = .Scale({-0.003158194+0.002, -0.0962966, .....Sign*0.01694824});
      ARel = .CenterNode.ARel;
    };
    
    AnyRefNode RefDist = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={1,0,0};};
      sRel = .Scale({-0.00495792, -0.111385, .....Sign*0.02043704});
    };
    
    AnyRefNode RefProx = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={1,0,0};};
      sRel = .Scale({0.004356564, -0.09994124, .....Sign*0.01804176});
    };
    
    //Segment center node
    AnyRefNode CenterNode={
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,1,0};};
      sRel = 0.5*(.ProxPhalJoint.sRel+.RefDist.sRel);
      ARel = RotMat(.ProxPhalJoint.sRel,.RefDist.sRel,.RefProx.sRel);
    };
    
    AnyRefNode DistPhalJoint = 
    {
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = ..DistalPhalange2.DistPhalJoint.sRel;
      ARel = ..DistalPhalange2.DistPhalJoint.ARel;
    }; 
    
    //***********************
    //Muscles nodes
    //***********************
    
    AnyRefNode ExtensorDigitorumLongusViaNode8= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({0.001242716, -0.1129332, .....Sign*0.0203853});
    };
    
    AnyRefNode ExtensorDigitorumLongusNode= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({0.003538499, -0.1052887, .....Sign*0.01918585});
    };
    
    AnyRefNode FlexorDigitorumLongusViaNode11= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.008963993, -0.1082601, .....Sign*0.02008046});
    };
    
  }; // End of MiddlePhalanges2
  
  AnyRefNode DistalPhalange2 = {
    sRel=.MiddlePhalange2.DistPhalJoint.sRel*.MiddlePhalange2.ARel'+.MiddlePhalange2.sRel-DistPhalJoint.sRel*ARel';
    
    AnyFunTransform3D &Scale = ....GeoScaling.DistalPhalanges2.ScaleFunction;  
    AnyFunTransform3D &GeomScale =Scale;
    AnyRefNode AnatomicalFrame = {};
    AnyRefNode& ScalingNode=AnatomicalFrame ;
    /// For backwards compatability with AMMR 2.4 MoCap Marker protocols
    AnyRefNode& MoCapMarkerFrameAMMR24 = AnatomicalFrame;
    
    AnyVar MassS = ....MassScaling.Foot.MassScale;
    AnyVar MassStandard = ....StandardParameters.Foot.Mass*0.000724269;
    AnyVar Mass = MassS*MassStandard;
    
    //AnyDrawSeg Draw = {};
    AnyFloat sCoM = 0.5*(RefDist.sRel + DistPhalJoint.sRel);
    //  JaboutCoMOnOff = On;
    
    AnyVar Length = vnorm(RefDist.sRel - DistPhalJoint.sRel);
    AnyVar Radius = (Mass/(3.1416*Length*....StandardParameters.Foot.Density))^0.5;
    
    AnyVar Ixx = 1/12 * Mass * (3*Radius^2 + Length^2);
    AnyVar Iyy = 0.5 * Mass * Radius^2;
    AnyVar Izz = Ixx;
    
    AnyMat33 JM = CenterNode.ARel*{{Iyy,0,0},{0,Ixx,0},{0,0,Izz}}*CenterNode.ARel';
    AnyFloat Jii = {JM[0][0], JM[1][1], JM[2][2]};
    AnyFloat Jij = {JM[1][0], JM[2][1], JM[2][0]};
    
    AnyDrawSurf DrwSurf = {
      FileName = ....AnySurfFolder+"/DistalPhalange2";
      ScaleXYZ = {1.0, 1.0, .....Sign*1.0};
      RGB = Main.DrawSettings.Colors.Segments;
      AnyFunTransform3D &Scale =.Scale; 
      Opacity=1;
    };
    
    AnyRefNode DistPhalJoint = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = .Scale({-0.004708046, -0.1116229, .....Sign*0.01957764});
      ARel = .CenterNode.ARel;
    };
    
    AnyRefNode RefDist = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = .Scale({-0.004763274, -0.1197475, .....Sign*0.02273006});
    };
    
    AnyRefNode RefProx = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = .Scale({0.001242716, -0.1129332, .....Sign*0.0203853});
    };
    
    //Segment center node
    AnyRefNode CenterNode={
      //     AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005}*2;RGB={0,1,0};};
      sRel = 0.5*(.DistPhalJoint.sRel+.RefDist.sRel);
      ARel = RotMat(.DistPhalJoint.sRel,.RefDist.sRel,.RefProx.sRel);
    };
    
    AnyRefNode ToeTip = 
    {
      sRel = .Scale({-0.005, -0.121, .....Sign*0.022});
      //AnyDrawRefFrame drw2={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,1};};
    };
    
    AnyRefNode GroundContactNode = 
    {
      //     AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,1};};
      sRel = .Scale({-0.009118326, -0.1161024, .....Sign*0.02166108});
    };
    
    //***********************
    //Muscles nodes
    //***********************
    
    AnyRefNode ExtensorDigitorumLongusNode= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({6.538419e-006, -0.1161063, .....Sign*0.02165135});
    };
    
    AnyRefNode FlexorDigitorumLongusNode= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.01012872, -0.1122994, .....Sign*0.0213305});
    };
    
  }; // End of DistalPhalanges2
  
  
};// end Toe2


//***********************
//         Toe 3
//***********************


AnySeg Toe3 = {
  
  Mass = ProximalPhalange3.Mass + MiddlePhalange3.Mass + DistalPhalange3.Mass;
  sCoM = (
          ProximalPhalange3.Mass*ProximalPhalange3.sCoM +
          MiddlePhalange3.Mass*MiddlePhalange3.sCoM +
          DistalPhalange3.Mass*DistalPhalange3.sCoM
         )/Mass;
  r0=.Midfoot.Metatarsal3.MtPhalJoint.sRel*.Midfoot.Metatarsal3.ARel'+.Midfoot.r0-ProximalPhalange3.MtPhalJoint.sRel*ProximalPhalange3.ARel';
  AnyRefNode CoM = {sRel =.sCoM;}; 
  Jii = EqInertia.Jii;
  Jij = EqInertia.Jij;
  JaboutCoMOnOff = On;
  
  AnyFolder EqInertia = {
    // Equivalent inertia is calculated using parallel axis theorem. Jii of constituent segments, expressed about their corresponding
    // CoM are translated to the CoM of the lumped segment using the formula: JiiNew = JiiCoM + mr^2
    // r vector is calculated as the difference between constituent segment CoM and lumped segment CoM.
    // m is the mass of the constituent segment.
    // JiiCoM is the Jii of the constituent segment about its own CoM
    // JiiNew is the Jii of the constituent segment about the CoM of the lumped segment.
          
    AnyFloat sRelPP3CoM = .ProximalPhalange3.sCoM-.sCoM;
    AnyFloat JMPP3T = .ProximalPhalange3.Mass*{{sRelPP3CoM[1]^2 + sRelPP3CoM[2]^2, -sRelPP3CoM[0]*sRelPP3CoM[1], -sRelPP3CoM[0]*sRelPP3CoM[2]},
                                         {-sRelPP3CoM[1]*sRelPP3CoM[0], sRelPP3CoM[2]^2 + sRelPP3CoM[0]^2, -sRelPP3CoM[1]*sRelPP3CoM[2]},
                                         {-sRelPP3CoM[2]*sRelPP3CoM[0], -sRelPP3CoM[2]*sRelPP3CoM[1], sRelPP3CoM[0]^2 + sRelPP3CoM[1]^2}};
    AnyFloat JMPP3CoM = .ProximalPhalange3.JM + JMPP3T;
    AnyFloat JiiPP3CoM = {JMPP3CoM[0][0], JMPP3CoM[1][1], JMPP3CoM[2][2]};
    AnyFloat JijPP3CoM = {JMPP3CoM[1][0], JMPP3CoM[2][1], JMPP3CoM[2][0]};
    
    AnyFloat sRelMP3CoM = .MiddlePhalange3.sCoM-.sCoM;
    AnyFloat JMMP3T = .MiddlePhalange3.Mass*{{sRelMP3CoM[1]^2 + sRelMP3CoM[2]^2, -sRelMP3CoM[0]*sRelMP3CoM[1], -sRelMP3CoM[0]*sRelMP3CoM[2]},
                                         {-sRelMP3CoM[1]*sRelMP3CoM[0], sRelMP3CoM[2]^2 + sRelMP3CoM[0]^2, -sRelMP3CoM[1]*sRelMP3CoM[2]},
                                         {-sRelMP3CoM[2]*sRelMP3CoM[0], -sRelMP3CoM[2]*sRelMP3CoM[1], sRelMP3CoM[0]^2 + sRelMP3CoM[1]^2}};
    AnyFloat JMMP3CoM = .MiddlePhalange3.JM + JMMP3T;
    AnyFloat JiiMP3CoM = {JMMP3CoM[0][0], JMMP3CoM[1][1], JMMP3CoM[2][2]};
    AnyFloat JijMP3CoM = {JMMP3CoM[1][0], JMMP3CoM[2][1], JMMP3CoM[2][0]};

    AnyFloat sRelDP3CoM = .DistalPhalange3.sCoM-.sCoM;
    AnyFloat JMDP3T = .DistalPhalange3.Mass*{{sRelDP3CoM[1]^2 + sRelDP3CoM[2]^2, -sRelDP3CoM[0]*sRelDP3CoM[1], -sRelDP3CoM[0]*sRelDP3CoM[2]},
                                         {-sRelDP3CoM[1]*sRelDP3CoM[0], sRelDP3CoM[2]^2 + sRelDP3CoM[0]^2, -sRelDP3CoM[1]*sRelDP3CoM[2]},
                                         {-sRelDP3CoM[2]*sRelDP3CoM[0], -sRelDP3CoM[2]*sRelDP3CoM[1], sRelDP3CoM[0]^2 + sRelDP3CoM[1]^2}};
    AnyFloat JMDP3CoM = .DistalPhalange3.JM + JMDP3T;
    AnyFloat JiiDP3CoM = {JMDP3CoM[0][0], JMDP3CoM[1][1], JMDP3CoM[2][2]};
    AnyFloat JijDP3CoM = {JMDP3CoM[1][0], JMDP3CoM[2][1], JMDP3CoM[2][0]};
    
    
    AnyFloat Jii = JiiPP3CoM + JiiMP3CoM + JiiDP3CoM;
    AnyFloat Jij = JijPP3CoM + JijMP3CoM + JijDP3CoM;
  };

  
  AnyRefNode ProximalPhalange3 = {
    //  r0=.Metatarsal3.MtPhalJoint.sRel*.Metatarsal3.Axes0'+.Metatarsal3.r0-MtPhalJoint.sRel*Axes0';
    
    AnyFunTransform3D &Scale = ....GeoScaling.ProximalPhalanges3.ScaleFunction;  
    AnyFunTransform3D &GeomScale =Scale;
    AnyRefNode AnatomicalFrame = {};
    AnyRefNode& ScalingNode=AnatomicalFrame ;
    /// For backwards compatability with AMMR 2.4 MoCap Marker protocols
    AnyRefNode& MoCapMarkerFrameAMMR24 = AnatomicalFrame;
    
    AnyVar MassS = ....MassScaling.Foot.MassScale;
    AnyVar MassStandard = ....StandardParameters.Foot.Mass*0.006408771;
    AnyVar Mass = MassS*MassStandard;
    
    //AnyDrawSeg Draw = {};
    AnyFloat sCoM = 0.5*(RefDist.sRel + MtPhalJoint.sRel);
    //  JaboutCoMOnOff = On;
    
    AnyVar Length = vnorm(RefDist.sRel - MtPhalJoint.sRel);
    AnyVar Radius = (Mass/(3.1416*Length*....StandardParameters.Foot.Density))^0.5;
    
    AnyVar Ixx = 1/12 * Mass * (3*Radius^2 + Length^2);
    AnyVar Iyy = 0.5 * Mass * Radius^2;
    AnyVar Izz = Ixx;
    
    AnyMat33 JM = CenterNode.ARel*{{Iyy,0,0},{0,Ixx,0},{0,0,Izz}}*CenterNode.ARel';
    AnyFloat Jii = {JM[0][0], JM[1][1], JM[2][2]};
    AnyFloat Jij = {JM[1][0], JM[2][1], JM[2][0]};
    
    AnyDrawSurf DrwSurf = {
      FileName = ....AnySurfFolder+"/ProximalPhalange3";
      ScaleXYZ = {1.0, 1.0, .....Sign*1.0};  
      RGB = Main.DrawSettings.Colors.Segments;
      AnyFunTransform3D &Scale =.Scale; 
      Opacity=1;
    };
    
    AnyRefNode MtPhalJoint = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0.0,1.0,0.0};};
      sRel = .Scale({-0.00169444, -0.063321, .....Sign*0.0259938});
      ARel = .CenterNode.ARel;
    };
    
    AnyRefNode RefDist = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0.0,1.0,0.0};};
      sRel = .Scale({-0.002001345, -0.09177314, .....Sign*0.03132222});
    };
    
    AnyRefNode RefProx = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0.0,1.0,0.0};};
      sRel = .Scale({0.003101825, -0.06753456, .....Sign*0.02756303});
    };
    
    //Segment center node
    AnyRefNode CenterNode={
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,1,0};};
      sRel = 0.5*(.MtPhalJoint.sRel+.RefDist.sRel);
      ARel = RotMat(.MtPhalJoint.sRel,.RefDist.sRel,.RefProx.sRel);
    };
    
    AnyRefNode ProxPhalJoint = 
    {
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={1,0,0};};
      sRel = ..MiddlePhalange3.ProxPhalJoint.sRel;
      ARel = ..MiddlePhalange3.ProxPhalJoint.ARel;
      
    };
    
    
    //***********************
    //Muscles nodes
    //***********************
    
    AnyRefNode ExtensorDigitorumLongusViaNode10= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({0.003532243, -0.09107391, .....Sign*0.03195742});
    };
    
    AnyRefNode FlexorDigitorumLongusViaNode13= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.007466041, -0.09024897, .....Sign*0.03119982});
    };
    
    //***********************
    //Ligaments nodes
    //***********************
    
    AnyRefNode LigAponeurosisPlantaris = 
    {
      //   AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1.0,1.0,0.0};};
      sRel = .Scale({-0.010546552, -0.07198454, .....Sign*0.0270324});
    };
    
  }; // End of ProximalPhalanges3
  
  AnyRefNode MiddlePhalange3 = {
    sRel=.ProximalPhalange3.ProxPhalJoint.sRel*.ProximalPhalange3.ARel'+.ProximalPhalange3.sRel-ProxPhalJoint.sRel*ARel';
    
    AnyFunTransform3D &Scale = ....GeoScaling.MiddlePhalanges3.ScaleFunction;  
    AnyFunTransform3D &GeomScale =Scale;
    AnyRefNode AnatomicalFrame = {};
    AnyRefNode& ScalingNode=AnatomicalFrame ;
    /// For backwards compatability with AMMR 2.4 MoCap Marker protocols
    AnyRefNode& MoCapMarkerFrameAMMR24 = AnatomicalFrame;
    
    AnyVar MassS = ....MassScaling.Foot.MassScale;
    AnyVar MassStandard = ....StandardParameters.Foot.Mass*0.001243466;
    AnyVar Mass = MassS*MassStandard;
    
    //AnyDrawSeg Draw = {};
    AnyFloat sCoM = 0.5*(RefDist.sRel + ProxPhalJoint.sRel);
    //  JaboutCoMOnOff = On;
    
    AnyVar Length = vnorm(RefDist.sRel - ProxPhalJoint.sRel);
    AnyVar Radius = (Mass/(3.1416*Length*....StandardParameters.Foot.Density))^0.5;
    
    AnyVar Ixx = 1/12 * Mass * (3*Radius^2 + Length^2);
    AnyVar Iyy = 0.5 * Mass * Radius^2;
    AnyVar Izz = Ixx;
    
    AnyMat33 JM = CenterNode.ARel*{{Iyy,0,0},{0,Ixx,0},{0,0,Izz}}*CenterNode.ARel';
    AnyFloat Jii = {JM[0][0], JM[1][1], JM[2][2]};
    AnyFloat Jij = {JM[1][0], JM[2][1], JM[2][0]};
    
    AnyDrawSurf DrwSurf = {
      FileName = ....AnySurfFolder+"/MiddlePhalange3";
      ScaleXYZ = {1.0, 1.0, .....Sign*1.0};
      RGB = Main.DrawSettings.Colors.Segments;
      AnyFunTransform3D &Scale =.Scale; 
      Opacity=1;
    };
    
    AnyRefNode ProxPhalJoint = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={1,0,0};};
      sRel = .Scale({-0.001918323, -0.08935672, .....Sign*0.03099156});
      ARel = .CenterNode.ARel;
    };
    
    AnyRefNode RefDist = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={1,0,0};};
      sRel = .Scale({-0.004356479, -0.1043722, .....Sign*0.03404669});
    };
    
    AnyRefNode RefProx = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={1,0,0};};
      sRel = .Scale({0.003532243, -0.09107391, .....Sign*0.03195742});
    };
    
    //Segment center node
    AnyRefNode CenterNode={
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,1,0};};
      sRel = 0.5*(.ProxPhalJoint.sRel+.RefDist.sRel);
      ARel = RotMat(.ProxPhalJoint.sRel,.RefDist.sRel,.RefProx.sRel);
    };
    
    AnyRefNode DistPhalJoint = 
    {
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = ..DistalPhalange3.DistPhalJoint.sRel;
      ARel = ..DistalPhalange3.DistPhalJoint.ARel;
    }; 
    
    //***********************
    //Muscles nodes
    //***********************
    
    AnyRefNode ExtensorDigitorumLongusViaNode11= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.001146739, -0.1043938, .....Sign*0.03473453});
    };
    
    AnyRefNode ExtensorDigitorumLongusNode= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({0.001891965, -0.09497174, .....Sign*0.03286684});
    };
    
    AnyRefNode FlexorDigitorumLongusViaNode14= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.011867984, -0.1033654, .....Sign*0.03382728});
    };
    
  }; // End of MiddlePhalanges3
  
  AnyRefNode DistalPhalange3 = {
    sRel=.MiddlePhalange3.DistPhalJoint.sRel*.MiddlePhalange3.ARel'+.MiddlePhalange3.sRel-DistPhalJoint.sRel*ARel';
    
    AnyFunTransform3D &Scale = ....GeoScaling.DistalPhalanges3.ScaleFunction;  
    AnyFunTransform3D &GeomScale =Scale;
    AnyRefNode AnatomicalFrame = {};
    AnyRefNode& ScalingNode=AnatomicalFrame ;
    /// For backwards compatability with AMMR 2.4 MoCap Marker protocols
    AnyRefNode& MoCapMarkerFrameAMMR24 = AnatomicalFrame;
    
    AnyVar MassS = ....MassScaling.Foot.MassScale;
    AnyVar MassStandard = ....StandardParameters.Foot.Mass*0.000608694;
    AnyVar Mass = MassS*MassStandard;
    
    //AnyDrawSeg Draw = {};
    AnyFloat sCoM = 0.5*(RefDist.sRel + DistPhalJoint.sRel);
    //  JaboutCoMOnOff = On;
    
    AnyVar Length = vnorm(RefDist.sRel - DistPhalJoint.sRel);
    AnyVar Radius = (Mass/(3.1416*Length*....StandardParameters.Foot.Density))^0.5;
    
    AnyVar Ixx = 1/12 * Mass * (3*Radius^2 + Length^2);
    AnyVar Iyy = 0.5 * Mass * Radius^2;
    AnyVar Izz = Ixx;
    
    AnyMat33 JM = CenterNode.ARel*{{Iyy,0,0},{0,Ixx,0},{0,0,Izz}}*CenterNode.ARel';
    AnyFloat Jii = {JM[0][0], JM[1][1], JM[2][2]};
    AnyFloat Jij = {JM[1][0], JM[2][1], JM[2][0]};
    
    AnyDrawSurf DrwSurf = {
      FileName = ....AnySurfFolder+"/DistalPhalange3";
      ScaleXYZ = {1.0, 1.0, .....Sign*1.0};
      RGB = Main.DrawSettings.Colors.Segments;
      AnyFunTransform3D &Scale =.Scale; 
      Opacity=1;
    };
    
    AnyRefNode DistPhalJoint = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = .Scale({-0.006065235, -0.1034911, .....Sign*0.03371704});
      ARel = .CenterNode.ARel;
    };
    
    AnyRefNode RefDist = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = .Scale({-0.008175768, -0.1130482, .....Sign*0.03630654});
    };
    
    AnyRefNode RefProx = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = .Scale({-0.0023865434, -0.1051697, .....Sign*0.03456902});
    };
    
    //Segment center node
    AnyRefNode CenterNode={
      //     AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005}*2;RGB={0,1,0};};
      sRel = 0.5*(.DistPhalJoint.sRel+.RefDist.sRel);
      ARel = RotMat(.DistPhalJoint.sRel,.RefDist.sRel,.RefProx.sRel); 
    };
    
    
    //***********************
    //Muscles nodes
    //***********************
    
    AnyRefNode ExtensorDigitorumLongusNode= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.0023865434, -0.1081697, .....Sign*0.03616902});
    };
    
    AnyRefNode FlexorDigitorumLongusNode= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.012194342, -0.1070788, .....Sign*0.03491143});
    };
    
  }; // End of DistalPhalanges3
  
  
} ; // End of Toe3


//***********************
//         Toe 4
//***********************

AnySeg Toe4 = {
  Mass = ProximalPhalange4.Mass + MiddlePhalange4.Mass + DistalPhalange4.Mass;
  sCoM = (
          ProximalPhalange4.Mass*ProximalPhalange4.sCoM +
          MiddlePhalange4.Mass*MiddlePhalange4.sCoM +
          DistalPhalange4.Mass*DistalPhalange4.sCoM
         )/Mass;
  r0=.Midfoot.Metatarsal4.MtPhalJoint.sRel*.Midfoot.Metatarsal4.ARel'+.Midfoot.r0-ProximalPhalange4.MtPhalJoint.sRel*ProximalPhalange4.ARel';
  AnyRefNode CoM = {sRel =.sCoM;}; 
  Jii = EqInertia.Jii;
  Jij = EqInertia.Jij;
  JaboutCoMOnOff = On;
  
  AnyFolder EqInertia = {
    // Equivalent inertia is calculated using parallel axis theorem. Jii of constituent segments, expressed about their corresponding
    // CoM are translated to the CoM of the lumped segment using the formula: JiiNew = JiiCoM + mr^2
    // r vector is calculated as the difference between constituent segment CoM and lumped segment CoM.
    // m is the mass of the constituent segment.
    // JiiCoM is the Jii of the constituent segment about its own CoM
    // JiiNew is the Jii of the constituent segment about the CoM of the lumped segment.
          
    AnyFloat sRelPP4CoM = .ProximalPhalange4.sCoM-.sCoM;
    AnyFloat JMPP4T = .ProximalPhalange4.Mass*{{sRelPP4CoM[1]^2 + sRelPP4CoM[2]^2, -sRelPP4CoM[0]*sRelPP4CoM[1], -sRelPP4CoM[0]*sRelPP4CoM[2]},
                                         {-sRelPP4CoM[1]*sRelPP4CoM[0], sRelPP4CoM[2]^2 + sRelPP4CoM[0]^2, -sRelPP4CoM[1]*sRelPP4CoM[2]},
                                         {-sRelPP4CoM[2]*sRelPP4CoM[0], -sRelPP4CoM[2]*sRelPP4CoM[1], sRelPP4CoM[0]^2 + sRelPP4CoM[1]^2}};
    AnyFloat JMPP4CoM = .ProximalPhalange4.JM + JMPP4T;
    AnyFloat JiiPP4CoM = {JMPP4CoM[0][0], JMPP4CoM[1][1], JMPP4CoM[2][2]};
    AnyFloat JijPP4CoM = {JMPP4CoM[1][0], JMPP4CoM[2][1], JMPP4CoM[2][0]};
    
    AnyFloat sRelMP4CoM = .MiddlePhalange4.sCoM-.sCoM;
    AnyFloat JMMP4T = .MiddlePhalange4.Mass*{{sRelMP4CoM[1]^2 + sRelMP4CoM[2]^2, -sRelMP4CoM[0]*sRelMP4CoM[1], -sRelMP4CoM[0]*sRelMP4CoM[2]},
                                         {-sRelMP4CoM[1]*sRelMP4CoM[0], sRelMP4CoM[2]^2 + sRelMP4CoM[0]^2, -sRelMP4CoM[1]*sRelMP4CoM[2]},
                                         {-sRelMP4CoM[2]*sRelMP4CoM[0], -sRelMP4CoM[2]*sRelMP4CoM[1], sRelMP4CoM[0]^2 + sRelMP4CoM[1]^2}};
    AnyFloat JMMP4CoM = .MiddlePhalange4.JM + JMMP4T;
    AnyFloat JiiMP4CoM = {JMMP4CoM[0][0], JMMP4CoM[1][1], JMMP4CoM[2][2]};
    AnyFloat JijMP4CoM = {JMMP4CoM[1][0], JMMP4CoM[2][1], JMMP4CoM[2][0]};

    AnyFloat sRelDP4CoM = .DistalPhalange4.sCoM-.sCoM;
    AnyFloat JMDP4T = .DistalPhalange4.Mass*{{sRelDP4CoM[1]^2 + sRelDP4CoM[2]^2, -sRelDP4CoM[0]*sRelDP4CoM[1], -sRelDP4CoM[0]*sRelDP4CoM[2]},
                                         {-sRelDP4CoM[1]*sRelDP4CoM[0], sRelDP4CoM[2]^2 + sRelDP4CoM[0]^2, -sRelDP4CoM[1]*sRelDP4CoM[2]},
                                         {-sRelDP4CoM[2]*sRelDP4CoM[0], -sRelDP4CoM[2]*sRelDP4CoM[1], sRelDP4CoM[0]^2 + sRelDP4CoM[1]^2}};
    AnyFloat JMDP4CoM = .DistalPhalange4.JM + JMDP4T;
    AnyFloat JiiDP4CoM = {JMDP4CoM[0][0], JMDP4CoM[1][1], JMDP4CoM[2][2]};
    AnyFloat JijDP4CoM = {JMDP4CoM[1][0], JMDP4CoM[2][1], JMDP4CoM[2][0]};
    
    
    AnyFloat Jii = JiiPP4CoM + JiiMP4CoM + JiiDP4CoM;
    AnyFloat Jij = JijPP4CoM + JijMP4CoM + JijDP4CoM;
  };

  AnyRefNode ProximalPhalange4 = {
    //  r0=.Metatarsal4.MtPhalJoint.sRel*.Metatarsal4.Axes0'+.Metatarsal4.r0-MtPhalJoint.sRel*Axes0';
    
    AnyFunTransform3D &Scale = ....GeoScaling.ProximalPhalanges4.ScaleFunction;
    AnyFunTransform3D &GeomScale =Scale;
    AnyRefNode AnatomicalFrame = {};
    AnyRefNode& ScalingNode=AnatomicalFrame ;
    /// For backwards compatability with AMMR 2.4 MoCap Marker protocols
    AnyRefNode& MoCapMarkerFrameAMMR24 = AnatomicalFrame;
    
    AnyVar MassS = ....MassScaling.Foot.MassScale;
    AnyVar MassStandard = ....StandardParameters.Foot.Mass*0.00596366;
    AnyVar Mass = MassS*MassStandard;
    
    //AnyDrawSeg Draw = {};
    AnyFloat sCoM = 0.5*(RefDist.sRel + MtPhalJoint.sRel);
    //  JaboutCoMOnOff = On;
    
    AnyVar Length = vnorm(RefDist.sRel - MtPhalJoint.sRel);
    AnyVar Radius = (Mass/(3.1416*Length*....StandardParameters.Foot.Density))^0.5;
    
    AnyVar Ixx = 1/12 * Mass * (3*Radius^2 + Length^2);
    AnyVar Iyy = 0.5 * Mass * Radius^2;
    AnyVar Izz = Ixx;
    
    AnyMat33 JM = CenterNode.ARel*{{Iyy,0,0},{0,Ixx,0},{0,0,Izz}}*CenterNode.ARel';
    AnyFloat Jii = {JM[0][0], JM[1][1], JM[2][2]};
    AnyFloat Jij = {JM[1][0], JM[2][1], JM[2][0]};
    
    AnyDrawSurf DrwSurf = {
      FileName = ....AnySurfFolder+"/ProximalPhalange4";
      ScaleXYZ = {1.0, 1.0, .....Sign*1.0};
      RGB = Main.DrawSettings.Colors.Segments;
      AnyFunTransform3D &Scale =.Scale; 
      Opacity=1;
    };
    
    AnyRefNode MtPhalJoint = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0.0,1.0,0.0};};
      sRel = .Scale({-0.00371203, -0.052253, .....Sign*0.0387849});
      ARel = .CenterNode.ARel;
    };
    
    AnyRefNode RefDist = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0.0,1.0,0.0};};
      sRel = .Scale({-0.001343082, -0.07598902, .....Sign*0.04605937});
    };
    
    AnyRefNode RefProx = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0.0,1.0,0.0};};
      sRel = .Scale({0.00141203, -0.056253, .....Sign*0.0417849});
    };
    
    //Segment center node
    AnyRefNode CenterNode={
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,1,0};};
      sRel = 0.5*(.MtPhalJoint.sRel+.RefDist.sRel);
      ARel = RotMat(.MtPhalJoint.sRel,.RefDist.sRel,.RefProx.sRel);
    };
    
    AnyRefNode ProxPhalJoint = 
    {
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={1,0,0};};
      sRel = ..MiddlePhalange4.ProxPhalJoint.sRel;
      ARel = ..MiddlePhalange4.ProxPhalJoint.ARel;
      
    };
    
    
    //***********************
    //Muscles nodes
    //***********************
    
    AnyRefNode ExtensorDigitorumLongusViaNode13= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({0.002651, -0.0754736, .....Sign*0.04705616});
    };
    
    AnyRefNode FlexorDigitorumLongusViaNode16= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.008409728, -0.07458583, .....Sign*0.04537511});
    };
    
    //***********************
    //Ligaments nodes
    //***********************
    
    AnyRefNode LigAponeurosisPlantaris = 
    {
      //   AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1.0,1.0,0.0};};
      sRel = .Scale({-0.010898785, -0.06055018, .....Sign*0.04002751});
    };  
    
    
  }; // End of ProximalPhalanges4
  AnyRefNode MiddlePhalange4 = {
    sRel =.ProximalPhalange4.ProxPhalJoint.sRel*.ProximalPhalange4.ARel'+.ProximalPhalange4.sRel-ProxPhalJoint.sRel*ARel';
    
    AnyFunTransform3D &Scale = ....GeoScaling.MiddlePhalanges4.ScaleFunction; 
    AnyFunTransform3D &GeomScale =Scale;
    AnyRefNode AnatomicalFrame = {};
    AnyRefNode& ScalingNode=AnatomicalFrame ;
    /// For backwards compatability with AMMR 2.4 MoCap Marker protocols
    AnyRefNode& MoCapMarkerFrameAMMR24 = AnatomicalFrame;
    
    AnyVar MassS = ....MassScaling.Foot.MassScale;
    AnyVar MassStandard = ....StandardParameters.Foot.Mass*0.001188346;
    AnyVar Mass = MassS*MassStandard;
    
    //AnyDrawSeg Draw = {};
    AnyFloat sCoM = 0.5*(RefDist.sRel + ProxPhalJoint.sRel);
    //  JaboutCoMOnOff = On;
    
    AnyVar Length = vnorm(RefDist.sRel - ProxPhalJoint.sRel);
    AnyVar Radius = (Mass/(3.1416*Length*....StandardParameters.Foot.Density))^0.5;
    
    AnyVar Ixx = 1/12 * Mass * (3*Radius^2 + Length^2);
    AnyVar Iyy = 0.5 * Mass * Radius^2;
    AnyVar Izz = Ixx;
    
    AnyMat33 JM = CenterNode.ARel*{{Iyy,0,0},{0,Ixx,0},{0,0,Izz}}*CenterNode.ARel';
    AnyFloat Jii = {JM[0][0], JM[1][1], JM[2][2]};
    AnyFloat Jij = {JM[1][0], JM[2][1], JM[2][0]};
    
    AnyDrawSurf DrwSurf = {
      FileName = ....AnySurfFolder+"/MiddlePhalange4";
      ScaleXYZ = {1.0, 1.0, .....Sign*1.0};  
      RGB = Main.DrawSettings.Colors.Segments;
      AnyFunTransform3D &Scale =.Scale; 
      Opacity=1;
      
    };
    
    AnyRefNode ProxPhalJoint = 
    {
      AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={1,0,0};};
      sRel = .Scale({-0.0027960183, -0.07382266-0.003, .....Sign*0.0455907});
      ARel = .CenterNode.ARel;
    };
    
    AnyRefNode RefDist = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={1,0,0};};
      sRel = .Scale({-0.008519062, -0.08734421, .....Sign*0.04636958});
    };
    
    AnyRefNode RefProx = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={1,0,0};};
      sRel = .Scale({0.00146524, -0.07926898, .....Sign*0.0481871});
    };
    
    //Segment center node
    AnyRefNode CenterNode={
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,1,0};};
      sRel = 0.5*(.ProxPhalJoint.sRel+.RefDist.sRel);
      ARel = RotMat(.ProxPhalJoint.sRel,.RefDist.sRel,.RefProx.sRel);
    };
    
    AnyRefNode DistPhalJoint = 
    {
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = ..DistalPhalange4.DistPhalJoint.sRel;
      ARel = ..DistalPhalange4.DistPhalJoint.ARel;
    };
    
    //***********************
    //Muscles nodes
    //***********************
    
    AnyRefNode ExtensorDigitorumLongusViaNode14= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.003069028, -0.08662697, .....Sign*0.04718238});
    };
    
    AnyRefNode ExtensorDigitorumLongusNode= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({0.00146524, -0.07926898, .....Sign*0.0471871});
    };
    
    AnyRefNode FlexorDigitorumLongusViaNode17= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.013455604, -0.08522411, .....Sign*0.04647234});
    };
    
  }; // End of MiddlePhalanges4
  
  AnyRefNode DistalPhalange4 = {
    sRel=.MiddlePhalange4.DistPhalJoint.sRel*.MiddlePhalange4.ARel'+.MiddlePhalange4.sRel-DistPhalJoint.sRel*ARel';
    
    AnyFunTransform3D &Scale = ....GeoScaling.DistalPhalanges4.ScaleFunction;  
    AnyFunTransform3D &GeomScale =Scale;
    AnyRefNode AnatomicalFrame = {};
    AnyRefNode& ScalingNode=AnatomicalFrame ;
    /// For backwards compatability with AMMR 2.4 MoCap Marker protocols
    AnyRefNode& MoCapMarkerFrameAMMR24 = AnatomicalFrame;
    
    AnyVar MassS = ....MassScaling.Foot.MassScale;
    AnyVar MassStandard = ....StandardParameters.Foot.Mass*0.000541127;
    AnyVar Mass = MassS*MassStandard;
    
    //AnyDrawSeg Draw = {};
    AnyFloat sCoM = 0.5*(RefDist.sRel + DistPhalJoint.sRel);
    //  JaboutCoMOnOff = On;
    
    AnyVar Length = vnorm(RefDist.sRel - DistPhalJoint.sRel);
    AnyVar Radius = (Mass/(3.1416*Length*....StandardParameters.Foot.Density))^0.5;
    
    AnyVar Ixx = 1/12 * Mass * (3*Radius^2 + Length^2);
    AnyVar Iyy = 0.5 * Mass * Radius^2;
    AnyVar Izz = Ixx;
    
    AnyMat33 JM = CenterNode.ARel*{{Iyy,0,0},{0,Ixx,0},{0,0,Izz}}*CenterNode.ARel';
    AnyFloat Jii = {JM[0][0], JM[1][1], JM[2][2]};
    AnyFloat Jij = {JM[1][0], JM[2][1], JM[2][0]};
    
    AnyDrawSurf DrwSurf = {
      FileName = ....AnySurfFolder+"/DistalPhalange4";
      ScaleXYZ = {1.0, 1.0, .....Sign*1.0};
      RGB = Main.DrawSettings.Colors.Segments;
      AnyFunTransform3D &Scale =.Scale; 
      Opacity=1;
    };
    
    AnyRefNode DistPhalJoint = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = .Scale({-0.007880441, -0.08457409, .....Sign*0.04647917});
      ARel = .CenterNode.ARel;
    };
    
    AnyRefNode RefDist = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = .Scale({-0.01278651, -0.09533569, .....Sign*0.0466897});
    };
    
    AnyRefNode RefProx = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = .Scale({-0.003069028, -0.08662697, .....Sign*0.04918238});
    };
    
    //Segment center node
    AnyRefNode CenterNode={
      //     AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005}*2;RGB={0,1,0};};
      sRel = 0.5*(.DistPhalJoint.sRel+.RefDist.sRel);
      ARel = RotMat(.DistPhalJoint.sRel,.RefDist.sRel,.RefProx.sRel);
    };
    
    
    //***********************
    //Muscles nodes
    //***********************
    
    AnyRefNode ExtensorDigitorumLongusNode= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.005394551, -0.09145389, .....Sign*0.04734398});
    };
    
    AnyRefNode FlexorDigitorumLongusNode= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.01565704, -0.08984173, .....Sign*0.04657206});
    };
    
  }; // End of DistalPhalanges4
  
}; // End of Toe 4


//***********************
//         Toe 5
//***********************

AnySeg Toe5 = {
  Mass = ProximalPhalange5.Mass + MiddlePhalange5.Mass + DistalPhalange5.Mass;
  sCoM = (
          ProximalPhalange5.Mass*ProximalPhalange5.sCoM +
          MiddlePhalange5.Mass*MiddlePhalange5.sCoM +
          DistalPhalange5.Mass*DistalPhalange5.sCoM
         )/Mass;
  r0=.Midfoot.Metatarsal5.MtPhalJoint.sRel*.Midfoot.Metatarsal5.ARel'+.Midfoot.r0-ProximalPhalange5.MtPhalJoint.sRel*ProximalPhalange5.ARel';
  AnyRefNode CoM = {sRel =.sCoM;}; 
  Jii = EqInertia.Jii;
  Jij = EqInertia.Jij;
  JaboutCoMOnOff = On;
  
  AnyFolder EqInertia = {
    // Equivalent inertia is calculated using parallel axis theorem. Jii of constituent segments, expressed about their corresponding
    // CoM are translated to the CoM of the lumped segment using the formula: JiiNew = JiiCoM + mr^2
    // r vector is calculated as the difference between constituent segment CoM and lumped segment CoM.
    // m is the mass of the constituent segment.
    // JiiCoM is the Jii of the constituent segment about its own CoM
    // JiiNew is the Jii of the constituent segment about the CoM of the lumped segment.
          
    AnyFloat sRelPP5CoM = .ProximalPhalange5.sCoM-.sCoM;
    AnyFloat JMPP5T = .ProximalPhalange5.Mass*{{sRelPP5CoM[1]^2 + sRelPP5CoM[2]^2, -sRelPP5CoM[0]*sRelPP5CoM[1], -sRelPP5CoM[0]*sRelPP5CoM[2]},
                                         {-sRelPP5CoM[1]*sRelPP5CoM[0], sRelPP5CoM[2]^2 + sRelPP5CoM[0]^2, -sRelPP5CoM[1]*sRelPP5CoM[2]},
                                         {-sRelPP5CoM[2]*sRelPP5CoM[0], -sRelPP5CoM[2]*sRelPP5CoM[1], sRelPP5CoM[0]^2 + sRelPP5CoM[1]^2}};
    AnyFloat JMPP5CoM = .ProximalPhalange5.JM + JMPP5T;
    AnyFloat JiiPP5CoM = {JMPP5CoM[0][0], JMPP5CoM[1][1], JMPP5CoM[2][2]};
    AnyFloat JijPP5CoM = {JMPP5CoM[1][0], JMPP5CoM[2][1], JMPP5CoM[2][0]};
    
    AnyFloat sRelMP5CoM = .MiddlePhalange5.sCoM-.sCoM;
    AnyFloat JMMP5T = .MiddlePhalange5.Mass*{{sRelMP5CoM[1]^2 + sRelMP5CoM[2]^2, -sRelMP5CoM[0]*sRelMP5CoM[1], -sRelMP5CoM[0]*sRelMP5CoM[2]},
                                         {-sRelMP5CoM[1]*sRelMP5CoM[0], sRelMP5CoM[2]^2 + sRelMP5CoM[0]^2, -sRelMP5CoM[1]*sRelMP5CoM[2]},
                                         {-sRelMP5CoM[2]*sRelMP5CoM[0], -sRelMP5CoM[2]*sRelMP5CoM[1], sRelMP5CoM[0]^2 + sRelMP5CoM[1]^2}};
    AnyFloat JMMP5CoM = .MiddlePhalange5.JM + JMMP5T;
    AnyFloat JiiMP5CoM = {JMMP5CoM[0][0], JMMP5CoM[1][1], JMMP5CoM[2][2]};
    AnyFloat JijMP5CoM = {JMMP5CoM[1][0], JMMP5CoM[2][1], JMMP5CoM[2][0]};

    AnyFloat sRelDP5CoM = .DistalPhalange5.sCoM-.sCoM;
    AnyFloat JMDP5T = .DistalPhalange5.Mass*{{sRelDP5CoM[1]^2 + sRelDP5CoM[2]^2, -sRelDP5CoM[0]*sRelDP5CoM[1], -sRelDP5CoM[0]*sRelDP5CoM[2]},
                                         {-sRelDP5CoM[1]*sRelDP5CoM[0], sRelDP5CoM[2]^2 + sRelDP5CoM[0]^2, -sRelDP5CoM[1]*sRelDP5CoM[2]},
                                         {-sRelDP5CoM[2]*sRelDP5CoM[0], -sRelDP5CoM[2]*sRelDP5CoM[1], sRelDP5CoM[0]^2 + sRelDP5CoM[1]^2}};
    AnyFloat JMDP5CoM = .DistalPhalange5.JM + JMDP5T;
    AnyFloat JiiDP5CoM = {JMDP5CoM[0][0], JMDP5CoM[1][1], JMDP5CoM[2][2]};
    AnyFloat JijDP5CoM = {JMDP5CoM[1][0], JMDP5CoM[2][1], JMDP5CoM[2][0]};
    
    
    AnyFloat Jii = JiiPP5CoM + JiiMP5CoM + JiiDP5CoM;
    AnyFloat Jij = JijPP5CoM + JijMP5CoM + JijDP5CoM;
  };

  AnyRefNode ProximalPhalange5 = {
    //  r0=.Metatarsal5.MtPhalJoint.sRel*.Metatarsal5.Axes0'+.Metatarsal5.r0-MtPhalJoint.sRel*Axes0';
    
    AnyFunTransform3D &Scale = ....GeoScaling.ProximalPhalanges5.ScaleFunction;  
    AnyFunTransform3D &GeomScale =Scale;
    AnyRefNode AnatomicalFrame = {};
    AnyRefNode& ScalingNode=AnatomicalFrame ;
    /// For backwards compatability with AMMR 2.4 MoCap Marker protocols
    AnyRefNode& MoCapMarkerFrameAMMR24 = AnatomicalFrame;
    
    AnyVar MassS = ....MassScaling.Foot.MassScale;
    AnyVar MassStandard = ....StandardParameters.Foot.Mass*0.00440014;
    AnyVar Mass = MassS*MassStandard;
    
    //AnyDrawSeg Draw = {};
    AnyFloat sCoM = 0.5*(RefDist.sRel + MtPhalJoint.sRel);
    //  JaboutCoMOnOff = On;
    
    AnyVar Length = vnorm(RefDist.sRel - MtPhalJoint.sRel);
    AnyVar Radius = (Mass/(3.1416*Length*....StandardParameters.Foot.Density))^0.5;
    
    AnyVar Ixx = 1/12 * Mass * (3*Radius^2 + Length^2);
    AnyVar Iyy = 0.5 * Mass * Radius^2;
    AnyVar Izz = Ixx;
    
    AnyMat33 JM = CenterNode.ARel*{{Iyy,0,0},{0,Ixx,0},{0,0,Izz}}*CenterNode.ARel';
    AnyFloat Jii = {JM[0][0], JM[1][1], JM[2][2]};
    AnyFloat Jij = {JM[1][0], JM[2][1], JM[2][0]};
    
    AnyDrawSurf DrwSurf = {
      FileName = ....AnySurfFolder+"/ProximalPhalange5";
      ScaleXYZ = {1.0, 1.0, .....Sign*1.0};
      RGB = Main.DrawSettings.Colors.Segments;
      AnyFunTransform3D &Scale =.Scale; 
      Opacity=1;
      
    };
    
    AnyRefNode MtPhalJoint = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0.0,1.0,0.0};};
      sRel = .Scale({-0.00784451, -0.0350961, .....Sign*0.0532479});
      ARel = .CenterNode.ARel;
    };
    
    AnyRefNode RefDist = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0.0,1.0,0.0};};
      sRel = .Scale({-0.006638374, -0.06325011, .....Sign*0.05860036});
    };
    
    AnyRefNode RefProx = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0.0,1.0,0.0};};
      sRel = .Scale({-0.00484451, -0.0400961, .....Sign*0.0562479});
    };
    
    //Segment center node
    AnyRefNode CenterNode={
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,1,0};};
      sRel = 0.5*(.MtPhalJoint.sRel+.RefDist.sRel);
      ARel = RotMat(.MtPhalJoint.sRel,.RefDist.sRel,.RefProx.sRel);
    };
    
    AnyRefNode ProxPhalJoint = 
    {
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={1,0,0};};
      sRel = ..MiddlePhalange5.ProxPhalJoint.sRel;
      ARel = ..MiddlePhalange5.ProxPhalJoint.ARel;
      
    };
    
    //***********************
    //Muscles nodes
    //***********************
    
    AnyRefNode ExtensorDigitorumLongusViaNode16= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.002418618, -0.06236667, .....Sign*0.06261555});
    };
    
    AnyRefNode FlexorDigitorumLongusViaNode19= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.011552142, -0.06120244, .....Sign*0.05494571});
    };
    
    //***********************
    //Ligaments nodes
    //***********************
    
    AnyRefNode LigAponeurosisPlantaris = 
    {
      //   AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1.0,1.0,0.0};};
      sRel = .Scale({-0.01350584, -0.04699492, .....Sign*0.04993995});
    };  
    
    
  }; // End of ProximalPhalanges5
  
  AnyRefNode MiddlePhalange5 = {
    sRel=.ProximalPhalange5.ProxPhalJoint.sRel*.ProximalPhalange5.ARel'+.ProximalPhalange5.sRel-ProxPhalJoint.sRel*ARel';
    
    AnyFunTransform3D &Scale = ....GeoScaling.MiddlePhalanges5.ScaleFunction;  
    AnyFunTransform3D &GeomScale =Scale;
    AnyRefNode AnatomicalFrame = {};
    AnyRefNode& ScalingNode=AnatomicalFrame ;
    /// For backwards compatability with AMMR 2.4 MoCap Marker protocols
    AnyRefNode& MoCapMarkerFrameAMMR24 = AnatomicalFrame;
    
    AnyVar MassS = ....MassScaling.Foot.MassScale;
    AnyVar MassStandard = ....StandardParameters.Foot.Mass*0.000644255;
    AnyVar Mass = MassS*MassStandard;
    
    //AnyDrawSeg Draw = {};
    AnyFloat sCoM = 0.5*(RefDist.sRel + ProxPhalJoint.sRel);
    //  JaboutCoMOnOff = On;
    
    AnyVar Length = vnorm(RefDist.sRel - ProxPhalJoint.sRel);
    AnyVar Radius = (Mass/(3.1416*Length*....StandardParameters.Foot.Density))^0.5;
    
    AnyVar Ixx = 1/12 * Mass * (3*Radius^2 + Length^2);
    AnyVar Iyy = 0.5 * Mass * Radius^2;
    AnyVar Izz = Ixx;
    
    AnyMat33 JM = CenterNode.ARel*{{Iyy,0,0},{0,Ixx,0},{0,0,Izz}}*CenterNode.ARel';
    AnyFloat Jii = {JM[0][0], JM[1][1], JM[2][2]};
    AnyFloat Jij = {JM[1][0], JM[2][1], JM[2][0]};
    
    AnyDrawSurf DrwSurf = {
      FileName = ....AnySurfFolder+"/MiddlePhalange5";
      ScaleXYZ ={1.0, 1.0, .....Sign*1.0};
      RGB = Main.DrawSettings.Colors.Segments;
      AnyFunTransform3D &Scale =.Scale; 
      Opacity=1;
    };
    
    AnyRefNode ProxPhalJoint = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={1,0,0};};
      sRel = .Scale({-0.007358133, -0.06222843, .....Sign*0.05913591});
      ARel = .CenterNode.ARel;
    };
    
    AnyRefNode RefDist = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={1,0,0};};
      sRel = .Scale({-0.009230679, -0.06886453, .....Sign*0.0593412});
    };
    
    AnyRefNode RefProx = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={1,0,0};};
      sRel = .Scale({-0.003861642, -0.06663538, .....Sign*0.06283306});
    };
    
    //Segment center node
    AnyRefNode CenterNode={
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,1,0};};
      sRel = 0.5*(.ProxPhalJoint.sRel+.RefDist.sRel);
      ARel = RotMat(.ProxPhalJoint.sRel,.RefDist.sRel,.RefProx.sRel);
    };
    
    AnyRefNode DistPhalJoint = 
    {
      //  AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = ..DistalPhalange5.DistPhalJoint.sRel;
      ARel = ..DistalPhalange5.DistPhalJoint.ARel;
    };
    
    
    //***********************
    //Muscles nodes
    //***********************
    
    AnyRefNode ExtensorDigitorumLongusViaNode17= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.003813683, -0.06775461, .....Sign*0.06296785});
    };
    
    AnyRefNode ExtensorDigitorumLongusNode= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.003861642, -0.06663538, .....Sign*0.06283306});
    };
    
    AnyRefNode FlexorDigitorumLongusViaNode20= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.012477285, -0.06599057, .....Sign*0.0557292});
    };
    
  }; // End of MiddlePhalanges5
  
  
  AnyRefNode DistalPhalange5 = {
    sRel=.MiddlePhalange5.DistPhalJoint.sRel*.MiddlePhalange5.ARel'+.MiddlePhalange5.sRel-DistPhalJoint.sRel*ARel';
    
    AnyFunTransform3D &Scale = ....GeoScaling.DistalPhalanges5.ScaleFunction;  
    AnyFunTransform3D &GeomScale =Scale;
    AnyRefNode AnatomicalFrame = {};
    AnyRefNode& ScalingNode=AnatomicalFrame ;
    /// For backwards compatability with AMMR 2.4 MoCap Marker protocols
    AnyRefNode& MoCapMarkerFrameAMMR24 = AnatomicalFrame;
    
    AnyVar MassS = ....MassScaling.Foot.MassScale;
    AnyVar MassStandard = ....StandardParameters.Foot.Mass*0.000520976;
    AnyVar Mass = MassS*MassStandard;
    
    //AnyDrawSeg Draw = {};
    AnyFloat sCoM = 0.5*(RefDist.sRel + DistPhalJoint.sRel);
    //  JaboutCoMOnOff = On;
    
    AnyVar Length = vnorm(RefDist.sRel - DistPhalJoint.sRel);
    AnyVar Radius = (Mass/(3.1416*Length*....StandardParameters.Foot.Density))^0.5;
    
    AnyVar Ixx = 1/12 * Mass * (3*Radius^2 + Length^2);
    AnyVar Iyy = 0.5 * Mass * Radius^2;
    AnyVar Izz = Ixx;
    
    AnyMat33 JM = CenterNode.ARel*{{Iyy,0,0},{0,Ixx,0},{0,0,Izz}}*CenterNode.ARel';
    AnyFloat Jii = {JM[0][0], JM[1][1], JM[2][2]};
    AnyFloat Jij = {JM[1][0], JM[2][1], JM[2][0]};
    
    AnyDrawSurf DrwSurf = {
      FileName = ....AnySurfFolder+"/DistalPhalange5";
      ScaleXYZ = {1.0, 1.0, .....Sign*1.0};
      RGB = Main.DrawSettings.Colors.Segments;
      AnyFunTransform3D &Scale =.Scale; 
      Opacity=1;
    };
    
    AnyRefNode DistPhalJoint = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = .Scale({-0.009056971, -0.06675649, .....Sign*0.05883433});
      ARel = .CenterNode.ARel;
    };
    
    AnyRefNode RefDist = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = .Scale({-0.01316917, -0.0758413, .....Sign*0.05632038});
    };
    
    AnyRefNode RefProx = 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,0,1};};
      sRel = .Scale({-0.00686618, -0.07157046, .....Sign*0.06129555});
    };
    
    //Segment center node
    AnyRefNode CenterNode={
      //    AnyDrawRefFrame drw={ScaleXYZ={0.005,0.005,0.005};RGB={0,1,0};};
      sRel = 0.5*(.DistPhalJoint.sRel+.RefDist.sRel);
      ARel = RotMat(.DistPhalJoint.sRel,.RefDist.sRel,.RefProx.sRel);
    };
    
    //***********************
    //Muscles nodes
    //***********************
    
    AnyRefNode ExtensorDigitorumLongusNode= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.00686618, -0.07357046, .....Sign*0.06129555});
    };
    
    AnyRefNode FlexorDigitorumLongusNode= 
    {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={0,0,0};};
      sRel = .Scale({-0.014865597, -0.06998953, .....Sign*0.05481513});
    };
    
  }; // End of DistalPhalanges5
  
}; // End of Toe5


