//This file adds ellipsoids and contact segments for the intertarsal contact.

//The gliding joints take away 3 dof among the following:
//- navicular medialcuneiform abduction
//- navicular intermediatecuneiform abduction
//- navicular lateralcuneiform abduction
//- calcaneus cuboid abduction

//One of those four dof have to be driven, the three others are handled by the contact definition.



AnyFolder IntertarsalGlidingJoints = {
  
  AnyFolder &Seg = ...Seg.Foot;
  #define SimplifiedContact
  
  
  
  
  #ifdef SimplifiedContact
  
  
  
  
  //round version
  Seg.MedialCuneiform = {
    
    AnyRefNode EllipsoidNodeDorsal = {
      sRel = .Scale({0.03726055, -0.006417992, ......Sign*-0.00888518});
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
    };
    
    AnyRefNode EllipsoidNodeProximal = {
      sRel = .Scale({0.02454242, 0.01431341, ......Sign*-0.01097702});
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
    };
    
    AnyRefNode EllipsoidNodeLateral = {
      sRel = .Scale({0.0243125, -0.002428305, ......Sign*-0.0010772021});
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
    };
    
    AnyRefNode EllipsoidNode = {
      sRel = .Scale({0.02374927, -0.002738375, ......Sign*-0.007224994});
      ARel = RotMat(sRel, .EllipsoidNodeDorsal.sRel, .EllipsoidNodeProximal.sRel);
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
      AnySurfEllipsoid ContactEllipsoid = 
      {
        AnyVar Rx = vnorm(..EllipsoidNodeDorsal.sRel - .sRel);
        AnyVar Ry = vnorm(..EllipsoidNodeProximal.sRel - .sRel);
        AnyVar Rz = vnorm(..EllipsoidNodeLateral.sRel - .sRel);
        
        Radius = {Rx, Ry, Rz};
        AnyDrawParamSurf Draw = 
        {
          Visible = On;
          Opacity = 0.5;
        };
      };
    };
  };
  
  
  Seg.IntermediateCuneiform = {
    
    AnyRefNode EllipsoidNodeDorsal1 = {
      sRel = .Scale({0.03838044, -0.0020309633, ......Sign*-0.003424041});
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
    };
    
    AnyRefNode EllipsoidNodeProximal1 = {
      sRel = .Scale({0.02902985, 0.01286101, ......Sign*-0.004094043});
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
    };
    
    AnyRefNode EllipsoidNodeLateral1 = {
      sRel = .Scale({0.02850497, 0.002148111, ......Sign*0.001578479});
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
    };
    
    AnyRefNode EllipsoidNode1 = {
      sRel = .Scale({0.02750497, 0.001148111, ......Sign*-0.000078479});
      ARel = RotMat(sRel, .EllipsoidNodeDorsal1.sRel, .EllipsoidNodeProximal1.sRel);
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
      AnySurfEllipsoid ContactEllipsoid = 
      {
        AnyVar Rx = vnorm(..EllipsoidNodeDorsal1.sRel - .sRel);
        AnyVar Ry = vnorm(..EllipsoidNodeProximal1.sRel - .sRel);
        AnyVar Rz = vnorm(..EllipsoidNodeLateral1.sRel - .sRel);
        
        Radius = {Rx, Ry, Rz};
        AnyDrawParamSurf Draw = 
        {
          Visible = On;
          Opacity = 0.5;
        };
      };
    };
    
    AnyRefNode EllipsoidNodeDorsal2 = {
      sRel = .Scale({0.03801409, 0.002696922, ......Sign*0.01409074});
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
    };
    
    AnyRefNode EllipsoidNodeProximal2 = {
      sRel = .Scale({0.03301353, 0.01377631, ......Sign*0.008561723});
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
    };
    
    AnyRefNode EllipsoidNodeLateral2 = {
      sRel = .Scale({0.0261944, 0.004923853, ......Sign*0.011191541});
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
    };
    
    AnyRefNode EllipsoidNode2 = {
      sRel = .Scale({0.0271944, 0.003923853, ......Sign*0.009191541});
      ARel = RotMat(sRel, .EllipsoidNodeDorsal2.sRel, .EllipsoidNodeProximal2.sRel);
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
      AnySurfEllipsoid ContactEllipsoid = 
      {
        AnyVar Rx = vnorm(..EllipsoidNodeDorsal2.sRel - .sRel);
        AnyVar Ry = vnorm(..EllipsoidNodeProximal2.sRel - .sRel);
        AnyVar Rz = vnorm(..EllipsoidNodeLateral2.sRel - .sRel);
        
        Radius = {Rx, Ry, Rz};
        AnyDrawParamSurf Draw = 
        {
          Visible = On;
          Opacity = 0.5;
        };
      };
    };
  };
  
  
  
  
  //round version
  Seg.LateralCuneiform = {
    
    AnyRefNode EllipsoidNodeDorsal = {
      sRel = .Scale({0.0354965, 0.005603182, ......Sign*0.01801589});
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
    };
    
    AnyRefNode EllipsoidNodeProximal = {
      sRel = .Scale({0.02778995, 0.02006792, ......Sign*0.009332976});
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
    };
    
    AnyRefNode EllipsoidNodeLateral = {
      sRel = .Scale({0.02295879, 0.008831586, ......Sign*0.01601319});
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
    };
    
    AnyRefNode EllipsoidNode = {
      sRel = .Scale({0.02355879, 0.007831586, ......Sign*0.01301319});
      ARel = RotMat(sRel, .EllipsoidNodeDorsal.sRel, .EllipsoidNodeProximal.sRel);
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
      AnySurfEllipsoid ContactEllipsoid = 
      {
        AnyVar Rx = vnorm(..EllipsoidNodeDorsal.sRel - .sRel);
        AnyVar Ry = vnorm(..EllipsoidNodeProximal.sRel - .sRel);
        AnyVar Rz = vnorm(..EllipsoidNodeLateral.sRel - .sRel);
        
        Radius = {Rx, Ry, Rz};
        AnyDrawParamSurf Draw = 
        {
          Visible = On;
          Opacity = 0.5;
        };
      };
    };
    
    AnyRefNode EllipsoidNode2 = {
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
      sRel = .Scale({0.01524647, 0.008693984, ......Sign*0.01752757});
    };
  };
  
  
  
  
  
  
  
  
  AnySeg ContactSeg1 = 
  {
    r0 = .Seg.MedialCuneiform.r0 + .Seg.MedialCuneiform.EllipsoidNodeLateral.sRel *.Seg.MedialCuneiform.Axes0';
    Axes0 = .Seg.MedialCuneiform.Axes0*.Seg.MedialCuneiform.EllipsoidNode.ARel*RotMat(pi/2-....Sign*pi/2,x);
    Mass = 0;
    Jii = {0, 0, 0};
    
    AnyVar L = 0.004;  //length of the side of the triangle
    
    AnyRefNode n1={  
      sRel={-0.5*.L*sin(60*pi/180),0.5*.L,0};
      //         AnyDrawRefFrame  drw={RGB={0,1,0};ScaleXYZ=0.2*{0.05,0.05,0.05};};
    };
    AnyRefNode n2={  
      sRel={0.5*.L*sin(60*pi/180),0,0};
      //         AnyDrawRefFrame  drw={RGB={0,1,0};ScaleXYZ=0.2*{0.05,0.05,0.05};};
    };
    AnyRefNode n3={  
      sRel={-0.5*.L*sin(60*pi/180),-0.5*.L,0};
      //          AnyDrawRefFrame  drw={RGB={0,1,0};ScaleXYZ=0.2*{0.05,0.05,0.05};};
    };
  };
  
  
  
  AnyKinEqSimpleDriver ContactSeg1Driver = {
    
    AnyKinPointSurface Ellipsoid_n1 =     {
      AnySurfEllipsoid &EllipRef = ..Seg.IntermediateCuneiform.EllipsoidNode1.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg1.n1;
      NormedMeasureOnOff =Off;
      
    };
    AnyKinPointSurface Ellipsoid_n2=     {
      AnySurfEllipsoid &EllipRef =..Seg.IntermediateCuneiform.EllipsoidNode1.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg1.n2;
      NormedMeasureOnOff =Off;
      
    };
    AnyKinPointSurface Ellipsoid_n3=     {
      AnySurfEllipsoid &EllipRef = ..Seg.IntermediateCuneiform.EllipsoidNode1.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg1.n3;
      NormedMeasureOnOff =Off;
      
    };
    
    
    
    
    AnyKinMeasureOrg RotZ = {
      MeasureOrganizer = {0};
      AnyKinRotational Rot = 
      {
        Type = RotAxesAngles;
        Axis1 = z;
        Axis2 = y;
        Axis3 = x;
        AnyRefFrame &Ref2 = ...ContactSeg1;
        AnyRefFrame &Ref1 = ...Seg.IntermediateCuneiform.EllipsoidNode1;
      };
    };
    
    DriverPos={0,0,0,0};
    DriverVel ={0,0,0,0};
    Reaction.Type={Off,Off,Off,Off};
    Reaction ={#include "DrawForceInJoint.any"};
    
    
  };
  
  
  
  
  AnyKinEqSimpleDriver ContactSeg1Driver2 = {
    
    AnyKinPointSurface Ellipsoid_n1 =     {
      AnySurfEllipsoid &EllipRef = ..Seg.MedialCuneiform.EllipsoidNode.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg1.n1;
      NormedMeasureOnOff =Off;
    };
    AnyKinPointSurface Ellipsoid_n2=     {
      AnySurfEllipsoid &EllipRef =..Seg.MedialCuneiform.EllipsoidNode.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg1.n2;
      NormedMeasureOnOff =Off;
      
    };
    AnyKinPointSurface Ellipsoid_n3=     {
      AnySurfEllipsoid &EllipRef = ..Seg.MedialCuneiform.EllipsoidNode.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg1.n3;
      NormedMeasureOnOff =Off;
      
    };
    
    DriverPos={0,0,0};
    DriverVel ={0,0,0};
    Reaction.Type={Off,Off,Off};
    Reaction ={#include "DrawForceInJoint.any"};
    
  };
  
  
  //let one side carry entirely
  AnyReacForce ContactSeg1Support = {
    AnyKinMeasureOrg MeasureOrg = {
      MeasureOrganizer = {0,1,2,3,4,5};
      AnyKinLinear Lin = 
      {
        Ref = 0;
        AnyRefFrame &Ref1 = ...ContactSeg1;
        AnyRefFrame &Ref2 = ...Seg.IntermediateCuneiform.EllipsoidNode1;
      };
      AnyKinRotational Rot = 
      {
        Type = RotAxesAngles;
        Axis1 = z;
        Axis2 = y;
        Axis3 = x;
        AnyRefFrame &Ref1 = ...ContactSeg1;
        AnyRefFrame &Ref2 = ...Seg.IntermediateCuneiform.EllipsoidNode1;
      };
    };
    #include "DrawForceInJoint.any"
    
  };
  
  
  
  AnyFolder Contact_ContactSeg1Driver2 ={
    AnyGeneralMuscle mus1 =  {
      AnyKinPointSurface &ref =..ContactSeg1Driver2.Ellipsoid_n1; 
      ForceDirection = 1;
      AnyMuscleModel Model = { F0 = 1000; };
      #include "DrawForceInJoint.any" 
    };
    AnyGeneralMuscle mus2 =  {
      AnyKinPointSurface &ref =..ContactSeg1Driver2.Ellipsoid_n2; 
      ForceDirection = 1;
      AnyMuscleModel Model = { F0 = 1000; };
      #include "DrawForceInJoint.any"
    };
    AnyGeneralMuscle mus3 =  {
      AnyKinPointSurface &ref =..ContactSeg1Driver2.Ellipsoid_n3; 
      ForceDirection = 1;
      AnyMuscleModel Model = { F0=1000; };
      #include "DrawForceInJoint.any"
    };
    
  };
  
  
  
  
  
  AnySeg ContactSeg2 = 
  {
    r0 = .Seg.IntermediateCuneiform.r0 + .Seg.IntermediateCuneiform.EllipsoidNodeLateral2.sRel *.Seg.IntermediateCuneiform.Axes0';
    Axes0 = .Seg.IntermediateCuneiform.Axes0*.Seg.IntermediateCuneiform.EllipsoidNode2.ARel*RotMat(pi/2-....Sign*pi/2,x);
    Mass = 0;
    Jii = {0, 0, 0};
    
    AnyVar L = 0.002;  //length of the side of the triangle
    
    AnyRefNode n1={  
      sRel={-0.5*.L*sin(60*pi/180),0.5*.L,0};
      //         AnyDrawRefFrame  drw={RGB={0,1,0};ScaleXYZ=0.2*{0.05,0.05,0.05};};
    };
    AnyRefNode n2={  
      sRel={0.5*.L*sin(60*pi/180),0,0};
      //         AnyDrawRefFrame  drw={RGB={0,1,0};ScaleXYZ=0.2*{0.05,0.05,0.05};};
    };
    AnyRefNode n3={  
      sRel={-0.5*.L*sin(60*pi/180),-0.5*.L,0};
      //          AnyDrawRefFrame  drw={RGB={0,1,0};ScaleXYZ=0.2*{0.05,0.05,0.05};};
    };
  };
  
  
  
  AnyKinEqSimpleDriver ContactSeg2Driver = {
    
    
    AnyKinPointSurface Ellipsoid_n1 =     {
      AnySurfEllipsoid &EllipRef = ..Seg.IntermediateCuneiform.EllipsoidNode2.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg2.n1;
      NormedMeasureOnOff =Off;
      
    };
    AnyKinPointSurface Ellipsoid_n2=     {
      AnySurfEllipsoid &EllipRef =..Seg.IntermediateCuneiform.EllipsoidNode2.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg2.n2;
      NormedMeasureOnOff =Off;
      
    };
    AnyKinPointSurface Ellipsoid_n3=     {
      AnySurfEllipsoid &EllipRef = ..Seg.IntermediateCuneiform.EllipsoidNode2.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg2.n3;
      NormedMeasureOnOff =Off;
    };
    
    AnyKinMeasureOrg RotZ = {
      MeasureOrganizer = {0};
      AnyKinRotational Rot = 
      {
        Type = RotAxesAngles;
        Axis1 = z;
        Axis2 = y;
        Axis3 = x;
        AnyRefFrame &Ref1 = ...Seg.IntermediateCuneiform.EllipsoidNode2;
        AnyRefFrame &Ref2 = ...ContactSeg2;
      };
    };
    
    DriverPos={0,0,0,0};
    DriverVel ={0,0,0,0};
    Reaction.Type={Off,Off,Off,Off};
    Reaction ={#include "DrawForceInJoint.any"};
  };
  
  AnyKinEqSimpleDriver ContactSeg2Driver2 = {
    AnyKinPointSurface Ellipsoid_n1 =     {
      AnySurfEllipsoid &EllipRef = ..Seg.LateralCuneiform.EllipsoidNode.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg2.n1;
      NormedMeasureOnOff =Off;
      
    };
    AnyKinPointSurface Ellipsoid_n2=     {
      AnySurfEllipsoid &EllipRef =..Seg.LateralCuneiform.EllipsoidNode.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg2.n2;
      NormedMeasureOnOff =Off;
    };
    AnyKinPointSurface Ellipsoid_n3=     {
      AnySurfEllipsoid &EllipRef = ..Seg.LateralCuneiform.EllipsoidNode.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg2.n3;
      NormedMeasureOnOff =Off;
    };
    
    DriverPos={0,0,0};
    DriverVel ={0,0,0};
    Reaction.Type={Off,Off,Off};
    Reaction ={#include "DrawForceInJoint.any"};
  };
  
  
  AnyReacForce ContactSeg2Support = {
    AnyKinMeasureOrg MeasureOrg = {
      MeasureOrganizer = {0,1,2,3,4,5};
      AnyKinLinear Lin = 
      {
        Ref = 0;
        AnyRefFrame &Ref1 = ...ContactSeg2;
        AnyRefFrame &Ref2 = ...Seg.IntermediateCuneiform.EllipsoidNode2;
      };
      AnyKinRotational Rot = 
      {
        Type = RotAxesAngles;
        Axis1 = z;
        Axis2 = y;
        Axis3 = x;
        AnyRefFrame &Ref1 = ...ContactSeg2;
        AnyRefFrame &Ref2 = ...Seg.IntermediateCuneiform.EllipsoidNode2;
      };
    };
    #include "DrawForceInJoint.any"
    
  };
  
  
  AnyFolder Contact_ContactSeg2Driver2 ={
    AnyGeneralMuscle mus1 =  {
      AnyKinPointSurface &ref =..ContactSeg2Driver2.Ellipsoid_n1; 
      ForceDirection = 1;
      AnyMuscleModel Model = { F0=1000; };
      #include "DrawForceInJoint.any" };
    AnyGeneralMuscle mus2 =  {
      AnyKinPointSurface &ref =..ContactSeg2Driver2.Ellipsoid_n2; 
      ForceDirection = 1;
      AnyMuscleModel Model = { F0=1000; };
      #include "DrawForceInJoint.any" };
    AnyGeneralMuscle mus3 =  {
      AnyKinPointSurface &ref =..ContactSeg2Driver2.Ellipsoid_n3; 
      ForceDirection = 1;
      AnyMuscleModel Model = { F0=1000; };
      #include "DrawForceInJoint.any"};
    
  };
  
  Seg.Navicular = {
    AnyRefNode EllipsoidNode = {
      sRel = .Scale({0.02879977, 0.03029272, ......Sign*0.005409719});
      ARel = ...NaviCuneiEllipsoidDummySeg.EllipsoidNode.ARel;
    };
  };
  
  
  
  
  AnySeg NaviCuneiEllipsoidDummySeg = 
  {
    //AnyDrawRefFrame drw = {ScaleXYZ = 0.02*{1,1,1};};
    AnyFunTransform3D &Scale = ....GeoScaling.Foot.ScaleFunction;
    //    r0 = .Seg.Navicular.r0 + .Seg.Navicular.EllipsoidNode.sRel *.Seg.Navicular.Axes0' - JointNode.sRel*Axes0';
    //    Axes0 = RotMat(.Seg.Navicular.r0 + .Seg.Navicular.EllipsoidNode.sRel *.Seg.Navicular.Axes0', .Seg.Navicular.r0 + .Seg.Navicular.EllipsoidNode.sRel *.Seg.Navicular.Axes0'+{1,0,0}*.Seg.Navicular.Axes0', .Seg.LateralCuneiform.r0 + .Seg.LateralCuneiform.EllipsoidNode2.sRel *.Seg.LateralCuneiform.Axes0') * RotMat(pi,x);
    r0 = .Seg.Navicular.r0;
    Axes0 = .Seg.Navicular.Axes0;
    Mass = 0;
    Jii = {0, 0, 0};
    
    AnyRefNode JointNode = {
      sRel = ..Seg.Navicular.EllipsoidNode.sRel;
      ARel = .EllipsoidNode.ARel;
      //AnyDrawRefFrame drw = {ScaleXYZ = 0.02*{1,1,1};};
    };
    
    AnyRefNode EllipsoidNodeProximal = {
      sRel = .Scale({0.028, 0.028, .....Sign*0.014});
      //AnyDrawRefFrame drw = {ScaleXYZ = 0.02*{1,1,1};};
    };
    
    AnyRefNode EllipsoidNodeLateral = {
      sRel = .Scale({0.018, 0.016, .....Sign*0.018});
      //AnyDrawRefFrame drw = {ScaleXYZ = 0.02*{1,1,1};};
    };
    
    AnyRefNode EllipsoidNodeDorsal = {
      sRel = .Scale({0.025, 0.012, .....Sign*0.027});
      //AnyDrawRefFrame drw = {ScaleXYZ = 0.02*{1,1,1};};
    };
    
    AnyRefNode EllipsoidNode = {
      sRel = .Scale({0.02, 0.015, .....Sign*0.017});
      ARel = RotMat(sRel, .EllipsoidNodeDorsal.sRel, .EllipsoidNodeProximal.sRel);
      //AnyDrawRefFrame drw = {ScaleXYZ = 0.02*{1,1,1};};
      AnySurfEllipsoid ContactEllipsoid = 
      {
        AnyVar Rx = vnorm(..EllipsoidNodeDorsal.sRel - .sRel);
        AnyVar Ry = vnorm(..EllipsoidNodeProximal.sRel - .sRel);
        AnyVar Rz = vnorm(..EllipsoidNodeLateral.sRel - .sRel);
        
        Radius = {Rx, Ry, Rz};
        AnyDrawParamSurf Draw = 
        {
          Visible = On;
          Opacity = 0.5;
        };
      };
    };
  };
  
  
  
  
  AnyUniversalJoint NaviCuneiEllipsoidDummySegJoint =   {
    Axis1 = x;
    Axis2 = z;
    AnyRefFrame &Navicular = .Seg.Navicular.EllipsoidNode;
    AnyRefFrame &DummySeg = .NaviCuneiEllipsoidDummySeg.JointNode;
    Constraints.Reaction ={#include "DrawForceInJoint.any"};
  };
  
  AnyKinEq NaviCuneiEllipsoidDummySegDriver = {
    AnyKinMeasureOrg MeasureOrg = {
      MeasureOrganizer = {0,2};
      AnyKinLinear Lin = 
      {
        Ref = 0;
        AnyRefFrame &DummySeg = ...NaviCuneiEllipsoidDummySeg.EllipsoidNode;
        AnyRefFrame &LatCuneiform = ...Seg.LateralCuneiform.EllipsoidNode2;
      };
    };
    Reaction.Type = {On, On};
    Reaction ={#include "DrawForceInJoint.any"};
  };
  
  
  
  //Round ellipsoid covering the whole bone, works better.
  Seg.Cuboid = {
    
    AnyRefNode EllipsoidNodeDorsal = {
      sRel = .Scale({0.02428825, 0.02301223, ......Sign*0.02806874});
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
    };
    
    AnyRefNode EllipsoidNodeProximal = {
      sRel = .Scale({0.02148359, 0.03896137, ......Sign*0.01760742});
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
    };
    
    AnyRefNode EllipsoidNodeLateral = {
      sRel = .Scale({0.01304376, 0.03204903, ......Sign*0.03281608});
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
    };
    
    AnyRefNode EllipsoidNode = {
      sRel = .Scale({0.01445013, 0.02682298, ......Sign*0.02383074});
      ARel = RotMat(sRel, .EllipsoidNodeDorsal.sRel, .EllipsoidNodeProximal.sRel);
      //AnyDrawRefFrame drw={ScaleXYZ={0.01,0.01,0.01};RGB={1,0,0};};
      AnySurfEllipsoid ContactEllipsoid = 
      {
        AnyVar Rx = vnorm(..EllipsoidNodeDorsal.sRel - .sRel);
        AnyVar Ry = vnorm(..EllipsoidNodeProximal.sRel - .sRel);
        AnyVar Rz = vnorm(..EllipsoidNodeLateral.sRel - .sRel);
        
        Radius = {Rx, Ry, Rz};
        AnyDrawParamSurf Draw = 
        {
          Visible = On;
          Opacity = 0.5;
        };
      };
    };
  };
  
  
  AnySeg ContactSeg3 = 
  {
    r0 = .NaviCuneiEllipsoidDummySeg.r0 + .NaviCuneiEllipsoidDummySeg.EllipsoidNodeLateral.sRel *.NaviCuneiEllipsoidDummySeg.Axes0';
    Axes0 = .NaviCuneiEllipsoidDummySeg.Axes0*.NaviCuneiEllipsoidDummySeg.EllipsoidNode.ARel*RotMat(pi/2-....Sign*pi/2,x);
    
    //    r0 = .Seg.Cuboid.r0 + (.Seg.Cuboid.EllipsoidNode.sRel + {0,0, -....Sign*.Seg.Cuboid.EllipsoidNode.ContactEllipsoid.Rz}) *.Seg.Cuboid.Axes0';
    //    Axes0 = .Seg.Cuboid.Axes0*RotMat(pi/2-....Sign*pi/2,x);
    Mass = 0;
    Jii = {0, 0, 0};
    
    AnyVar L = 0.002;  //length of the side of the triangle
    
    AnyRefNode n1={  
      sRel={-0.5*.L*sin(60*pi/180),0.5*.L,0};
      AnyDrawRefFrame  drw={RGB={0,1,0};ScaleXYZ=0.2*{0.05,0.05,0.05};};
    };
    AnyRefNode n2={  
      sRel={0.5*.L*sin(60*pi/180),0,0};
      AnyDrawRefFrame  drw={RGB={0,1,0};ScaleXYZ=0.2*{0.05,0.05,0.05};};
    };
    AnyRefNode n3={  
      sRel={-0.5*.L*sin(60*pi/180),-0.5*.L,0};
      AnyDrawRefFrame  drw={RGB={0,1,0};ScaleXYZ=0.2*{0.05,0.05,0.05};};
    };
  };
  
  
  
  AnyKinEqSimpleDriver ContactSeg3Driver = {
    
    
    
    AnyKinPointSurface Ellipsoid_n1 =     {
      AnySurfEllipsoid &EllipRef = ..Seg.Cuboid.EllipsoidNode.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg3.n1;
      NormedMeasureOnOff =Off;
      
    };
    AnyKinPointSurface Ellipsoid_n2=     {
      AnySurfEllipsoid &EllipRef =..Seg.Cuboid.EllipsoidNode.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg3.n2;
      NormedMeasureOnOff =Off;
      
    };
    AnyKinPointSurface Ellipsoid_n3=     {
      AnySurfEllipsoid &EllipRef = ..Seg.Cuboid.EllipsoidNode.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg3.n3;
      NormedMeasureOnOff =Off;
      
    };
    
    
    
    
    
    AnyKinMeasureOrg RotZ = {
      MeasureOrganizer = {0};
      AnyKinRotational Rot = 
      {
        Type = RotAxesAngles;
        Axis1 = z;
        Axis2 = y;
        Axis3 = x;
        AnyRefFrame &Ref1 = ...Seg.Cuboid.EllipsoidNode;
        AnyRefFrame &Ref2 = ...ContactSeg3;
      };
    };
    
    DriverPos={0,0,0,0};
    DriverVel ={0,0,0,0};
    Reaction.Type={Off,Off,Off,Off};
    // #include "DrawForceInJoint.any"
    
  };
  
  
  
  AnyKinEqSimpleDriver ContactSeg3Driver2 = {
    
    AnyKinPointSurface Ellipsoid_n1 =     {
      AnySurfEllipsoid &EllipRef = ..NaviCuneiEllipsoidDummySeg.EllipsoidNode.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg3.n1;
      NormedMeasureOnOff =Off;
      
    };
    AnyKinPointSurface Ellipsoid_n2=     {
      AnySurfEllipsoid &EllipRef =..NaviCuneiEllipsoidDummySeg.EllipsoidNode.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg3.n2;
      NormedMeasureOnOff =Off;
      
    };
    AnyKinPointSurface Ellipsoid_n3=     {
      AnySurfEllipsoid &EllipRef = ..NaviCuneiEllipsoidDummySeg.EllipsoidNode.ContactEllipsoid ;
      AnyRefFrame &Seg1 = ..ContactSeg3.n3;
      NormedMeasureOnOff =Off;
      
    };
    
    
    
    
    DriverPos={0,0,0};
    DriverVel ={0,0,0};
    Reaction.Type={Off,Off,Off};
    Reaction ={#include "DrawForceInJoint.any"};
    
  };
  
  AnyReacForce ContactSeg3Support = {
    AnyKinMeasureOrg MeasureOrg = {
      MeasureOrganizer = {0,1,2,3,4,5};
      AnyKinLinear Lin = 
      {
        Ref = 0;
        AnyRefFrame &Ref1 = ...ContactSeg3;
        AnyRefFrame &Ref2 = ...Seg.Cuboid.EllipsoidNode;
      };
      AnyKinRotational Rot = 
      {
        Type = RotAxesAngles;
        Axis1 = z;
        Axis2 = y;
        Axis3 = x;
        AnyRefFrame &Ref1 = ...ContactSeg3;
        AnyRefFrame &Ref2 = ...Seg.Cuboid.EllipsoidNode;
      };
    };
    // #include "DrawForceInJoint.any"
  };
  
  
  AnyFolder Contact_ContactSeg3Driver2 ={
    AnyGeneralMuscle mus1 =  {
      AnyKinPointSurface &ref =..ContactSeg3Driver2.Ellipsoid_n1; 
      ForceDirection = 1;
      AnyMuscleModel Model = { F0=1000; };
      #include "DrawForceInJoint.any" };
    AnyGeneralMuscle mus2 =  {
      AnyKinPointSurface &ref =..ContactSeg3Driver2.Ellipsoid_n2; 
      ForceDirection = 1;
      AnyMuscleModel Model = { F0=1000; };
      #include "DrawForceInJoint.any" };
    AnyGeneralMuscle mus3 =  {
      AnyKinPointSurface &ref =..ContactSeg3Driver2.Ellipsoid_n3; 
      ForceDirection = 1;
      AnyMuscleModel Model = { F0=1000; };
      #include "DrawForceInJoint.any"};
    
  };
  
  #endif
  
  
  #undef SimplifiedContact
  
  
  
};//IntertarsalGlidingJoints


  
  
  
  
  
  
  
  
  
  
  




