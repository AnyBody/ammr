
/**^This folder implements the muscle models for the TLEM model.
Anatomical muscles from the TLEM data set are in many cases split into 
several branches (elements). Strength parameters are split between the branches, 
typically by uniform split.

Different morphologies of TLEM model are implemented in this file, 
please refer to the file for details.
*/


AnyVar StrengthScaleShank = .StrengthScaling.Shank.StrengthScale;
AnyVar StrengthScaleThigh = .StrengthScaling.Thigh.StrengthScale;
AnyVar StrengthScalePelvis = .Scaling.StrengthScaling.Pelvis.StrengthScale;
AnyVar FiberLengthScaleShank = .FiberLengthScaling.Shank.FiberLengthScale;
AnyVar FiberLengthScaleThigh = .FiberLengthScaling.Thigh.FiberLengthScale;
AnyVar FiberLengthScalePelvis = .Scaling.FiberLengthScaling.Pelvis.FiberLengthScale;


AnyVar PCSAfactor = 90*.....HumanModel.StrengthParameters.StrengthIndexLeg; // = PCSAfactor in N/cm^2 , the PCSA itself is given in cm^2 so F0 is in Newton`s.
//Klein Horsman used a PCSAfactor of 27 N/cm^2 this is now changed to 90 N/cm^2 

AnyFolder CadaverMusPar = {
#include "<BM_LEG_DATASET_PATH>ModelMuscleParameters.any"
};

#ifndef MuscleModelType
  #define MuscleModelType "AnyMuscleModel3E"
#endif

#if MuscleModelType == "AnyMuscleModel3E"
  #define MMType AnyMuscleModel3E
#endif

#if MuscleModelType == "AnyMuscleModel"
  #define MMType AnyMuscleModel
#endif

#ifndef PENNATIONANGLE_CORRECTION
#define PENNATIONANGLE_CORRECTION 0
#endif

#ifndef MMType
AnyMessage UnknownMuscleModel =
 {
   TriggerPreProcess = On;
   Type = MSG_Error;
   Message = ("Unknown muscle model type: "+MuscleModelType);
 };
#endif

MMType  AdductorBrevisProximal1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorBrevisProximal;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorBrevisProximal2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorBrevisProximal;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorBrevisMid1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorBrevisMid;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorBrevisMid2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorBrevisMid;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorBrevisDistal1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorBrevisDistal;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorBrevisDistal2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorBrevisDistal;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorLongus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorLongus;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorLongus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorLongus;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorLongus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorLongus;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorLongus4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorLongus;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorLongus5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorLongus;
   AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorLongus6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorLongus;
   AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorMagnusDistal1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusDistal;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorMagnusDistal2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusDistal;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorMagnusDistal3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusDistal;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorMagnusMid1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusMid;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorMagnusMid2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusMid;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorMagnusMid3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusMid;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorMagnusMid4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusMid;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorMagnusMid5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusMid;
   AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorMagnusMid6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusMid;
   AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorMagnusProximal1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusProximal;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorMagnusProximal2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusProximal;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorMagnusProximal3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusProximal;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  AdductorMagnusProximal4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.AdductorMagnusProximal;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  BicepsFemorisCaputLongum1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.BicepsFemorisCaputLongum;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  BicepsFemorisCaputBreve1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.BicepsFemorisCaputBreve;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  BicepsFemorisCaputBreve2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.BicepsFemorisCaputBreve;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  BicepsFemorisCaputBreve3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.BicepsFemorisCaputBreve;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  ExtensorDigitorumLongus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ExtensorDigitorumLongus;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif  // #if BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
#endif  // #if BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  ExtensorDigitorumLongus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ExtensorDigitorumLongus;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif  // #if BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
#endif  // #if BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  ExtensorDigitorumLongus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ExtensorDigitorumLongus;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif  // #if BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
#endif  // #if BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

#if BM_LEG_MORPHOLOGY == 2

MMType  ExtensorDigitorumLongus4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ExtensorDigitorumLongus;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#endif // #if BM_LEG_MORPHOLOGY == 2

MMType  ExtensorHallucisLongus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ExtensorHallucisLongus;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  ExtensorHallucisLongus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ExtensorHallucisLongus;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  ExtensorHallucisLongus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ExtensorHallucisLongus;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  FlexorDigitorumLongus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.FlexorDigitorumLongus;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //#if BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
#endif //#if BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  FlexorDigitorumLongus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.FlexorDigitorumLongus;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //#if BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
#endif //#if BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  FlexorDigitorumLongus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.FlexorDigitorumLongus;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //#if BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
#endif //#if BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

#if BM_LEG_MORPHOLOGY == 2
MMType  FlexorDigitorumLongus4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.FlexorDigitorumLongus;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#endif //#if BM_LEG_MORPHOLOGY == 2

MMType  FlexorHallucisLongus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.FlexorHallucisLongus;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  FlexorHallucisLongus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.FlexorHallucisLongus;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  FlexorHallucisLongus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.FlexorHallucisLongus;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GastrocnemiusLateralis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GastrocnemiusLateralis;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GastrocnemiusMedialis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GastrocnemiusMedialis;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GemellusInferior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GemellusInferior;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GemellusSuperior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GemellusSuperior;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMaximusSuperior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusSuperior;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMaximusSuperior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusSuperior;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMaximusSuperior3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusSuperior;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMaximusSuperior4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusSuperior;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMaximusSuperior5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusSuperior;
   AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMaximusSuperior6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusSuperior;
   AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMaximusInferior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusInferior;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMaximusInferior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusInferior;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMaximusInferior3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusInferior;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMaximusInferior4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusInferior;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMaximusInferior5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusInferior;
   AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMaximusInferior6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMaximusInferior;
   AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMediusAnterior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusAnterior;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMediusAnterior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusAnterior;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMediusAnterior3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusAnterior;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMediusAnterior4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusAnterior;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMediusAnterior5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusAnterior;
   AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMediusAnterior6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusAnterior;
   AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMediusPosterior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusPosterior;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMediusPosterior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusPosterior;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMediusPosterior3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusPosterior;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMediusPosterior4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusPosterior;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMediusPosterior5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusPosterior;
   AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMediusPosterior6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMediusPosterior;
   AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  GluteusMinimusAnterior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMinimusAnterior;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
#endif //#if BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
#endif //#if BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  GluteusMinimusMid1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMinimusMid;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
#endif //#if BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
#endif //#if BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMinimusPosterior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMinimusPosterior;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
#endif //#if BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
#endif //#if BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

#if BM_LEG_MORPHOLOGY == 2
MMType  GluteusMinimusAnterior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMinimusAnterior;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMinimusMid2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMinimusMid;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  GluteusMinimusPosterior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.GluteusMinimusPosterior;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#endif //#if BM_LEG_MORPHOLOGY == 2

MMType  Gracilis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Gracilis;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  Gracilis2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Gracilis;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  IliacusLateralis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusLateralis;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  IliacusLateralis2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusLateralis;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#if BM_LEG_MORPHOLOGY == 1
MMType  IliacusLateralis3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusLateralis;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#endif //BM_LEG_MORPHOLOGY == 1
MMType  IliacusMid1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusMid;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  IliacusMid2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusMid;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#if BM_LEG_MORPHOLOGY == 1
MMType  IliacusMid3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusMid;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#endif //BM_LEG_MORPHOLOGY == 1
MMType  IliacusMedialis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusMedialis;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  IliacusMedialis2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusMedialis;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#if BM_LEG_MORPHOLOGY == 1
MMType  IliacusMedialis3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusMedialis;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#endif //if BM_LEG_MORPHOLOGY == 1

MMType  ObturatorExternusInferior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorExternusInferior;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  ObturatorExternusInferior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorExternusInferior;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  ObturatorExternusSuperior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorExternusSuperior;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  ObturatorExternusSuperior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorExternusSuperior;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  ObturatorExternusSuperior3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorExternusSuperior;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  ObturatorInternus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorInternus;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  ObturatorInternus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorInternus;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  ObturatorInternus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorInternus;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

#if BM_LEG_MORPHOLOGY == 2
MMType  ObturatorInternus4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorInternus;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  ObturatorInternus5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorInternus;
   AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  ObturatorInternus6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.ObturatorInternus;
   AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#endif //#if BM_LEG_MORPHOLOGY == 2

MMType  Pectineus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Pectineus;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  Pectineus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Pectineus;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  Pectineus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Pectineus;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  Pectineus4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Pectineus;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  PeroneusBrevis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusBrevis;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  PeroneusBrevis2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusBrevis;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  PeroneusBrevis3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusBrevis;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  PeroneusLongus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusLongus;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  PeroneusLongus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusLongus;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  PeroneusLongus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusLongus;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#if BM_LEG_MORPHOLOGY == 1
MMType  PeroneusTertius1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusTertius;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  PeroneusTertius2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusTertius;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  PeroneusTertius3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PeroneusTertius;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#endif //#if BM_LEG_MORPHOLOGY == 1
MMType  Piriformis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Piriformis;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  Plantaris1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Plantaris;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  Popliteus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Popliteus;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  Popliteus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Popliteus;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

#if BM_LEG_MORPHOLOGY == 2
MMType  Popliteus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Popliteus;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#endif //#if BM_LEG_MORPHOLOGY == 2

#if BM_LEG_MORPHOLOGY == 1
MMType  PsoasMinor1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMinor;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#endif //#if BM_LEG_MORPHOLOGY == 1

MMType  PsoasMajor_T12I_Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 11; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  PsoasMajor_L1I_Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 11; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  PsoasMajor_L1T_Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 11; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  PsoasMajor_L2I_Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 11; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  PsoasMajor_L2T_Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 11; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  PsoasMajor_L3I_Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 11; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  PsoasMajor_L3T_Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyIntVar MuscleElemNo = 7; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 11; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  PsoasMajor_L4I_Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyIntVar MuscleElemNo = 8; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 11; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  PsoasMajor_L4T_Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyIntVar MuscleElemNo = 9; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 11; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  PsoasMajor_L5_Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyIntVar MuscleElemNo = 10; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 11; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  PsoasMajor_L5T_Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyIntVar MuscleElemNo = 11; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 11; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  PsoasMajor1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 5; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  PsoasMajor2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 5; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  PsoasMajor3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 5; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

#if BM_LEG_MORPHOLOGY == 2
MMType  PsoasMajor4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 5; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  PsoasMajor5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.PsoasMajor;
   AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 5; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#endif //#if BM_LEG_MORPHOLOGY == 2

MMType  QuadratusFemoris1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.QuadratusFemoris;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  QuadratusFemoris2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.QuadratusFemoris;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  QuadratusFemoris3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.QuadratusFemoris;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  QuadratusFemoris4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.QuadratusFemoris;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};


MMType  RectusFemoris1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.RectusFemoris;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  RectusFemoris2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.RectusFemoris;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

#if BM_LEG_MORPHOLOGY == 2
MMType  Sartorius1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Sartorius;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#endif

#if BM_LEG_MORPHOLOGY == 1
MMType  SartoriusProximal1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.SartoriusProximal;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  SartoriusDistal1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.SartoriusDistal;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#endif //TLEM 1

MMType  Semimembranosus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Semimembranosus;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
#endif //#if BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //#if BM_LEG_MORPHOLOGY == 2
  F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

#if BM_LEG_MORPHOLOGY == 2

MMType  Semimembranosus2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Semimembranosus;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  Semimembranosus3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Semimembranosus;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#endif //#if BM_LEG_MORPHOLOGY == 2

MMType  Semitendinosus1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Semitendinosus;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  SoleusMedialis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.SoleusMedialis;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  SoleusMedialis2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.SoleusMedialis;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  SoleusMedialis3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.SoleusMedialis;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  SoleusLateralis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.SoleusLateralis;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  SoleusLateralis2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.SoleusLateralis;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  SoleusLateralis3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.SoleusLateralis;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  TensorFasciaeLatae1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TensorFasciaeLatae;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  TensorFasciaeLatae2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TensorFasciaeLatae;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  TibialisAnterior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisAnterior;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  TibialisAnterior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisAnterior;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  TibialisAnterior3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisAnterior;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  TibialisPosteriorMedialis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisPosteriorMedialis;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  TibialisPosteriorMedialis2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisPosteriorMedialis;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  TibialisPosteriorMedialis3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisPosteriorMedialis;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  TibialisPosteriorLateralis1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisPosteriorLateralis;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  TibialisPosteriorLateralis2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisPosteriorLateralis;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  TibialisPosteriorLateralis3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TibialisPosteriorLateralis;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleShank*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleShank*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusIntermedius1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusIntermedius;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusIntermedius2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusIntermedius;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusIntermedius3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusIntermedius;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusIntermedius4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusIntermedius;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusIntermedius5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusIntermedius;
   AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusIntermedius6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusIntermedius;
   AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusLateralisInferior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusLateralisInferior;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusLateralisInferior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusLateralisInferior;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusLateralisInferior3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusLateralisInferior;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusLateralisInferior4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusLateralisInferior;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusLateralisInferior5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusLateralisInferior;
   AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusLateralisInferior6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusLateralisInferior;
   AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusLateralisSuperior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusLateralisSuperior;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusLateralisSuperior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusLateralisSuperior;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusMedialisInferior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisInferior;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusMedialisInferior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisInferior;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusMedialisMid1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisMid;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusMedialisMid2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisMid;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};

MMType  VastusMedialisSuperior1Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisSuperior;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusMedialisSuperior2Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisSuperior;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusMedialisSuperior3Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisSuperior;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusMedialisSuperior4Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisSuperior;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#if BM_LEG_MORPHOLOGY == 1
MMType  VastusMedialisSuperior5Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisSuperior;
   AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
MMType  VastusMedialisSuperior6Par = {
   AnyFolder &MuscleParameters = .CadaverMusPar.VastusMedialisSuperior;
   AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 6; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = 0.4; // Factor for determining shortening speed at optimum length
   Jt = 3.0; // Shape parameter for the tendon stiffness
   Jpe = 3.0; // Shape parameter for the parallel stiffness
   PEFactor = 5.0; // Parameter for influence of parallel stiffness
#endif
};
#endif

#undef MMType
