//This is the calibration2 file it will calibrate specfic muscles on the leg
AnyFolder LegCal3={
  
  AnyFolder &Pelvis = ...HumanFolderRef.Trunk.SegmentsLumbar.PelvisSeg;
  AnyFolder &Sacrum = ...HumanFolderRef.Trunk.SegmentsLumbar.SacrumSeg;
  
  AnyFolder &LegSegSide = .SideHumanFolderRef.Leg.Seg;
  
  AnyFolder &LegJointsSide = .SideHumanFolderRef.Leg.Jnt;
  AnyFolder &SacrumPelvisJnt = ...HumanFolderRef.Trunk.JointsLumbar.SacrumPelvisJnt;
  
    
  AnyFixedRefFrame ground = {
    AnyRefNode node = { 
      ARel=..Pelvis.Axes0;
      sRel=..Pelvis.r0;
    };
  };
  
  AnyRevoluteJoint PelvisGround={
    AnyRefFrame &Ground = .ground.node;
    AnyRefFrame &Sacrum= ....HumanFolderRef.Trunk.SegmentsLumbar.PelvisSeg; 
    Axis=z;
  };
  
  AnyKinEqSimpleDriver PelvisGroundRot = {
    AnyRevoluteJoint &Jnt = .PelvisGround;
    DriverPos = {0};
    DriverVel = {0};
    Reaction.Type = {Off}; 
  };  
  
  AnyKinEqSimpleDriver PelvisSacrumFix = {
    AnyKinMeasure &Jnt = .SacrumPelvisJnt;
    DriverPos = {0,0,0};
    DriverVel = {0,0,0};
    Reaction.Type = {Off,Off,Off}; 
  }; 

  AnyKinEqSimpleDriver Hip = {
    AnySphericalJoint &Spherical = .LegJointsSide.Hip;
    MeasureOrganizer = {2,0,1}; // flexion/extension, abduction/adduction, internal/external rotation
    DriverPos = {0,0,0}*pi/180;
    DriverVel = {0,0,0}*pi/180;
    Reaction.Type = {Off,Off,Off};
  };  
  
  AnyKinEqSimpleDriver Knee = {
    AnyRevoluteJoint &Hinge = .LegJointsSide.Knee;
    DriverPos = {-70*pi/180}; // 70 degrees knee flexion
    DriverVel = {0*pi/180};
    Reaction.Type = {Off};
  };  
  
  AnyKinEqSimpleDriver Ankle = {
    AnyRevoluteJoint &Hinge = .LegJointsSide.Ankle;
    DriverPos = {-20*pi/180}; //20 degrees plantar flexion
    DriverVel = {0*pi/180}; 
    Reaction.Type = {Off};
  };
  
  AnyKinEqSimpleDriver SubTalar = {
    AnyRevoluteJoint &Hinge = .LegJointsSide.SubTalar;
    DriverPos = {0*pi/180};
    DriverVel = {0*pi/180}; 
    Reaction.Type = {Off};
  };  

  //AnyFolder &MuscleParCal2 =.SideHumanFolderRef.Leg.MusPar;
  
  AnyFolder Mus = {
    //Muscle main function: Dorsal flexion
    AnyViaPointMuscle &TibialisAnterior1 = ..SideHumanFolderRef.Leg.Mus.TibialisAnterior1;
    AnyViaPointMuscle &TibialisAnterior2 = ..SideHumanFolderRef.Leg.Mus.TibialisAnterior2;
    AnyViaPointMuscle &TibialisAnterior3 = ..SideHumanFolderRef.Leg.Mus.TibialisAnterior3;
    
#if BM_LEG_MORPHOLOGY == 1
    AnyViaPointMuscle &PeroneusTertius1 = ..SideHumanFolderRef.Leg.Mus.PeroneusTertius1;
    //AnyViaPointMuscle &PeroneusTertius2 = ..SideHumanFolderRef.Leg.Mus.PeroneusTertius2; //JDT-2015.03.24: Outcommented these two, as they were not actually active in TLEM 1 in TLEMsafe 2.0 trunk - Check with PEG.
    //AnyViaPointMuscle &PeroneusTertius3 = ..SideHumanFolderRef.Leg.Mus.PeroneusTertius3;
#endif
    
    AnyViaPointMuscle &ExtensorDigitorumLongus1  = ..SideHumanFolderRef.Leg.Mus.ExtensorDigitorumLongus1;
    AnyViaPointMuscle &ExtensorDigitorumLongus2  = ..SideHumanFolderRef.Leg.Mus.ExtensorDigitorumLongus2;
    AnyViaPointMuscle &ExtensorDigitorumLongus3  = ..SideHumanFolderRef.Leg.Mus.ExtensorDigitorumLongus3;
#if BM_LEG_MORPHOLOGY == 2
    AnyViaPointMuscle &ExtensorDigitorumLongus4  = ..SideHumanFolderRef.Leg.Mus.ExtensorDigitorumLongus4;
#endif
    
    AnyViaPointMuscle &ExtensorHallucisLongus1 = ..SideHumanFolderRef.Leg.Mus.ExtensorHallucisLongus1;
    AnyViaPointMuscle &ExtensorHallucisLongus2 = ..SideHumanFolderRef.Leg.Mus.ExtensorHallucisLongus2;
    AnyViaPointMuscle &ExtensorHallucisLongus3 = ..SideHumanFolderRef.Leg.Mus.ExtensorHallucisLongus3;
#if BM_LEG_MORPHOLOGY == 2 
    //AnyViaPointMuscle &TensorFasciaeLatae1 = ..SideHumanFolderRef.Leg.Mus.TensorFasciaeLatae1;
    //AnyViaPointMuscle &TensorFasciaeLatae2 = ..SideHumanFolderRef.Leg.Mus.TensorFasciaeLatae2;
#endif  
  };  
};

// The study: Operations to be performed on the model
AnyBodyCalibrationStudy LegCalibrationStudy3 = {
  AnyFolder &ref=.LegCal3; 
  nStep = 1;
  InitialConditions.SolverType = KinSolOverDeterminate;
};