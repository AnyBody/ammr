
AnyFolder Model = {
  // Model parts included in the moment arm study
  AnyFolder TrunkSegmentsRef = {
    AnyFolder &PelvisSeg = ......BodyModel.Trunk.Segments.PelvisSeg;
    AnyFolder &Thorax = ......BodyModel.Trunk.Segments.ThoraxSeg;
    AnyFolder &Sacrum = ......BodyModel.Trunk.Segments.SacrumSeg;
    AnyFolder &L5 = ......BodyModel.Trunk.Segments.L5Seg;
    AnyFolder &L4 = ......BodyModel.Trunk.Segments.L4Seg;
    AnyFolder &L3 = ......BodyModel.Trunk.Segments.L3Seg;
    AnyFolder &L2 = ......BodyModel.Trunk.Segments.L2Seg;
    AnyFolder &L1 = ......BodyModel.Trunk.Segments.L1Seg;
  };
  AnyFolder &JointsLumberRef = .....BodyModel.Trunk.Joints.Lumbar;
  AnyFolder &LegSegSideRef = .SideHumanFolderRef.Leg.Seg;
  AnyFolder &LegJntsRef =  .SideHumanFolderRef.Leg.Jnt;
  AnyFolder &LegMusRef = .SideHumanFolderRef.Leg.Mus;
  AnyFolder &SpineMusRef = .SideTrunkMusRef;

//  AnyFolder &SegLumbarRef = .....HumanFolderRef.Trunk.Segments;
//  AnyFolder &SegThoraxRef = .....HumanFolderRef.Trunk.Segments.ThoraxSeg;
//  AnyFolder &JointLumberRef = .....HumanFolderRef.Trunk.JointsLumbar;
//

  AnyFixedRefFrame ground =
  {
    AnyRefNode node =
    {
      ARel=..TrunkSegmentsRef.PelvisSeg.Axes0;
      sRel=..TrunkSegmentsRef.PelvisSeg.r0;
    };
  };



  AnyFolder Drivers = {
    AnyVar AngularVelocity = (..RangeOfMotion[1]-..RangeOfMotion[0])*pi/180;
    AnyKinMeasureOrg LegMeasure = {
      AnyKinMeasure& HipFlexion= ...SideHumanInterfaceRef.HipFlexion;
      AnyKinMeasure& HipAbduction= ...SideHumanInterfaceRef.HipAbduction;
      AnyKinMeasure& HipExternalRotation= ...SideHumanInterfaceRef.HipExternalRotation;
      AnyKinMeasure& KneeFlexion= ...SideHumanInterfaceRef.KneeFlexion;
      AnyKinMeasure& AnklePlantarFlexion= ...SideHumanInterfaceRef.AnklePlantarFlexion;
      AnyKinMeasure& SubTalarEversion= ...SideHumanInterfaceRef.SubTalarEversion;
    };
    AnyStdJoint PelvisGround={
      AnyRefFrame &Ground = ..ground.node;
      AnyRefFrame &Pelvis= ..TrunkSegmentsRef.PelvisSeg;
    };

    AnyKinEq ThoraxFix =
    {
      AnyKinMeasure& PelvisThoraxExtension= .......BodyModel.Interface.Trunk.PelvisThoraxExtension;
      AnyKinMeasure& PelvisThoraxLateralBending= .......BodyModel.Interface.Trunk.PelvisThoraxLateralBending;
      AnyKinMeasure& PelvisThoraxRotation= .......BodyModel.Interface.Trunk.PelvisThoraxRotation;
    };

  };// Drivers
};// Model


AnyKinStudy Study = {
  Gravity = {0,0,0};
  #ifdef EVALUATE_MOMENT_ARMS_NSTEP
  nStep = EVALUATE_MOMENT_ARMS_NSTEP;
  #else
  nStep = 40;
  #endif

  AnyFolder &Model = .Model;
  AnyOutputFun AngularVelocity_output = {Val = ..Model.Drivers.AngularVelocity;};

  AnyFolder MuscleStrengthCalculations = {
    AnyFolder Abscissa = {
      AnyVar JointAngle =  not(not(..Model.Drivers.LegDriver.DriverVel))*..Model.Drivers.LegMeasure.Pos'*180/pi  ;
    };
#define _CODE_MACRO_(muscle, branch) AnyVar branch = ( .Model.LegMusRef.muscle.branch.Strength);
        #include "legmuscles_for_output.any"
#undef _CODE_MACRO_
  };

  AnyFolder PennationAngleCalculations = {
    AnyFolder Abscissa = {
      AnyVar JointAngle =  not(not(..Model.Drivers.LegDriver.DriverVel))*..Model.Drivers.LegMeasure.Pos'*180/pi  ;
    };
#define _CODE_MACRO_(muscle, branch) AnyVar branch = ( .Model.LegMusRef.muscle.branch.PennationAngle * 180 / pi);
        #include "legmuscles_for_output.any"
#undef _CODE_MACRO_
  };


  AnyFolder MuscleReferences = {
#define _CODE_MACRO_(muscle, branch) AnyMuscle& branch = .Model.LegMusRef.muscle.branch;
       #include "legmuscles_for_output.any"
#undef _CODE_MACRO_
  };

  AnyFolder MomentArmCalculations = {
    AnyFolder Abscissa = {
      AnyVar JointAngle =  not(not(..Model.Drivers.LegDriver.DriverVel))*..Model.Drivers.LegMeasure.Pos'*180/pi  ;
    };
#define _CODE_MACRO_(muscle, branch) AnyVar branch = ( -1*.Model.LegMusRef.muscle.branch.LmtDot/.Model.Drivers.AngularVelocity);
        #include "legmuscles_for_output.any"
#undef _CODE_MACRO_
  };
};


#if (ANYBODY_V1 >= 6) & (ANYBODY_V2 >= 1)
AnyFolder ModelViews = { AnyFolder Views =  {}; };
#else
AnyProject ModelViews = {};
#endif

ModelViews = {
  AnyDrawGroup Selection = {
    Objects = arrcat(
        ObjSearchRecursive(CompleteNameOf(&..Model.TrunkSegmentsRef), "*", "AnyDrawObject"),
        ObjSearchRecursive(CompleteNameOf(&..Model.LegSegSideRef), "*", "AnyDrawObject"),
        ObjSearchRecursive(CompleteNameOf(&..Model.LegMusRef), "*", "AnyDrawObject"),
        ObjSearchRecursive(CompleteNameOf(&..Model.SpineMusRef) + ".PsoasMajor", "*", "AnyDrawObject")
    );
  };
  Views = {
    AnyProjectModelViewDefinition SelectedView = {
      DrawGroupSequence = {&..Selection};
      Reset = {On};
    };
  };
};

AnyOperationSequence Run =
{
    AnyOperationMacro SetView =
    {
      MacroStr = { "classoperation " + CompleteNameOf(&..ModelViews.Views.SelectedView) + strquote("Set View") };
    };
    AnyOperation &Study = .Study.Kinematics;
};

#ifdef ANYBODY_PATH_OUTPUT
AnyOperationMacro Save =
{
  MacroStr = {
    "classoperation " + CompleteNameOf(&.Study.Output) + strquote("Save data")
    + " --type=" + strquote("Deep") +" --file=" + strquote(
    ANYBODY_PATH_OUTPUT + .OutputFileName + ".anydata.h5")
  };
};
#endif
