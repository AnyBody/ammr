/**
This is the root file for the leg model without muscles

The model contains the following files:
"StandardParameters.any" for overall parameters on which the model is based
"Seg.any" segments on the leg.
"Jnt.any" joint definitions for the leg.
"SegmentsTrunk.any" definition of pelvis segment.
*/
HipNodeRef = {
  
  AnyFunTransform3D &Scale =.Scaling.GeometricalScaling.Pelvis.ScaleFunction;
  
  
  // This vector contain the coordinates of the right HipJointNode.
  // These coordinates has to be use for transforming the coordinates of the muscle insertion points
  AnyVec3 T = {0.000000, -0.115000, .Sign*0.096000}; // The values are set to constant values to make it possible to move model around! 
  
  // These nodes are made as nodes in nodes, the reason for using this procedure instead of putting the nodes directly on the 
  // pelvis where they eventually will end up are that it makes it possible to have the leg as a selfcontained block.
  // The nodes which are defined on the following lines are used by the leg model for muscle attachements on pelvis.
  
};

// Collection of the joints into JntDOF which are used by the applications.
AnyKinMeasureOrg JntDOF = {
  // This is where the DOF of the leg are assembled into one single measure, this measure has the following DOF:
  // 0 Ankle flexion/extension
  // 1 Ankle abduction adduction  
  // 2 Knee flextion/extension
  // 3 Hip adduction/abduction 
  // 4 Hip rotation externa/internal
  // 5 Hip flexion/extension 
  AnyUniversalJoint &Ankle = .Jnt.Ankle;
  AnyRevoluteJoint &Knee = .Jnt.Knee;
  AnySphericalJoint &Hip = .Jnt.Hip;
}; 

/// Definition of the leg segments
AnyFolder Seg = {
  #include "Seg.any"
//  #include "NodeForScalingExt.any"
};

//Joint reaction made using reacforces
#include "JointMuscles.any"
//#include "JointReactions.any"

/// Definition of the joints
AnyFolder Jnt = {
  #include "Jnt.any"
  //#include "JointMuscles.any" joint reactions made as artificial muscles
};


/// Summation of masses in the leg
AnyFolder MassSummation={
  AnyVar Mass=.Seg.Thigh.Mass+.Seg.Shank.Mass+.Seg.Foot.Mass;
};

#ifdef DONT_USE_INITIAL_POSITION_FROM_MANNEQUIN
#else
#include "InitialPositions.any"
#endif

InterfaceFolder ={
  #include "Interface.any"
};

MannequinValuesFolder ={
  #include "MannequinValuesFromModel.any"
};
