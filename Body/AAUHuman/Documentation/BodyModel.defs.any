//
// !!! THIS IS AN AUTOMATICALLY GENERATED FILE. DO NOT MODIFY IT !!! 
//

// Definition of an anthropometric scaling law
//#define BM_SCALING _SCALING_STANDARD_

// File with all anthropometric measurements
//#path BM_SCALING_ANTHRO_FILE "<ANYBODY_PATH_BODY>\BodyModels\GenericBodyModel\BodyModel.AnyMan.any"

// Custom anthopometric scaling law, used when BM_SCALING is _SCALING_CUSTOM_.
//#path BM_SCALING_MY_FILE "<ANYBODY_PATH_BODY>\Scaling\MyScalingLaw.any"

// Switch for automatic display of all configuration values
//#define BM_CONFIG_MESSAGES OFF

// Switch for enabling configuration value information in the model tree
//#define BM_CONFIG_VALUES OFF

// A file with draw settings
//#path BM_DRAWSETTINGS_FILE "<ANYBODY_PATH_BODY>\DrawSettings\DrawSettings.any"

// A flag to switch on/off inclusion of the draw settings (may be needed in case of two human models)
//#define BM_DRAWSETTINGS_SKIP OFF

// Parameter defining the Leg model used. This can be overridden per leg ``BM_LEG_LEFT`` and ``BM_LEG_RIGHT``
//#define BM_LEG_MODEL _LEG_MODEL_TLEM_

// Switch defining left leg model. Can be used to control the leg individually.
//#define BM_LEG_LEFT BM_LEG_MODEL

// Switch defining left leg model. Can be used to control the leg individually.
//#define BM_LEG_RIGHT BM_LEG_MODEL

// Index parameter to specify muscle strength for lower extremities
//#define BM_LEG_STRENGTH_INDEX 1.0

// Parameter to define muscle behavior of both right and left leg
//#define BM_LEG_MUSCLES_BOTH _MUSCLES_SIMPLE_

// Parameter to define muscle behavior of the left leg
//#define BM_LEG_MUSCLES_LEFT BM_LEG_MUSCLES_BOTH

// Parameter to define muscle behavior of the right leg
//#define BM_LEG_MUSCLES_RIGHT BM_LEG_MUSCLES_BOTH

// Path to specify the underlying dataset. This currently only affects the TLEM based models. Valid options depends on which model (TLEM1/2) is used, and what dataset are available. If not specified, this will be configure automatically.
//#path BM_LEG_DATASET 

// Parameter for the morphology method used by the Leg model. This currently only affects the TLEM based models.Valid options depends on which model (TLEM1/2) is used, and what dataset are available. If not specified, this will be configure automatically.
//#define BM_LEG_MORPHOLOGY 

// Parameter to define a trunk model dataset.
//#define BM_TRUNK_DATASET "TrunkData1.1"

// Index parameter to specify strength for trunk muscles.
//#define BM_TRUNK_STRENGTH_INDEX 1.0

// Definition of the type of all spine muscles.
//#define BM_TRUNK_MUSCLES _MUSCLES_SIMPLE_

// Definition of the lumbar spine muscles type.
//#define BM_TRUNK_LUMBAR_MUSCLES BM_TRUNK_MUSCLES

// Definition of the thoracic spine muscles type.
//#define BM_TRUNK_THORACIC_MUSCLES OFF

// Definition of the cervical spine muscles type.
//#define BM_TRUNK_CERVICAL_MUSCLES OFF

// Definition of the disc model of all spine parts.
//#define BM_TRUNK_DISC_STIFNESS _DISC_STIFFNESS_LINEAR_

// Definition of the lumbar spine disc model.
//#define BM_TRUNK_LUMBAR_DISC_STIFNESS BM_TRUNK_DISC_STIFNESS

// Definition of the thoracic spine disc model.
//#define BM_TRUNK_THORACIC_DISC_STIFNESS BM_TRUNK_DISC_STIFNESS

// Definition of the cervical spine disc model.
//#define BM_TRUNK_CERVICAL_DISC_STIFNESS BM_TRUNK_DISC_STIFNESS

// A switch to use a kinematic rhythm for the whole spine.
//#define BM_TRUNK_RHYTHM ON

// A switch to use a kinematic rhythm for the lumbar spine.
//#define BM_TRUNK_LUMBAR_RHYTHM BM_TRUNK_RHYTHM

// A switch to use a kinematic rhythm for the thoracic spine.
//#define BM_TRUNK_THORACIC_RHYTHM BM_TRUNK_RHYTHM

// A switch to use a kinematic rhythm for the cervical spine.
//#define BM_TRUNK_CERVICAL_RHYTHM BM_TRUNK_RHYTHM

// A switch to control all the ligaments in the spine.
//#define BM_TRUNK_LIGAMENTS OFF

// A switch to control the lumbar spine ligaments.
//#define BM_TRUNK_LUMBAR_LIGAMENTS BM_TRUNK_LIGAMENTS

// A switch to control the thoracic spine ligaments.
//#define BM_TRUNK_THORACIC_LIGAMENTS BM_TRUNK_LIGAMENTS

// A switch to control the cervical spine ligaments.
//#define BM_TRUNK_CERVICAL_LIGAMENTS BM_TRUNK_LIGAMENTS

// Index parameter to specify muscle strength for upper extremities.
//#define BM_ARM_STRENGTH_INDEX 1.0

// Switch for the left arm model being present or not.
//#define BM_ARM_LEFT ON

// Keyword for the type of left hand.
//#define BM_ARM_DETAIL_HAND_LEFT OFF

// Switch for the shoulder rhythm constraints for the left arm being present or not.
//#define BM_ARM_SHOULDER_RHYTHM_LEFT OFF

// Switch for the right arm model being present or not.
//#define BM_ARM_RIGHT ON

// Keyword for the type of right hand.
//#define BM_ARM_DETAIL_HAND_RIGHT OFF

// Switch for the shoulder rhythm constraints for the right arm being present or not.
//#define BM_ARM_SHOULDER_RHYTHM_RIGHT OFF

// Keyword for the muscle model type for both left and right arms.
//#define BM_ARM_MUSCLES_BOTH _MUSCLES_SIMPLE_

// Keyword for the muscle model type for the left arm.
//#define BM_ARM_MUSCLES_LEFT BM_ARM_MUSCLES_BOTH

// Keyword for the muscle model for both the right arm.
//#define BM_ARM_MUSCLES_RIGHT BM_ARM_MUSCLES_BOTH

// Keyword to choose the option of the joint axes defintion based on the anatomical landmarks.
//#define BM_BONY_LANDMARK_DEFINED_JOINTAXIS OFF

// Keyword for pelvis display setting.
//#define BM_PELVIS_DISPLAY _PELVIS_DISPLAY_LEGPELVIS_ONLY_

// File name of the mannequin definition file. Default is a file in the body model, but this can be copied to and modified in your model directory.
//#path BM_MANNEQUIN_FILE "<ANYBODY_PATH_BODY>\BodyModels\GenericBodyModel\BodyModel.mannequin.any"

// Setting of the default value for all mannequin drivers.
//#define BM_MANNEQUIN_DRIVER_DEFAULT ON

// By default constraint type of mannequin drivers will be soft.
//#define BM_MANNEQUIN_DRIVER_WEAK_SWITCH ON

// Allows for individual weights if the BM mannequin drivers are soft. Weights are set by assigning the BM_MANNEQUIN_DRIVER_* switches a value instead of ON/OFF.
//#define BM_MANNEQUIN_DRIVER_INDIVIDUAL_WEIGHTS OFF

// Keyword for the interface morhping between the trunk and the leg pelvis segments.
//#define BM_LEG_TRUNK_INTERFACE _MORPH_TRUNK_TO_LEG_

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_POS_X BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_POS_Y BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_POS_Z BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_ROT_Z BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_ROT_Y BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_ROT_X BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_NECK BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_THORAX_LATERAL_BENDING BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_THORAX_ROTATION BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_PELVIS_THORAX_EXTENSION BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ELBOW_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ELBOW_PRONATION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_WRIST_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ELBOW_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ELBOW_PRONATION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_WRIST_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_HIP_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_HIP_ABDUCTION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_KNEE_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ANKLE_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_HIP_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_HIP_ABDUCTION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_KNEE_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ANKLE_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT

// Switch for the mannequin driver being active or not
//#define BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT

// A switch to use different ref. frame than the default global reference frame
//#define BM_GLOBAL_REFERENCE_FRAME_SWITCH OFF

// An object path leading to the selected global reference frame
//#define BM_GLOBAL_REFERENCE_FRAME ..GenericGlobalRefFrame

