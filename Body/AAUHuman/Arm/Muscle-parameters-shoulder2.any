/**^
This folder implements the muscle models for the shoulder arm model.
Anatomical muscles are in many cases split into
several branches (elements). Strength parameters are split between the branches,
typically by uniform split.
*/

DEFAULT_PARAMETER_FOLDER SubjectMusPar(
    NPARAM = 4,
    PARAM_1 = Jt, PARAM_1_TYPE = AnyVar,
    PARAM_2 = Jpe, PARAM_2_TYPE = AnyVar,
    PARAM_3 = PEFactor, PARAM_3_TYPE = AnyVar,
    PARAM_4 = PCSAfactor, PARAM_4_TYPE = AnyVar
) = {
  Default.Jt = DesignVar(3.0); // Shape parameter for the tendon stiffness
  Default.Jpe = DesignVar(3.0); // Shape parameter for the parallel stiffness
  Default.PEFactor = DesignVar(5); // Parameter for influence of parallel stiffness    
  Default.PCSAfactor = ......HumanModel.StrengthParameters.SpecificMuscleTensionShoulderArm; // = PCSAfactor in N/cm^2 , the PCSA itself is given in cm^2 so F0 is in Newton`s.

  // Subject specific (scaled) muscle parameters.
  #include "SubjectMusPar.any"

};





/////////////////////////////////////////////////////
//     biceps_brachii_caput_breve (1 element )     //
/////////////////////////////////////////////////////
AnyMuscleModel3E biceps_brachii_caput_breve =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.biceps_brachii_caput_breve;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




//////////////////////////////////////////////////////
//     biceps_brachii_caput_longum (1 element )     //
//////////////////////////////////////////////////////
AnyMuscleModel3E biceps_brachii_caput_longum =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.biceps_brachii_caput_longum;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




///////////////////////////////////////////
//     coracobrachialis (6 elements)     //
///////////////////////////////////////////
AnyMuscleModel3E coracobrachialis_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.coracobrachialis;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E coracobrachialis_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.coracobrachialis;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E coracobrachialis_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.coracobrachialis;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E coracobrachialis_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.coracobrachialis;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E coracobrachialis_5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.coracobrachialis;
  AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E coracobrachialis_6 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.coracobrachialis;
  AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




#if BM_ARM_DELTOID_WRAPPING == OFF
/////////////////////////////////////////////////////
//     deltoideus_scapular_part_1 (1 element )     //
/////////////////////////////////////////////////////
AnyMuscleModel3E deltoideus_scapular_part_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_scapular_part_1;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 

#endif



#if BM_ARM_DELTOID_WRAPPING == OFF
/////////////////////////////////////////////////////
//     deltoideus_scapular_part_2 (1 element )     //
/////////////////////////////////////////////////////
AnyMuscleModel3E deltoideus_scapular_part_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_scapular_part_2;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 

#endif



#if BM_ARM_DELTOID_WRAPPING == OFF
/////////////////////////////////////////////////////
//     deltoideus_scapular_part_3 (1 element )     //
/////////////////////////////////////////////////////
AnyMuscleModel3E deltoideus_scapular_part_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_scapular_part_3;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 

#endif



#if BM_ARM_DELTOID_WRAPPING == OFF
/////////////////////////////////////////////////////
//     deltoideus_scapular_part_4 (1 element )     //
/////////////////////////////////////////////////////
AnyMuscleModel3E deltoideus_scapular_part_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_scapular_part_4;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 

#endif



#if BM_ARM_DELTOID_WRAPPING == OFF
/////////////////////////////////////////////////////
//     deltoideus_scapular_part_5 (1 element )     //
/////////////////////////////////////////////////////
AnyMuscleModel3E deltoideus_scapular_part_5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_scapular_part_5;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 

#endif



#if BM_ARM_DELTOID_WRAPPING == OFF
///////////////////////////////////////////////////////
//     deltoideus_clavicular_part_1 (1 element )     //
///////////////////////////////////////////////////////
AnyMuscleModel3E deltoideus_clavicular_part_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_clavicular_part_1;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 

#endif



#if BM_ARM_DELTOID_WRAPPING == OFF
///////////////////////////////////////////////////////
//     deltoideus_clavicular_part_2 (1 element )     //
///////////////////////////////////////////////////////
AnyMuscleModel3E deltoideus_clavicular_part_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_clavicular_part_2;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 

#endif



#if BM_ARM_DELTOID_WRAPPING == OFF
///////////////////////////////////////////////////////
//     deltoideus_clavicular_part_3 (1 element )     //
///////////////////////////////////////////////////////
AnyMuscleModel3E deltoideus_clavicular_part_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_clavicular_part_3;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 

#endif



#if BM_ARM_DELTOID_WRAPPING == OFF
///////////////////////////////////////////////////////
//     deltoideus_clavicular_part_4 (1 element )     //
///////////////////////////////////////////////////////
AnyMuscleModel3E deltoideus_clavicular_part_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_clavicular_part_4;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 

#endif



#if BM_ARM_DELTOID_WRAPPING == OFF
///////////////////////////////////////////////////////
//     deltoideus_clavicular_part_5 (1 element )     //
///////////////////////////////////////////////////////
AnyMuscleModel3E deltoideus_clavicular_part_5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_clavicular_part_5;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 

#endif



#if BM_ARM_DELTOID_WRAPPING == OFF
///////////////////////////////////////////////////////
//     deltoideus_clavicular_part_6 (1 element )     //
///////////////////////////////////////////////////////
AnyMuscleModel3E deltoideus_clavicular_part_6 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_clavicular_part_6;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 

#endif



#if BM_ARM_DELTOID_WRAPPING == ON
////////////////////////////////////////////////////
//     deltoideus_posterior_part (4 elements)     //
////////////////////////////////////////////////////
AnyMuscleModel3E deltoideus_posterior_part_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_posterior_part;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E deltoideus_posterior_part_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_posterior_part;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E deltoideus_posterior_part_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_posterior_part;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E deltoideus_posterior_part_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_posterior_part;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 

#endif



#if BM_ARM_DELTOID_WRAPPING == ON
//////////////////////////////////////////////////
//     deltoideus_lateral_part (4 elements)     //
//////////////////////////////////////////////////
AnyMuscleModel3E deltoideus_lateral_part_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_lateral_part;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E deltoideus_lateral_part_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_lateral_part;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E deltoideus_lateral_part_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_lateral_part;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E deltoideus_lateral_part_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_lateral_part;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 

#endif



#if BM_ARM_DELTOID_WRAPPING == ON
///////////////////////////////////////////////////
//     deltoideus_anterior_part (4 elements)     //
///////////////////////////////////////////////////
AnyMuscleModel3E deltoideus_anterior_part_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_anterior_part;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E deltoideus_anterior_part_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_anterior_part;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E deltoideus_anterior_part_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_anterior_part;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E deltoideus_anterior_part_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.deltoideus_anterior_part;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 

#endif



////////////////////////////////////////
//     infraspinatus (6 elements)     //
////////////////////////////////////////
AnyMuscleModel3E infraspinatus_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.infraspinatus;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E infraspinatus_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.infraspinatus;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E infraspinatus_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.infraspinatus;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E infraspinatus_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.infraspinatus;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E infraspinatus_5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.infraspinatus;
  AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E infraspinatus_6 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.infraspinatus;
  AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




///////////////////////////////////////////
//     latissimus_dorsi (5 elements)     //
///////////////////////////////////////////
AnyMuscleModel3E latissimus_dorsi_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.latissimus_dorsi;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume * 0.0778; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E latissimus_dorsi_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.latissimus_dorsi;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume * 0.1556; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E latissimus_dorsi_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.latissimus_dorsi;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume * 0.2; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E latissimus_dorsi_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.latissimus_dorsi;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume * 0.2444; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E latissimus_dorsi_5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.latissimus_dorsi;
  AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume * 0.3222; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




///////////////////////////////////////////
//     levator_scapulae (4 elements)     //
///////////////////////////////////////////
AnyMuscleModel3E levator_scapulae_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.levator_scapulae;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E levator_scapulae_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.levator_scapulae;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E levator_scapulae_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.levator_scapulae;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E levator_scapulae_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.levator_scapulae;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




/////////////////////////////////////////////////////////
//     pectoralis_major_thoracic_part (5 elements)     //
/////////////////////////////////////////////////////////
AnyMuscleModel3E pectoralis_major_thoracic_part_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.pectoralis_major_thoracic_part;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E pectoralis_major_thoracic_part_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.pectoralis_major_thoracic_part;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E pectoralis_major_thoracic_part_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.pectoralis_major_thoracic_part;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E pectoralis_major_thoracic_part_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.pectoralis_major_thoracic_part;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E pectoralis_major_thoracic_part_5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.pectoralis_major_thoracic_part;
  AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




///////////////////////////////////////////////////////////
//     pectoralis_major_clavicular_part (5 elements)     //
///////////////////////////////////////////////////////////
AnyMuscleModel3E pectoralis_major_clavicular_part_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.pectoralis_major_clavicular_part;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E pectoralis_major_clavicular_part_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.pectoralis_major_clavicular_part;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E pectoralis_major_clavicular_part_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.pectoralis_major_clavicular_part;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E pectoralis_major_clavicular_part_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.pectoralis_major_clavicular_part;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E pectoralis_major_clavicular_part_5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.pectoralis_major_clavicular_part;
  AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




///////////////////////////////////////////
//     pectoralis_minor (5 elements)     //
///////////////////////////////////////////
AnyMuscleModel3E pectoralis_minor_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.pectoralis_minor;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E pectoralis_minor_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.pectoralis_minor;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E pectoralis_minor_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.pectoralis_minor;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E pectoralis_minor_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.pectoralis_minor;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E pectoralis_minor_5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.pectoralis_minor;
  AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




//////////////////////////////////////
//     rhomboideus (3 elements)     //
//////////////////////////////////////
AnyMuscleModel3E rhomboideus_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.rhomboideus;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E rhomboideus_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.rhomboideus;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E rhomboideus_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.rhomboideus;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////////
//     serratus_anterior (6 elements)     //
////////////////////////////////////////////
AnyMuscleModel3E serratus_anterior_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.serratus_anterior;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E serratus_anterior_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.serratus_anterior;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E serratus_anterior_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.serratus_anterior;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E serratus_anterior_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.serratus_anterior;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E serratus_anterior_5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.serratus_anterior;
  AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E serratus_anterior_6 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.serratus_anterior;
  AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




//////////////////////////////////////////////
//     Sternocleidomastoid (1 element )     //
//////////////////////////////////////////////
AnyMuscleModel3E Sternocleidomastoid =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Sternocleidomastoid;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////
//     subscapularis (6 elements)     //
////////////////////////////////////////
AnyMuscleModel3E subscapularis_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.subscapularis;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E subscapularis_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.subscapularis;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E subscapularis_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.subscapularis;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E subscapularis_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.subscapularis;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E subscapularis_5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.subscapularis;
  AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E subscapularis_6 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.subscapularis;
  AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////
//     supraspinatus (6 elements)     //
////////////////////////////////////////
AnyMuscleModel3E supraspinatus_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.supraspinatus;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E supraspinatus_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.supraspinatus;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E supraspinatus_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.supraspinatus;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E supraspinatus_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.supraspinatus;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E supraspinatus_5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.supraspinatus;
  AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E supraspinatus_6 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.supraspinatus;
  AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




//////////////////////////////////////
//     teres_major (6 elements)     //
//////////////////////////////////////
AnyMuscleModel3E teres_major_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.teres_major;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E teres_major_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.teres_major;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E teres_major_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.teres_major;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E teres_major_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.teres_major;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E teres_major_5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.teres_major;
  AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E teres_major_6 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.teres_major;
  AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




//////////////////////////////////////
//     teres_minor (6 elements)     //
//////////////////////////////////////
AnyMuscleModel3E teres_minor_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.teres_minor;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E teres_minor_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.teres_minor;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E teres_minor_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.teres_minor;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E teres_minor_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.teres_minor;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E teres_minor_5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.teres_minor;
  AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E teres_minor_6 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.teres_minor;
  AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




//////////////////////////////////////////////////
//     trapezius_scapular_part (6 elements)     //
//////////////////////////////////////////////////
AnyMuscleModel3E trapezius_scapular_part_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.trapezius_scapular_part;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E trapezius_scapular_part_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.trapezius_scapular_part;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E trapezius_scapular_part_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.trapezius_scapular_part;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E trapezius_scapular_part_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.trapezius_scapular_part;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E trapezius_scapular_part_5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.trapezius_scapular_part;
  AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E trapezius_scapular_part_6 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.trapezius_scapular_part;
  AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////////////////
//     trapezius_clavicular_part (6 elements)     //
////////////////////////////////////////////////////
AnyMuscleModel3E trapezius_clavicular_part_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.trapezius_clavicular_part;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E trapezius_clavicular_part_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.trapezius_clavicular_part;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E trapezius_clavicular_part_3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.trapezius_clavicular_part;
  AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E trapezius_clavicular_part_4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.trapezius_clavicular_part;
  AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E trapezius_clavicular_part_5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.trapezius_clavicular_part;
  AnyIntVar MuscleElemNo = 5; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E trapezius_clavicular_part_6 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.trapezius_clavicular_part;
  AnyIntVar MuscleElemNo = 6; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




/////////////////////////////////////
//     Triceps_LH (2 elements)     //
/////////////////////////////////////
AnyMuscleModel3E Triceps_LH_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Triceps_LH;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E Triceps_LH_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Triceps_LH;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




/////////////////////////////////////
//     Brachialis (2 elements)     //
/////////////////////////////////////
AnyMuscleModel3E Brachialis_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Brachialis;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E Brachialis_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Brachialis;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




/////////////////////////////////////
//     Triceps_ME (2 elements)     //
/////////////////////////////////////
AnyMuscleModel3E Triceps_ME_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Triceps_ME;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E Triceps_ME_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Triceps_ME;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




/////////////////////////////////////
//     Triceps_LA (2 elements)     //
/////////////////////////////////////
AnyMuscleModel3E Triceps_LA_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Triceps_LA;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E Triceps_LA_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Triceps_LA;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////
//     Brach_rad (2 elements)     //
////////////////////////////////////
AnyMuscleModel3E Brach_rad_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Brach_rad;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E Brach_rad_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Brach_rad;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




///////////////////////////////////
//     Anconeus (2 elements)     //
///////////////////////////////////
AnyMuscleModel3E Anconeus_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Anconeus;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E Anconeus_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Anconeus;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




///////////////////////////////////////////////////////
//     Pronator_teres_caput_humeral (2 elements)     //
///////////////////////////////////////////////////////
AnyMuscleModel3E Pronator_teres_caput_humeral_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Pronator_teres_caput_humeral;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E Pronator_teres_caput_humeral_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Pronator_teres_caput_humeral;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




//////////////////////////////////////////////////////
//     Pronator_teres_caput_ulnare (1 element )     //
//////////////////////////////////////////////////////
AnyMuscleModel3E Pronator_teres_caput_ulnare =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Pronator_teres_caput_ulnare;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




/////////////////////////////////////////////////
//     Supinator_humerus_part (2 elements)     //
/////////////////////////////////////////////////
AnyMuscleModel3E Supinator_humerus_part_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Supinator_humerus_part;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E Supinator_humerus_part_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Supinator_humerus_part;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




//////////////////////////////////////////////
//     Supinator_ulna_part (2 elements)     //
//////////////////////////////////////////////
AnyMuscleModel3E Supinator_ulna_part_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Supinator_ulna_part;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E Supinator_ulna_part_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Supinator_ulna_part;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




/////////////////////////////////////
//     Pron_quadr (2 elements)     //
/////////////////////////////////////
AnyMuscleModel3E Pron_quadr_1 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Pron_quadr;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 
AnyMuscleModel3E Pron_quadr_2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Pron_quadr;
  AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




///////////////////////////////////////////////////
//     Extensor_Pollicis_Longus (1 element )     //
///////////////////////////////////////////////////
AnyMuscleModel3E Extensor_Pollicis_Longus =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Extensor_Pollicis_Longus;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




///////////////////////////////////////////////////
//     Extensor_Pollicis_Brevis (1 element )     //
///////////////////////////////////////////////////
AnyMuscleModel3E Extensor_Pollicis_Brevis =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Extensor_Pollicis_Brevis;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




///////////////////////////////////////////////////
//     Abductor_Pollicis_Longus (1 element )     //
///////////////////////////////////////////////////
AnyMuscleModel3E Abductor_Pollicis_Longus =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Abductor_Pollicis_Longus;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




///////////////////////////////////////////
//     Extensor_Indicis (1 element )     //
///////////////////////////////////////////
AnyMuscleModel3E Extensor_Indicis =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Extensor_Indicis;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




/////////////////////////////////////////////////
//     Extensor_Carpi_Ulnaris (1 element )     //
/////////////////////////////////////////////////
AnyMuscleModel3E Extensor_Carpi_Ulnaris =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Extensor_Carpi_Ulnaris;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




/////////////////////////////////////////////////////////
//     Extensor_Carpi_Radialis_Longus (1 element )     //
/////////////////////////////////////////////////////////
AnyMuscleModel3E Extensor_Carpi_Radialis_Longus =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Extensor_Carpi_Radialis_Longus;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




/////////////////////////////////////////////////////////
//     Extensor_Carpi_Radialis_Brevis (1 element )     //
/////////////////////////////////////////////////////////
AnyMuscleModel3E Extensor_Carpi_Radialis_Brevis =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Extensor_Carpi_Radialis_Brevis;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////////////
//     Flexor_Carpi_Radialis (1 element )     //
////////////////////////////////////////////////
AnyMuscleModel3E Flexor_Carpi_Radialis =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Flexor_Carpi_Radialis;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




///////////////////////////////////////////////
//     Flexor_Carpi_Ulnaris (1 element )     //
///////////////////////////////////////////////
AnyMuscleModel3E Flexor_Carpi_Ulnaris =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Flexor_Carpi_Ulnaris;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




//////////////////////////////////////////
//     Palmaris_Longus (1 element )     //
//////////////////////////////////////////
AnyMuscleModel3E Palmaris_Longus =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Palmaris_Longus;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////////////////////////////
//     Flexor_Digitorum_Superficialis_Digit5 (1 element )     //
////////////////////////////////////////////////////////////////
AnyMuscleModel3E Flexor_Digitorum_Superficialis_Digit5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Flexor_Digitorum_Superficialis_Digit5;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////////////////////////////
//     Flexor_Digitorum_Superficialis_Digit4 (1 element )     //
////////////////////////////////////////////////////////////////
AnyMuscleModel3E Flexor_Digitorum_Superficialis_Digit4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Flexor_Digitorum_Superficialis_Digit4;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////////////////////////////
//     Flexor_Digitorum_Superficialis_Digit3 (1 element )     //
////////////////////////////////////////////////////////////////
AnyMuscleModel3E Flexor_Digitorum_Superficialis_Digit3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Flexor_Digitorum_Superficialis_Digit3;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////////////////////////////
//     Flexor_Digitorum_Superficialis_Digit2 (1 element )     //
////////////////////////////////////////////////////////////////
AnyMuscleModel3E Flexor_Digitorum_Superficialis_Digit2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Flexor_Digitorum_Superficialis_Digit2;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////////////////////////
//     Flexor_Digitorum_Profundus_Digit5 (1 element )     //
////////////////////////////////////////////////////////////
AnyMuscleModel3E Flexor_Digitorum_Profundus_Digit5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Flexor_Digitorum_Profundus_Digit5;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////////////////////////
//     Flexor_Digitorum_Profundus_Digit4 (1 element )     //
////////////////////////////////////////////////////////////
AnyMuscleModel3E Flexor_Digitorum_Profundus_Digit4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Flexor_Digitorum_Profundus_Digit4;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////////////////////////
//     Flexor_Digitorum_Profundus_Digit3 (1 element )     //
////////////////////////////////////////////////////////////
AnyMuscleModel3E Flexor_Digitorum_Profundus_Digit3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Flexor_Digitorum_Profundus_Digit3;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////////////////////////
//     Flexor_Digitorum_Profundus_Digit2 (1 element )     //
////////////////////////////////////////////////////////////
AnyMuscleModel3E Flexor_Digitorum_Profundus_Digit2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Flexor_Digitorum_Profundus_Digit2;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////////////////
//     Extensor_Digitorum_Digit5 (1 element )     //
////////////////////////////////////////////////////
AnyMuscleModel3E Extensor_Digitorum_Digit5 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Extensor_Digitorum_Digit5;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////////////////
//     Extensor_Digitorum_Digit4 (1 element )     //
////////////////////////////////////////////////////
AnyMuscleModel3E Extensor_Digitorum_Digit4 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Extensor_Digitorum_Digit4;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////////////////
//     Extensor_Digitorum_Digit3 (1 element )     //
////////////////////////////////////////////////////
AnyMuscleModel3E Extensor_Digitorum_Digit3 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Extensor_Digitorum_Digit3;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




////////////////////////////////////////////////////
//     Extensor_Digitorum_Digit2 (1 element )     //
////////////////////////////////////////////////////
AnyMuscleModel3E Extensor_Digitorum_Digit2 =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Extensor_Digitorum_Digit2;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




/////////////////////////////////////////////////
//     Extensor_Digiti_Minimi (1 element )     //
/////////////////////////////////////////////////
AnyMuscleModel3E Extensor_Digiti_Minimi =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Extensor_Digiti_Minimi;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




/////////////////////////////////////////////////
//     Flexor_Pollicis_Longus (1 element )     //
/////////////////////////////////////////////////
AnyMuscleModel3E Flexor_Pollicis_Longus =
{
  AnyFolder& MuscleParameters = .SubjectMusPar.Flexor_Pollicis_Longus;
  AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
  AnyIntVar MuscleElemAmount = MuscleParameters.MuscleElemAmount; ///< The total amount of elements for this muscle
  F0 = .SubjectMusPar.PCSAfactor*PCSA; ///< Maximum force output at optimum fiber length
  Lf0 = MuscleParameters.OptimalFiberlength; ///< Optimum fiber length
  Vol0 = 1e-6*MuscleParameters.MuscleVolume/MuscleElemAmount; ///< Muscle volume in (m3)
  AnyVar PCSA = 1e4*Vol0/Lf0;///< PCSA (cm2) is calculated as muscle volume divided between muscle branches and divided by fiber length
  Lt0 = max({MuscleParameters.TotalTendonLength, 0.001}); ///< Tendon slack length (Cannot be zero)
  Gamma0 = MuscleParameters.Pennationangle*(pi/180); ///< Pennation angle in radian
  Epsilon0 = MuscleParameters.Epsilon0; ///< Tendon strain at F0
  K1 = MuscleParameters.K1; ///< Factor for determining shortening speed at optimum length
  K2 = MuscleParameters.K2; ///< Factor for determining shortening speed at optimum length
  Fcfast = MuscleParameters.Fcfast; ///< Factor for determining shortening speed at optimum length
  Jt = .SubjectMusPar.Jt; ///< Shape parameter for the tendon stiffness
  Jpe = .SubjectMusPar.Jpe; ///< Shape parameter for the parallel stiffness
  PEFactor = .SubjectMusPar.PEFactor; ///< Parameter for influence of parallel stiffness
};
 




