/**
This file creates realistic reaction between humerus and scapula, 
the ordinary reactions in the spherical GH joint has been switched off.

The ideas is to use a setup of strong pushing muscles 
which ensure that the GH reactions force is alway inside the glenoid cavity.
The reactions are made by a number of strong muscles pushing 
from the GH joint center towards the edge of the glenoid cavity, 
here created as a circular path. So if any of these muscles are 
activated the reaction force will either point ot the edge or inside 
the cavity, it can not go outside. These muscles are recruited like 
any other muscle in the model, they are just very strong and not 
close to the activity envelope, so they do not distrub the 
recruitment of the other muscles. In other words the model "feels" 
that the reaction force should fall within the cavity and it will 
change the recruitment of the normal muscles to ensure this, but it 
do not feel any cost of having a high normal force there, even 
though it is created by muscles, because these muscles are very strong, 
and should not be lying on the muscle activity envelope.

This way of calculating the reaction force can be switched off by 
excluding the file "GHReactions.any "from the Arm3D/jnt.any
and instead using the normal reactions of the GH joint.

*/
AnyFolder GHReactions={
  //Add extra nodes on the gh cavitas edge 
  AnySeg &Scapula = ..Seg.Scapula;
    
  Scapula={    
      // fit plane to glenoid surface
h
         AnyDrawNode drw = {
            ScaleXYZ = {0.005,0.005,0.005};
            Opacity = 0.8;
            RGB = {1,0,0};
         };//end AnyDrawNode
         AnyDrawRefFrame drwFrame = {
           Opacity = 0.5;
           RGB = {0.5,0,1};
           ScaleXYZ = {0.05,0.05,0.05};
         };// end anyDrawRefFrame
         AnyRefNode TrialGH = {
           #if GLOBAL_SIDE_RIGHT 
             sRel = {0.0,0.0,(1)*.....Sign*HUMERUS_RADIUS};
           #else
             sRel = {0.0,0.0,(-1)*.....Sign*HUMERUS_RADIUS};
           #endif
           AnyDrawNode drw = {ScaleXYZ = {0.005,0.005,0.005};};
           AnyDrawRefFrame drw1 = {};
            //end AnyDrawNode
         };// end TrialGH
     };// end GlenoidSurfaceNode
     
     // superior but called EdgeNode1 for labeling consistency
     AnyRefNode EdgeNode1 = {
         //sRel=.Scale({0.2796/1000,-27.6125/1000,-42.4286/1000}*.Mirror);
         sRel=.Scale({0.303/1000,-29.362/1000,-45.0311/1000}*.Mirror);
         AnyDrawNode drw={ScaleXYZ={0.002,0.002,0.002};};
      };
     AnyRefNode InferiorGlenoidNode = {
          //sRel=.Scale({-1.184/1000,-56.3125/1000,-20.4502/1000}*.Mirror);
          sRel=.Scale({-1.145/1000,-59.700/1000,-21.340/1000}*.Mirror);
         AnyDrawNode drw={ScaleXYZ={0.002,0.002,0.002};};
      };
      
     // anterior but called EdgeNode2 for labeling consistency
     AnyRefNode EdgeNode2 = {
         //sRel=.Scale({-7.6343/1000,-53.2762/1000,-40.233/1000}*.Mirror);
         sRel=.Scale({-8.06/1000,-56.505/1000,-42.600/1000}*.Mirror);
         AnyDrawNode drw={ScaleXYZ={0.002,0.002,0.002};};
      };
      
     AnyRefNode PosteriorGlenoidNode = {
         //sRel=.Scale({-1.29861/1000,-39.7644/1000,-13.1817/1000}*.Mirror);
         sRel=.Scale({-1.254/1000,-39.151/1000,-15.304/1000}*.Mirror);
         AnyDrawNode drw={ScaleXYZ={0.002,0.002,0.002};};
      };
     
     // extra picked points for force distribution over the glenoid (not used for patient registration)
     
     AnyRefNode SupAntGlenoidNode = {
         sRel=.Scale({-6.590/1000,-44.027/1000,-45.212/1000}*.Mirror);
         AnyDrawNode drw={ScaleXYZ={0.002,0.002,0.002};};
     };
     
     AnyRefNode InfAntGlenoidNode = {
         sRel=.Scale({-5.833/1000,-61.222/1000,-34.700/1000}*.Mirror);
         AnyDrawNode drw={ScaleXYZ={0.002,0.002,0.002};};
     };
     
     AnyRefNode SupPostGlenoidNode = {
         sRel=.Scale({1.955/1000,-28.885/1000,-32.258/1000}*.Mirror);
         AnyDrawNode drw={ScaleXYZ={0.002,0.002,0.002};};
     };
     
     AnyRefNode InfPostGlenoidNode = {
         sRel=.Scale({-1.289/1000,-45.478/1000,-13.373/1000}*.Mirror);
         AnyDrawNode drw={ScaleXYZ={0.002,0.002,0.002};};
     };
     
     AnyRefNode avgGHNode = {
       sRel={
         (....Seg.Scapula.EdgeNode2.sRel[0]+....Seg.Scapula.EdgeNode1.sRel[0]+
         ....Seg.Scapula.InferiorGlenoidNode.sRel[0]+
         ....Seg.Scapula.PosteriorGlenoidNode.sRel[0])/4,
         (....Seg.Scapula.EdgeNode2.sRel[1]+....Seg.Scapula.EdgeNode1.sRel[1]+
         ....Seg.Scapula.InferiorGlenoidNode.sRel[1]+
         ....Seg.Scapula.PosteriorGlenoidNode.sRel[1])/4,
         (....Seg.Scapula.EdgeNode2.sRel[2]+....Seg.Scapula.EdgeNode1.sRel[2]+
         ....Seg.Scapula.InferiorGlenoidNode.sRel[2]+
         ....Seg.Scapula.PosteriorGlenoidNode.sRel[2])/4
         };
         AnyDrawNode drw={ScaleXYZ={0.002,0.002,0.002};
           RGB = {0,0,1};
         };
     }; 
     
     AnyRefNode    GHReactionCenterNode = {
       sRel=.Scale({  -0.001,-0.048,-0.030}*.Mirror);
     };
  };
  
  AnyVec3 LineRGB={0,1,0}; 
  AnyVar LineThickness=0.0005;
  
  //create splines from cavitas egde to humerus gh node
  AnyKinPLine EdgeLine1 ={
    AnyRefNode &ref1=...Seg.Humerus.gh;
    AnyRefNode &ref2=...Seg.Scapula.EdgeNode1;
    AnyDrawPLine line ={RGB=..LineRGB; Thickness=..LineThickness;};
  };
  
  //create splines from cavitas egde to humerus gh node
  AnyKinPLine EdgeLine2 ={
    AnyRefNode &ref1=...Seg.Humerus.gh;
    AnyRefNode &ref2=...Seg.Scapula.InferiorGlenoidNode;
    AnyDrawPLine line ={RGB=..LineRGB; Thickness=..LineThickness;};
  };
  
  //create splines from cavitas egde to humerus gh node
  AnyKinPLine EdgeLine3 ={
    AnyRefNode &ref1=...Seg.Humerus.gh;
    AnyRefNode &ref2=...Seg.Scapula.EdgeNode2;
    AnyDrawPLine line ={RGB=..LineRGB; Thickness=..LineThickness;};
  };
  
  //create splines from cavitas egde to humerus gh node
  AnyKinPLine EdgeLine4 ={
    AnyRefNode &ref1=...Seg.Humerus.gh;
    AnyRefNode &ref2=...Seg.Scapula.PosteriorGlenoidNode;
    AnyDrawPLine line ={RGB=..LineRGB; Thickness=..LineThickness;};
  };
  
   //create splines from cavitas egde to humerus gh node
  AnyKinPLine EdgeLine5 ={
    AnyRefNode &ref1=...Seg.Humerus.gh;
    AnyRefNode &ref2=...Seg.Scapula.SupAntGlenoidNode;
    AnyDrawPLine line ={RGB=..LineRGB; Thickness=..LineThickness;};
  };
  
  //create splines from cavitas egde to humerus gh node
  AnyKinPLine EdgeLine6 ={
    AnyRefNode &ref1=...Seg.Humerus.gh;
    AnyRefNode &ref2=...Seg.Scapula.InfAntGlenoidNode;
    AnyDrawPLine line ={RGB=..LineRGB; Thickness=..LineThickness;};
  };
  
    //create splines from cavitas egde to humerus gh node
  AnyKinPLine EdgeLine7 ={
    AnyRefNode &ref1=...Seg.Humerus.gh;
    AnyRefNode &ref2=...Seg.Scapula.SupPostGlenoidNode;
    AnyDrawPLine line ={RGB=..LineRGB; Thickness=..LineThickness;};
  };
  
    //create splines from cavitas egde to humerus gh node
  AnyKinPLine EdgeLine8 ={
    AnyRefNode &ref1=...Seg.Humerus.gh;
    AnyRefNode &ref2=...Seg.Scapula.InfPostGlenoidNode;
    AnyDrawPLine line ={RGB=..LineRGB; Thickness=..LineThickness;};
  };
  
  AnyVar Strength =5000; 
  
  AnyMuscleModel MuscleMdl={F0=.Strength;};
  
  AnyGeneralMuscle EdgeMuscle1 ={
    AnyMuscleModel &ref1=.MuscleMdl;
    AnyKinPLine &ref2=.EdgeLine1;
    ForceDirection=1; //push
    EXCLUDE_MUSCLE_METABOLISM
  };
  AnyGeneralMuscle EdgeMuscle2 ={
    AnyMuscleModel &ref1=.MuscleMdl;
    AnyKinPLine &ref2=.EdgeLine2;
    ForceDirection=1; //push
    EXCLUDE_MUSCLE_METABOLISM
  };
  AnyGeneralMuscle EdgeMuscle3 ={
    AnyMuscleModel &ref1=.MuscleMdl;
    AnyKinPLine &ref2=.EdgeLine3;
    ForceDirection=1; //push
    EXCLUDE_MUSCLE_METABOLISM
  };
  AnyGeneralMuscle EdgeMuscle4 ={
    AnyMuscleModel &ref1=.MuscleMdl;
    AnyKinPLine &ref2=.EdgeLine4;
    ForceDirection=1; //push
    EXCLUDE_MUSCLE_METABOLISM
  };
    AnyGeneralMuscle EdgeMuscle5 ={
    AnyMuscleModel &ref1=.MuscleMdl;
    AnyKinPLine &ref2=.EdgeLine5;
    ForceDirection=1; //push
    EXCLUDE_MUSCLE_METABOLISM 
  };
  AnyGeneralMuscle EdgeMuscle6 ={
    AnyMuscleModel &ref1=.MuscleMdl;
    AnyKinPLine &ref2=.EdgeLine6;
    ForceDirection=1; //push
    EXCLUDE_MUSCLE_METABOLISM  
  };
  AnyGeneralMuscle EdgeMuscle7 ={
    AnyMuscleModel &ref1=.MuscleMdl;
    AnyKinPLine &ref2=.EdgeLine7;
    ForceDirection=1; //push
    EXCLUDE_MUSCLE_METABOLISM   
  };
  AnyGeneralMuscle EdgeMuscle8 ={
    AnyMuscleModel &ref1=.MuscleMdl;
    AnyKinPLine &ref2=.EdgeLine8;
    ForceDirection=1; //push
    EXCLUDE_MUSCLE_METABOLISM  
  };
  
  //make a force summation
  AnyFolder ResultantForce ={
    
    AnySeg &CenterNode=...Seg.Scapula;
    
    AnyVar L1=((CenterNode.EdgeNode1.r[0]-...Seg.Humerus.gh.r[0])^2+(CenterNode.EdgeNode1.r[1]-...Seg.Humerus.gh.r[1])^2+(CenterNode.EdgeNode1.r[2]-...Seg.Humerus.gh.r[2])^2)^0.5;
    AnyVec3  F1={
      CenterNode.EdgeNode1.r[0]-...Seg.Humerus.gh.r[0],
      CenterNode.EdgeNode1.r[1]-...Seg.Humerus.gh.r[1],
      CenterNode.EdgeNode1.r[2]-...Seg.Humerus.gh.r[2]
    }*.EdgeMuscle1.Ft/L1;
    
    AnyVar L2=((CenterNode.InferiorGlenoidNode.r[0]-...Seg.Humerus.gh.r[0])^2+(CenterNode.InferiorGlenoidNode.r[1]-...Seg.Humerus.gh.r[1])^2+(CenterNode.InferiorGlenoidNode.r[2]-...Seg.Humerus.gh.r[2])^2)^0.5;
    AnyVec3  F2={
      CenterNode.InferiorGlenoidNode.r[0]-...Seg.Humerus.gh.r[0],
      CenterNode.InferiorGlenoidNode.r[1]-...Seg.Humerus.gh.r[1],
      CenterNode.InferiorGlenoidNode.r[2]-...Seg.Humerus.gh.r[2]
    }*.EdgeMuscle2.Ft/L2;
    
    AnyVar L3=((CenterNode.EdgeNode2.r[0]-...Seg.Humerus.gh.r[0])^2+(CenterNode.EdgeNode2.r[1]-...Seg.Humerus.gh.r[1])^2+(CenterNode.EdgeNode2.r[2]-...Seg.Humerus.gh.r[2])^2)^0.5;
    AnyVec3  F3={
      CenterNode.EdgeNode2.r[0]-...Seg.Humerus.gh.r[0],
      CenterNode.EdgeNode2.r[1]-...Seg.Humerus.gh.r[1],
      CenterNode.EdgeNode2.r[2]-...Seg.Humerus.gh.r[2]
    }*.EdgeMuscle3.Ft/L3;
    
    AnyVar L4=((CenterNode.PosteriorGlenoidNode.r[0]-...Seg.Humerus.gh.r[0])^2+(CenterNode.PosteriorGlenoidNode.r[1]-...Seg.Humerus.gh.r[1])^2+(CenterNode.PosteriorGlenoidNode.r[2]-...Seg.Humerus.gh.r[2])^2)^0.5;
    AnyVec3  F4={
      CenterNode.PosteriorGlenoidNode.r[0]-...Seg.Humerus.gh.r[0],
      CenterNode.PosteriorGlenoidNode.r[1]-...Seg.Humerus.gh.r[1],
      CenterNode.PosteriorGlenoidNode.r[2]-...Seg.Humerus.gh.r[2]
    }*.EdgeMuscle4.Ft/L4;
    
    AnyVar L5=((CenterNode.SupAntGlenoidNode.r[0]-...Seg.Humerus.gh.r[0])^2+(CenterNode.SupAntGlenoidNode.r[1]-...Seg.Humerus.gh.r[1])^2+(CenterNode.SupAntGlenoidNode.r[2]-...Seg.Humerus.gh.r[2])^2)^0.5;
    AnyVec3  F5={
      CenterNode.SupAntGlenoidNode.r[0]-...Seg.Humerus.gh.r[0],
      CenterNode.SupAntGlenoidNode.r[1]-...Seg.Humerus.gh.r[1],
      CenterNode.SupAntGlenoidNode.r[2]-...Seg.Humerus.gh.r[2]
    }*.EdgeMuscle5.Ft/L5;
    
    AnyVar L6=((CenterNode.InfAntGlenoidNode.r[0]-...Seg.Humerus.gh.r[0])^2+(CenterNode.InfAntGlenoidNode.r[1]-...Seg.Humerus.gh.r[1])^2+(CenterNode.InfAntGlenoidNode.r[2]-...Seg.Humerus.gh.r[2])^2)^0.5;
    AnyVec3  F6={
      CenterNode.InfAntGlenoidNode.r[0]-...Seg.Humerus.gh.r[0],
      CenterNode.InfAntGlenoidNode.r[1]-...Seg.Humerus.gh.r[1],
      CenterNode.InfAntGlenoidNode.r[2]-...Seg.Humerus.gh.r[2]
    }*.EdgeMuscle6.Ft/L6;
    
    AnyVar L7=((CenterNode.SupPostGlenoidNode.r[0]-...Seg.Humerus.gh.r[0])^2+(CenterNode.SupPostGlenoidNode.r[1]-...Seg.Humerus.gh.r[1])^2+(CenterNode.SupPostGlenoidNode.r[2]-...Seg.Humerus.gh.r[2])^2)^0.5;
    AnyVec3  F7={
      CenterNode.SupPostGlenoidNode.r[0]-...Seg.Humerus.gh.r[0],
      CenterNode.SupPostGlenoidNode.r[1]-...Seg.Humerus.gh.r[1],
      CenterNode.SupPostGlenoidNode.r[2]-...Seg.Humerus.gh.r[2]
    }*.EdgeMuscle7.Ft/L7;
    
    AnyVar L8=((CenterNode.InfPostGlenoidNode.r[0]-...Seg.Humerus.gh.r[0])^2+(CenterNode.InfPostGlenoidNode.r[1]-...Seg.Humerus.gh.r[1])^2+(CenterNode.InfPostGlenoidNode.r[2]-...Seg.Humerus.gh.r[2])^2)^0.5;
    AnyVec3  F8={
      CenterNode.InfPostGlenoidNode.r[0]-...Seg.Humerus.gh.r[0],
      CenterNode.InfPostGlenoidNode.r[1]-...Seg.Humerus.gh.r[1],
      CenterNode.InfPostGlenoidNode.r[2]-...Seg.Humerus.gh.r[2]
    }*.EdgeMuscle8.Ft/L8;
    
    AnyVec3 FTotalGlobal=F1+F2+F3+F4+F5+F6+F7+F8;   
    AnyVec3 FTotalLocal = FTotalGlobal*...Seg.Scapula.gh.Axes;
  };
};
