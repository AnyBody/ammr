//AnyFolder &Humerus =Main.HumanModel.BodyModel.Right.ShoulderArm.Seg.Humerus;

//Humerus = {
  
  // Read a point cloud from an STL file (vertices)
  AnyFolder Input = {
    AnyFile file = "humerushead.stl";
    AnyInt number = STL_Size(file, 1)[0];
    AnyIntArray indices = iarr(0,1, number-1);
    AnyMatrix Points = .tr2(STL_Vertices(file, indices, 1));
  };
  
  AnyFunTransform3D &tr2=..Scaling.Humerus.ScaleFunction;
//  AnyFunTransform3DLin tr2 = {ScaleMat={{1,0,0},{0,1,0},{0,0,1}};Offset={0,0,0};}; 
  
  
  AnyDrawSurf humerus_head_2 = {FileName = .Input.file;RGB={0,1,0};AnyFunTransform3D &tr = .tr2; Visible = Off;};
  
  // Third test is to fit an oriented ellipsoid with a given symmetry axis (fitted surface is blue)
  AnyRefNode test_fitting_2 = {
    // construct a ref. frame with computed center and orientation
    sRel = test_ellipsoid_fit.sRel*.Mirror;
    ARel = test_ellipsoid_fit.ARel;
    AnyDrawRefFrame frame = {ScaleXYZ={1,1,1}*0.05;RGB={0,0,0}; Visible=Off;};
    AnySurfEllipsoidFit test_ellipsoid_fit = 
    {
      FixedAxes = On;
              AxisSymmetry = On;
              Axis = x;
      Points = ..tr2(..Input.Points);
////      AnyDrawParamSurf srf={RGB={0,0,1};};
    };
    
    AnySurfEllipsoid scaledanterior = {
      Radius = .test_ellipsoid_fit.Radius*{{1.3,0,0},{0,0.7,0},{0,0,0.9}}*1.7;
//              AnyDrawParamSurf srf={RGB={0,0,1};};
    };
    
    AnySurfEllipsoid scaledlateral = {
      Radius = .test_ellipsoid_fit.Radius*{{1,0,0},{0,1,0},{0,0,0.9}}*1.45;
//              AnyDrawParamSurf srf={RGB={1,0,1};}; 
    };
    
    AnySurfEllipsoid scaledposterior = {
      Radius = .test_ellipsoid_fit.Radius*{{1,0,0},{0,1,0},{0,0,0.9}}*1.27;
//      AnyDrawParamSurf srf={RGB={1,0,0};};
    };           
  };
//};
//AnyKinRotational SurfaceOrientationAngles = 
// {
//   AnyRefFrame& source = Main.HumanModel.BodyModel.Right.ShoulderArm.Seg.Clavicula;
//   AnyRefFrame& target = Main.HumanModel.BodyModel.Right.ShoulderArm.Seg.Humerus;
//          Type = RotAxesAngles;
//          Axis1 = x;
//          Axis2 = y;
//          Axis3 = z;
//        };
