
//This file is used for making a interface to the dof of the arm
//the added rotnodes are needed to be able to have the same rotation definitions for 
//the right and left side



AnyKinMeasureOrg CMCFlexion = {
  AnyFolder &ref1 = ..Seg.Hand.Carpals.CMC1;
  ref1 = {
    AnyRefNode RotNode={
      ARel={{1,0,0},{0,1,0},{0,0,1}};
    };
  };
  AnyFolder &Flex = ..Seg.Hand.Finger1.Seg.CMCJointSeg.FlexionExtensionJointNode;
  Flex = {
    AnyRefNode RotNode={
      ARel={{1,0,0},{0,1,0},{0,0,1}};
    };
  };
  
  AnyKinRotational CMCJoint = {
    
    Type = RotAxesAngles;
    AnyRefNode &ref1 = ...Seg.Hand.Carpals.CMC1.RotNode;
    AnyRefNode &ref2 = ...Seg.Hand.Finger1.Seg.CMCJointSeg.FlexionExtensionJointNode.RotNode;
    //    ref1 = {AnyDrawRefFrame drw = {RGB={1,0,0};ScaleXYZ ={1,1,1}*0.15;};};
    //    ref2 = {AnyDrawRefFrame drw = {RGB={0,0,1};ScaleXYZ ={1,1,1}*0.15;};};
    
  };
  MeasureOrganizer = {0};
};


AnyKinMeasureOrg CMCAbduction = {
  AnyFolder &ref1 = ..Seg.Hand.Finger1.Seg.CMCJointSeg.AbductionAdductionJointNode;
  ref1 = {
    AnyRefNode RotNode={
      ARel={{....Sign*1,0,0},{0,....Sign*1,0},{0,0,1}};
    };
  };
  AnyFolder &ref2 = ..Seg.Hand.Finger1.Seg.Metacarpal.CMCAbductionAdductionAxis;
  ref2 = {
    AnyRefNode RotNode={
      ARel={{....Sign*1,0,0},{0,....Sign*1,0},{0,0,1}};
    };
  };
  
  AnyKinRotational CMCJoint = {
    
    Type = RotAxesAngles;
    AnyRefNode &ref1 = ...Seg.Hand.Finger1.Seg.CMCJointSeg.AbductionAdductionJointNode.RotNode;
    AnyRefNode &ref2 = ...Seg.Hand.Finger1.Seg.Metacarpal.CMCAbductionAdductionAxis.RotNode;
    //    ref1 = {AnyDrawRefFrame drw = {RGB={1,0,0};ScaleXYZ ={1,1,1}*0.15;};};
    //    ref2 = {AnyDrawRefFrame drw = {RGB={0,0,1};ScaleXYZ ={1,1,1}*0.15;};};
    
  };
  MeasureOrganizer = {2};
};


AnyKinMeasureOrg MCPFlexion = {
  AnyFolder &ref1 = ..Seg.Hand.Finger1.Seg.Metacarpal.MCPFlexionExtensionAxis;
  ref1 = {
    AnyRefNode RotNode={
      ARel={{1,0,0},{0,1,0},{0,0,1}};
    };
  };
  AnyFolder &ref2 = ..Seg.Hand.Finger1.Seg.MCPJointSeg.FlexionExtensionAxis;
  ref2 = {
    AnyRefNode RotNode={
      ARel={{1,0,0},{0,1,0},{0,0,1}};
    };
  };
  
  AnyKinRotational MCPJoint = {
    
    Type = RotAxesAngles;
    AnyRefNode &ref1 = ...Seg.Hand.Finger1.Seg.Metacarpal.MCPFlexionExtensionAxis.RotNode;
    AnyRefNode &ref2 = ...Seg.Hand.Finger1.Seg.MCPJointSeg.FlexionExtensionAxis.RotNode;
    //    ref1 = {AnyDrawRefFrame drw = {RGB={1,0,0};ScaleXYZ ={1,1,1}*0.15;};};
    //    ref2 = {AnyDrawRefFrame drw = {RGB={0,0,1};ScaleXYZ ={1,1,1}*0.15;};};
    
  };
  MeasureOrganizer = {0};
};



AnyKinMeasureOrg MCPAbduction = {
  AnyFolder &ref1 = ..Seg.Hand.Finger1.Seg.MCPJointSeg.AbductionAdductionAxis;
  ref1 = {
    AnyRefNode RotNode={
      ARel={{....Sign*1,0,0},{0,1,0},{0,0,....Sign*1}};
    };
  };
  AnyFolder &ref2 = ..Seg.Hand.Finger1.Seg.ProximalPhalanx.MCPAbductionAdductionAxis;
  
  ref2 = {
    AnyRefNode RotNode={
      ARel={{....Sign*1,0,0},{0,1,0},{0,0,....Sign*1}};
    };
  };
  
  AnyKinRotational MCPJoint = {
    
    Type = RotAxesAngles;
    
    AnyRefNode &ref1 = ...Seg.Hand.Finger1.Seg.MCPJointSeg.AbductionAdductionAxis.RotNode;
    AnyRefNode &ref2 = ...Seg.Hand.Finger1.Seg.ProximalPhalanx.MCPAbductionAdductionAxis.RotNode;
    
    //    ref1 = {AnyDrawRefFrame drw = {RGB={1,0,0};ScaleXYZ ={1,1,1}*0.15;};};
    //    ref2 = {AnyDrawRefFrame drw = {RGB={0,0,1};ScaleXYZ ={1,1,1}*0.15;};};
    //    
  };
  MeasureOrganizer = {2};
};


AnyKinMeasureOrg DIP = {
  AnyFolder &ref1 = ..Seg.Hand.Finger1.Seg.ProximalPhalanx.IPFlexionExtensionAxis;
  ref1 = {
    AnyRefNode RotNode={
      ARel={{1,0,0},{0,1,0},{0,0,1}};
    };
  };
  AnyFolder &ref2 = ..Seg.Hand.Finger1.Seg.DistalPhalanx.IPFlexionExtensionAxis;
  
  ref2 = {
    AnyRefNode RotNode={
      ARel={{1,0,0},{0,1,0},{0,0,1}};
    };
  };
  
  AnyKinRotational DIP = {
    
    Type = RotAxesAngles;
    AnyRefNode &ref1 = ...Seg.Hand.Finger1.Seg.ProximalPhalanx.IPFlexionExtensionAxis.RotNode;
    AnyRefNode &ref2 = ...Seg.Hand.Finger1.Seg.DistalPhalanx.IPFlexionExtensionAxis.RotNode;
    
    //    ref1 = {AnyDrawRefFrame drw = {RGB={1,0,0};ScaleXYZ ={1,1,1}*0.15;};};
    //    ref2 = {AnyDrawRefFrame drw = {RGB={0,0,1};ScaleXYZ ={1,1,1}*0.15;};};
    
  };
  MeasureOrganizer = {0};
};


AnyKinMeasureOrg MCPAbduction_Finger2 = {
  AnyFolder &ref1 = ..Seg.Hand.Finger2.Seg.Metacarpal.DistalJointNode;
  ref1 = {
    AnyRefNode RotNodeAbd={
      ARel={{....Sign*1,0,0},{0,....Sign*1,0},{0,0,1}};
    };
  };
  AnyFolder &ref2 = ..Seg.Hand.Finger2.Seg.ProximalPhalanx.ProximalJointNode;
  
  ref2 = {
    AnyRefNode RotNodeAbd={
      ARel={{....Sign*1,0,0},{0,....Sign*1,0},{0,0,1}};
    };
  };
  
  AnyKinRotational MCPJoint = {
    
    Type = RotAxesAngles;
    
    AnyRefNode &ref1 = ...Seg.Hand.Finger2.Seg.Metacarpal.DistalJointNode.RotNodeAbd;
    AnyRefNode &ref2 = ...Seg.Hand.Finger2.Seg.ProximalPhalanx.ProximalJointNode.RotNodeAbd;
    
    //    ref1 = {AnyDrawRefFrame drw = {RGB={1,0,0};ScaleXYZ ={1,1,1}*0.15;};};
    //    ref2 = {AnyDrawRefFrame drw = {RGB={0,0,1};ScaleXYZ ={1,1,1}*0.15;};};
    //    
  };
  MeasureOrganizer = {2};
};



AnyKinMeasureOrg MCPFlexion_Finger2 = {
  AnyFolder &ref1 = ..Seg.Hand.Finger2.Seg.Metacarpal.DistalJointNode;
  ref1 = {
    AnyRefNode RotNodeFlex={
      ARel={{1,0,0},{0,1,0},{0,0,1}};
    };
  };
  AnyFolder &ref2 = ..Seg.Hand.Finger2.Seg.ProximalPhalanx.ProximalJointNode;
  ref2 = {
    AnyRefNode RotNodeFlex={
      ARel={{1,0,0},{0,1,0},{0,0,1}};
    };
  };
  
  AnyKinRotational MCPJoint = {
    
    Type = RotAxesAngles;
    AnyRefNode &ref1 = ...Seg.Hand.Finger2.Seg.Metacarpal.DistalJointNode.RotNodeFlex;
    AnyRefNode &ref2 = ...Seg.Hand.Finger2.Seg.ProximalPhalanx.ProximalJointNode.RotNodeFlex;
    //    ref1 = {AnyDrawRefFrame drw = {RGB={1,0,0};ScaleXYZ ={1,1,1}*0.15;};};
    //    ref2 = {AnyDrawRefFrame drw = {RGB={0,0,1};ScaleXYZ ={1,1,1}*0.15;};};
    
  };
  MeasureOrganizer = {0};
};




AnyKinMeasureOrg MCPAbduction_Finger3 = {
  AnyFolder &ref1 = ..Seg.Hand.Finger3.Seg.Metacarpal.DistalJointNode;
  ref1 = {
    AnyRefNode RotNodeAbd={
      ARel={{....Sign*1,0,0},{0,....Sign*1,0},{0,0,1}};
    };
  };
  AnyFolder &ref2 = ..Seg.Hand.Finger3.Seg.ProximalPhalanx.ProximalJointNode;
  
  ref2 = {
    AnyRefNode RotNodeAbd={
      ARel={{....Sign*1,0,0},{0,....Sign*1,0},{0,0,1}};
    };
  };
  
  AnyKinRotational MCPJoint = {
    
    Type = RotAxesAngles;
    
    AnyRefNode &ref1 = ...Seg.Hand.Finger3.Seg.Metacarpal.DistalJointNode.RotNodeAbd;
    AnyRefNode &ref2 = ...Seg.Hand.Finger3.Seg.ProximalPhalanx.ProximalJointNode.RotNodeAbd;
    
    //    ref1 = {AnyDrawRefFrame drw = {RGB={1,0,0};ScaleXYZ ={1,1,1}*0.15;};};
    //    ref2 = {AnyDrawRefFrame drw = {RGB={0,0,1};ScaleXYZ ={1,1,1}*0.15;};};
    //    
  };
  MeasureOrganizer = {2};
};



AnyKinMeasureOrg MCPFlexion_Finger3 = {
  AnyFolder &ref1 = ..Seg.Hand.Finger3.Seg.Metacarpal.DistalJointNode;
  ref1 = {
    AnyRefNode RotNodeFlex={
      ARel={{1,0,0},{0,1,0},{0,0,1}};
    };
  };
  AnyFolder &ref2 = ..Seg.Hand.Finger3.Seg.ProximalPhalanx.ProximalJointNode;
  ref2 = {
    AnyRefNode RotNodeFlex={
      ARel={{1,0,0},{0,1,0},{0,0,1}};
    };
  };
  
  AnyKinRotational MCPJoint = {
    
    Type = RotAxesAngles;
    AnyRefNode &ref1 = ...Seg.Hand.Finger3.Seg.Metacarpal.DistalJointNode.RotNodeFlex;
    AnyRefNode &ref2 = ...Seg.Hand.Finger3.Seg.ProximalPhalanx.ProximalJointNode.RotNodeFlex;
    //    ref1 = {AnyDrawRefFrame drw = {RGB={1,0,0};ScaleXYZ ={1,1,1}*0.15;};};
    //    ref2 = {AnyDrawRefFrame drw = {RGB={0,0,1};ScaleXYZ ={1,1,1}*0.15;};};
    
  };
  MeasureOrganizer = {0};
};





AnyKinMeasureOrg MCPAbduction_Finger4 = {
  AnyFolder &ref1 = ..Seg.Hand.Finger4.Seg.Metacarpal.DistalJointNode;
  ref1 = {
    AnyRefNode RotNodeAbd={
      ARel={{....Sign*1,0,0},{0,....Sign*1,0},{0,0,1}};
    };
  };
  AnyFolder &ref2 = ..Seg.Hand.Finger4.Seg.ProximalPhalanx.ProximalJointNode;
  
  ref2 = {
    AnyRefNode RotNodeAbd={
      ARel={{....Sign*1,0,0},{0,....Sign*1,0},{0,0,1}};
    };
  };
  
  AnyKinRotational MCPJoint = {
    
    Type = RotAxesAngles;
    
    AnyRefNode &ref1 = ...Seg.Hand.Finger4.Seg.Metacarpal.DistalJointNode.RotNodeAbd;
    AnyRefNode &ref2 = ...Seg.Hand.Finger4.Seg.ProximalPhalanx.ProximalJointNode.RotNodeAbd;
    
    //    ref1 = {AnyDrawRefFrame drw = {RGB={1,0,0};ScaleXYZ ={1,1,1}*0.15;};};
    //    ref2 = {AnyDrawRefFrame drw = {RGB={0,0,1};ScaleXYZ ={1,1,1}*0.15;};};
    //    
  };
  MeasureOrganizer = {2};
};



AnyKinMeasureOrg MCPFlexion_Finger4 = {
  AnyFolder &ref1 = ..Seg.Hand.Finger4.Seg.Metacarpal.DistalJointNode;
  ref1 = {
    AnyRefNode RotNodeFlex={
      //Sign muesste noch eingefgt werden
      ARel={{1,0,0},{0,1,0},{0,0,1}};
    };
  };
  AnyFolder &ref2 = ..Seg.Hand.Finger4.Seg.ProximalPhalanx.ProximalJointNode;
  ref2 = {
    AnyRefNode RotNodeFlex={
      //Sign muesste noch eingefgt werden
      ARel={{1,0,0},{0,1,0},{0,0,1}};
    };
  };
  
  AnyKinRotational MCPJoint = {
    
    Type = RotAxesAngles;
    AnyRefNode &ref1 = ...Seg.Hand.Finger4.Seg.Metacarpal.DistalJointNode.RotNodeFlex;
    AnyRefNode &ref2 = ...Seg.Hand.Finger4.Seg.ProximalPhalanx.ProximalJointNode.RotNodeFlex;
    //    ref1 = {AnyDrawRefFrame drw = {RGB={1,0,0};ScaleXYZ ={1,1,1}*0.15;};};
    //    ref2 = {AnyDrawRefFrame drw = {RGB={0,0,1};ScaleXYZ ={1,1,1}*0.15;};};
    
  };
  MeasureOrganizer = {0};
};




AnyKinMeasureOrg MCPAbduction_Finger5 = {
  AnyFolder &ref1 = ..Seg.Hand.Finger5.Seg.Metacarpal.DistalJointNode;
  ref1 = {
    AnyRefNode RotNodeAbd={
      ARel={{....Sign*1,0,0},{0,....Sign*1,0},{0,0,1}};
    };
  };
  AnyFolder &ref2 = ..Seg.Hand.Finger5.Seg.ProximalPhalanx.ProximalJointNode;
  
  ref2 = {
    AnyRefNode RotNodeAbd={
      ARel={{....Sign*1,0,0},{0,....Sign*1,0},{0,0,1}};
    };
  };
  
  AnyKinRotational MCPJoint = {
    
    Type = RotAxesAngles;
    
    AnyRefNode &ref1 = ...Seg.Hand.Finger5.Seg.Metacarpal.DistalJointNode.RotNodeAbd;
    AnyRefNode &ref2 = ...Seg.Hand.Finger5.Seg.ProximalPhalanx.ProximalJointNode.RotNodeAbd;
    
    //    ref1 = {AnyDrawRefFrame drw = {RGB={1,0,0};ScaleXYZ ={1,1,1}*0.15;};};
    //    ref2 = {AnyDrawRefFrame drw = {RGB={0,0,1};ScaleXYZ ={1,1,1}*0.15;};};
    //    
  };
  MeasureOrganizer = {2};
};



AnyKinMeasureOrg MCPFlexion_Finger5 = {
  AnyFolder &ref1 = ..Seg.Hand.Finger5.Seg.Metacarpal.DistalJointNode;
  ref1 = {
    AnyRefNode RotNodeFlex={
      ARel={{1,0,0},{0,1,0},{0,0,1}};
    };
  };
  AnyFolder &ref2 = ..Seg.Hand.Finger5.Seg.ProximalPhalanx.ProximalJointNode;
  ref2 = {
    AnyRefNode RotNodeFlex={
      ARel={{1,0,0},{0,1,0},{0,0,1}};
    };
  };
  
  AnyKinRotational MCPJoint = {
    
    Type = RotAxesAngles;
    AnyRefNode &ref1 = ...Seg.Hand.Finger5.Seg.Metacarpal.DistalJointNode.RotNodeFlex;
    AnyRefNode &ref2 = ...Seg.Hand.Finger5.Seg.ProximalPhalanx.ProximalJointNode.RotNodeFlex;
    //    ref1 = {AnyDrawRefFrame drw = {RGB={1,0,0};ScaleXYZ ={1,1,1}*0.15;};};
    //    ref2 = {AnyDrawRefFrame drw = {RGB={0,0,1};ScaleXYZ ={1,1,1}*0.15;};};
    
  };
  MeasureOrganizer = {0};
};



#if BM_HAND_FINGER_RHYTHM == ON

AnyKinMeasureLinComb FingerRhythm_DIP2 = 
{
  AnyRevoluteJoint &ref=  ..Seg.Hand.Finger2.Jnt.DIP;
  AnyKinMeasureFunComb1 FunComp = 
  {
    AnyKinMeasureOrg &Jnt = ..PIPAngle2;
    Functions = {&DIPflexion};  
    #include "FingerDriver.any" 
    AnyFunPolynomial &DIPflexion = Rhythm.DIPflexion;      
  }; 
  OutDim = 1;
  Coef = {{1,-1}}; 
};
AnyKinMeasureOrg PIPAngle2 ={
  AnyKinRotational Angle = 
  {
    Type = RotAxesAngles;
    AnyRefNode &ref1=...Seg.Hand.Finger2.Seg.ProximalPhalanx.DistalJointNode;
    AnyRefNode &ref2=...Seg.Hand.Finger2.Seg.MiddlePhalanx.ProximalJointNode;
  };
  MeasureOrganizer ={0};
};



AnyKinMeasureLinComb FingerRhythm_DIP3 = 
{
  AnyRevoluteJoint &ref=  ..Seg.Hand.Finger3.Jnt.DIP;
  AnyKinMeasureFunComb1 FunComp = 
  {
    AnyKinMeasureOrg &Jnt = ..PIPAngle3;
    Functions = {&DIPflexion};  
    #include "FingerDriver.any" 
    AnyFunPolynomial &DIPflexion = Rhythm.DIPflexion;      
  }; 
  OutDim = 1;
  Coef = {{1,-1}};
};
AnyKinMeasureOrg PIPAngle3 ={
  AnyKinRotational Angle = 
  {
    Type = RotAxesAngles;
    AnyRefNode &ref1=...Seg.Hand.Finger3.Seg.ProximalPhalanx.DistalJointNode;
    AnyRefNode &ref2=...Seg.Hand.Finger3.Seg.MiddlePhalanx.ProximalJointNode;
  };
  MeasureOrganizer ={0};
};


AnyKinMeasureLinComb FingerRhythm_DIP4 = 
{
  AnyRevoluteJoint &ref=  ..Seg.Hand.Finger4.Jnt.DIP;
  AnyKinMeasureFunComb1 FunComp = 
  {
    AnyKinMeasureOrg &Jnt = ..PIPAngle4;
    Functions = {&DIPflexion};  
    #include "FingerDriver.any" 
    AnyFunPolynomial &DIPflexion = Rhythm.DIPflexion;      
  }; 
  OutDim = 1;
  Coef = {{1,-1}};  
};
AnyKinMeasureOrg PIPAngle4 ={
  AnyKinRotational Angle = 
  {
    Type = RotAxesAngles;
    AnyRefNode &ref1=...Seg.Hand.Finger4.Seg.ProximalPhalanx.DistalJointNode;
    AnyRefNode &ref2=...Seg.Hand.Finger4.Seg.MiddlePhalanx.ProximalJointNode;
  };
  MeasureOrganizer ={0};
};





AnyKinMeasureLinComb FingerRhythm_DIP5 = 
{
  AnyRevoluteJoint &ref=  ..Seg.Hand.Finger5.Jnt.DIP;  
  AnyKinMeasureFunComb1 FunComp = 
  {
    AnyKinMeasureOrg &Jnt = ..PIPAngle5;
    Functions = {&DIPflexion};  
    #include "FingerDriver.any" 
    AnyFunPolynomial &DIPflexion = Rhythm.DIPflexion;      
  }; 
  OutDim = 1;
  Coef = {{1,-1}};
};
AnyKinMeasureOrg PIPAngle5 ={
  AnyKinRotational Angle = 
  {
    Type = RotAxesAngles;
    AnyRefNode &ref1=...Seg.Hand.Finger5.Seg.ProximalPhalanx.DistalJointNode;
    AnyRefNode &ref2=...Seg.Hand.Finger5.Seg.MiddlePhalanx.ProximalJointNode;
  };
  MeasureOrganizer ={0};
};


#endif
