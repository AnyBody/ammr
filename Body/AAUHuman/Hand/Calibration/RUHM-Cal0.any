/**This is the calibration1 file it will calibrate the ligaments in the hand */
AnyFolder HandRUHMCal0 ={  
  
  AnyVar Elbowflexion = 90;
  AnyVar Pronation = 90;  // positive: pronation ; negative: supination
  
  AnyVar Palmarflexion = 0;   // positive: dorsal extension; negative: palmar flexion
  AnyVar Radialabduction = 0;  // positive: radial abduction; negative: ulnar abduction
  
  AnyVar Finger1_CMC_flexion = 0;
  AnyVar Finger1_CMC_abduction = 40;
  AnyVar Finger1_MCP_flexion = 20;
  AnyVar Finger1_MCP_abduction = 0;
  AnyVar Finger1_DIP = 20;
  
  AnyVar Finger2_MCP_flexion = 0;
  AnyVar Finger2_MCP_abduction = -20;
  AnyVar Finger2_PIP = 0;
  AnyVar Finger2_DIP = 0;
  AnyVar Finger3_MCP_flexion = 0;
  AnyVar Finger3_MCP_abduction = -0;
  AnyVar Finger3_PIP = 0;
  AnyVar Finger3_DIP = 0;    
  AnyVar Finger4_MCP_flexion = 0;
  AnyVar Finger4_MCP_abduction = 20;
  AnyVar Finger4_PIP = 0;
  AnyVar Finger4_DIP = 0;  
  AnyVar Finger5_MCP_flexion = 0;
  AnyVar Finger5_MCP_abduction = 30;
  AnyVar Finger5_PIP = 0;
  AnyVar Finger5_DIP = 0;
  
  
  AnyFolder &ThoraxSegs =  ...BodyModel.Trunk.SegmentsThorax;
  AnyFolder &CervicalSegs =  ...BodyModel.Trunk.SegmentsCervicalSpine;
  AnyFolder &LumbarSegs =  ...BodyModel.Trunk.SegmentsLumbar;
  AnyFolder &LumbarSpineJoints =  ...BodyModel.Trunk.JointsLumbar;
  AnyFolder &LumbarCervicalJoints =  ...BodyModel.Trunk.JointsCervicalSpine;
  
  AnyFolder &Cylinder=  .SideHumanFolderRef.ShoulderArm.Mus.Pectoralis_minor2_cyl.Cylinder;

  AnyFolder &SegSideCal = .SideHumanFolderRef.ShoulderArm.Seg;
  AnyFolder &JointsSideCal = .SideHumanFolderRef.ShoulderArm.Jnt;

  #if BM_ARM_DELTOID_WRAPPING == _DELTOID_WRAPPING_RAKE_
  AnyFolder& DeltoidRakeRef = .SideHumanFolderRef.ShoulderArm.Mus.ArtificialRake;
  #else
  AnyFolder& DeltoidWrappingPosteriorRef = .SideHumanFolderRef.ShoulderArm.Mus.DeltoidWrappingPosterior;
  AnyFolder& DeltoidWrappingLateralRef = .SideHumanFolderRef.ShoulderArm.Mus.DeltoidWrappingLateral;
  AnyFolder& DeltoidWrappingAnteriorRef = .SideHumanFolderRef.ShoulderArm.Mus.DeltoidWrappingAnterior;
  #endif
  
  AnyFolder& LastissimusWrappingRef = .SideHumanFolderRef.ShoulderArm.Mus.LatissimusDorsiWrapping;

  
  AnyFolder &MusCalSide =  .SideHumanFolderRef.ShoulderArm.Mus;
  AnyFolder &MusParCalSide =  .SideHumanFolderRef.ShoulderArm.MusPar;
  
  AnyFixedRefFrame ground = {
    AnyRefNode node = { 
      ARel=.....BodyModel.Trunk.SegmentsThorax.ThoraxSeg.Axes0; 
      sRel=.....BodyModel.Trunk.SegmentsThorax.ThoraxSeg.r0;
    };
  };
  
  AnySphericalJoint ThoraxGround={
    AnyRefFrame &Ground = .ground.node;
    AnyRefFrame &Sacrum= ....BodyModel.Trunk.SegmentsThorax.ThoraxSeg;
  };
  
  AnyKinEqSimpleDriver  ThoraxGroundDriver = {
    AnySphericalJoint &Jnt = .ThoraxGround;
    DriverPos = {0,0,0};
    DriverVel = {0,0,0};
    Reaction.Type = {Off,Off,Off}; 
  };
  
  
  //Neck driver 
  AnyKinEqSimpleDriver NeckJntDriver = {
    AnyKinMeasure &lb = ....BodyModel.Interface.Trunk.SkullThoraxLateralBending;
    AnyKinMeasure &ar = ....BodyModel.Interface.Trunk.SkullThoraxRotation;
    AnyKinMeasure &fe = ....BodyModel.Interface.Trunk.SkullThoraxFlexion;
    DriverPos = pi/180*{0,0,0};
    DriverVel = pi/180*{0,0,0};
    Reaction.Type = {Off, Off, Off};
  };
  
  AnyKinEqSimpleDriver ThoraxDriver ={
    AnyKinMeasureOrg &Ref2 = ....BodyModel.Interface.Trunk.PelvisThoraxLateralBending;        
    AnyKinMeasureOrg &Ref3 = ....BodyModel.Interface.Trunk.PelvisThoraxRotation;   
    AnyKinMeasureOrg &Ref1 = ....BodyModel.Interface.Trunk.PelvisThoraxExtension;
    DriverPos = pi/180*{0,0,0};
    DriverVel = pi/180*{0,0,0};
    Reaction.Type = {On,On,On};  
  };
  
  #if !BM_ARM_SHOULDER_RHYTHM
  AnyKinEqSimpleDriver SCDriver ={
    AnyKinMeasureOrg SC_measure = {
      AnyKinMeasure& ref = ...SideInterfaceFolderRef.SternoClavicularProtraction.SCRot;
      MeasureOrganizer = {0,1};
    };
    DriverPos = {-0.6338205, 0.2559457};
    DriverVel = {-0.0,-0.0};
    Reaction.Type={Off,Off};
  };
  #endif
  
  AnyKinEqSimpleDriver WristDriver ={
    AnyKinMeasure &WF = ..SideInterfaceFolderRef.WristFlexion;
    AnyKinMeasure &WA = ..SideInterfaceFolderRef.WristAbduction;
    DriverPos = {.Palmarflexion,.Radialabduction}*pi/180;
    DriverVel = {0,0};
    Reaction.Type={On,On};
  };
  
  AnyKinEqSimpleDriver FEDriver ={
    AnyKinMeasure &FE = ..SideInterfaceFolderRef.ElbowFlexion;
    DriverPos = {.Elbowflexion*pi/180};  
    DriverVel = {0};
    Reaction.Type = {Off};  
  };
  
  AnyKinEqSimpleDriver PSDriver ={
    AnyKinMeasure &PS = ..SideInterfaceFolderRef.ElbowPronation;
    DriverPos = {.Pronation};
    DriverVel = pi/180*{ 0.0 };
    Reaction.Type = {Off};
  };
  
  AnyKinEqSimpleDriver GHDriver ={
    AnyKinRotational &GHRotR = ..SideInterfaceFolderRef.GlenohumeralFlexion.GHMeasure;
    DriverPos = pi/180*{10.0,0,0.0 };  
    DriverVel = {0,0,0};
    Reaction.Type = {Off,Off,Off};  
  };
  //---------------------------------------------------------------------
  //Finger drivers
  //finger1
  AnyKinEqSimpleDriver CMC1Flexion={
    AnyRevoluteJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger1.Jnt.CMCFlexion;
    DriverPos={.Finger1_CMC_flexion}*pi/180;  
    DriverVel={0};
  };
  
  AnyKinEqSimpleDriver CMC1Abduction={
    AnyRevoluteJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger1.Jnt.CMCAbduction;
    DriverPos={.Finger1_CMC_abduction}*pi/180;  
    DriverVel={0};
  };
  
  
  
  AnyKinEqSimpleDriver MCP1Flexion={
    
    AnyRevoluteJoint &ref=..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger1.Jnt.MCPFlexion;
    DriverPos={.Finger1_MCP_flexion}*pi/180;
    DriverVel={0};
    
  };
  AnyKinEqSimpleDriver MCP1Abduction={
    
    AnyRevoluteJoint &ref=..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger1.Jnt.MCPAbduction;
    DriverPos={.Finger1_MCP_abduction}*pi/180;
    DriverVel={0};
    
  };
  
  AnyKinEqSimpleDriver DIP1={
    AnyRevoluteJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger1.Jnt.DIP;
    DriverPos={.Finger1_DIP}*pi/180;  
    DriverVel={0};
  };
  
  
  // finger2
  AnyKinEqSimpleDriver CMC2={
    AnyUniversalJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger2.Jnt.CMC;
    DriverPos={0,0};  
    DriverVel={0,0};
  };
  AnyKinEqSimpleDriver MCP2={
    AnyUniversalJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger2.Jnt.MCP;
    DriverPos={.Finger2_MCP_flexion,.Finger2_MCP_abduction}*pi/180;  
    DriverVel={0,0};
  };  
  AnyKinEqSimpleDriver PIP2={
    AnyRevoluteJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger2.Jnt.PIP;
    DriverPos={.Finger2_PIP}*pi/180;  
    DriverVel={0};
  };
  AnyKinEqSimpleDriver DIP2={
    AnyRevoluteJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger2.Jnt.DIP;
    DriverPos={.Finger2_DIP}*pi/180;  
    DriverVel={0};
  };
  
  
  
  // finger3
  AnyKinEqSimpleDriver CMC3={
    AnyUniversalJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger3.Jnt.CMC;
    DriverPos={0,0};  
    DriverVel={0,0};
  };
  AnyKinEqSimpleDriver MCP3={
    AnyUniversalJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger3.Jnt.MCP;
    DriverPos={.Finger3_MCP_flexion,.Finger3_MCP_abduction}*pi/180;  
    DriverVel={0,0};
  };  
  AnyKinEqSimpleDriver PIP3={
    AnyRevoluteJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger3.Jnt.PIP;
    DriverPos={.Finger3_PIP}*pi/180;  
    DriverVel={0};
  };
  AnyKinEqSimpleDriver DIP3={
    AnyRevoluteJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger3.Jnt.DIP;
    DriverPos={.Finger3_DIP}*pi/180;  
    DriverVel={0};
  };
  
  
  //finger4
  AnyKinEqSimpleDriver CMC4={
    AnyUniversalJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger4.Jnt.CMC;
    DriverPos={0,0}*pi/180;  
    DriverVel={0,0};
  };
  AnyKinEqSimpleDriver MCP4={
    AnyUniversalJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger4.Jnt.MCP;
    DriverPos={.Finger4_MCP_flexion,.Finger4_MCP_abduction}*pi/180;  
    DriverVel={0,0};
  };  
  AnyKinEqSimpleDriver PIP4={
    AnyRevoluteJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger4.Jnt.PIP;
    DriverPos={.Finger4_PIP}*pi/180;  
    DriverVel={0};
  };
  AnyKinEqSimpleDriver DIP4={
    AnyRevoluteJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger4.Jnt.DIP;
    DriverPos={.Finger4_DIP}*pi/180;  
    DriverVel={0};
  };
  
  
  // finger5
  AnyKinEqSimpleDriver CMC5={
    AnyUniversalJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger5.Jnt.CMC;
    DriverPos={0,0};  
    DriverVel={0,0};
  };
  AnyKinEqSimpleDriver MCP5={
    AnyUniversalJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger5.Jnt.MCP;
    DriverPos={.Finger5_MCP_flexion,.Finger5_MCP_abduction}*pi/180;  
    DriverVel={0,0};
  };  
  AnyKinEqSimpleDriver PIP5={
    AnyRevoluteJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger5.Jnt.PIP;
    DriverPos={.Finger5_PIP}*pi/180;  
    DriverVel={0};
  };
  AnyKinEqSimpleDriver DIP5={
    AnyRevoluteJoint &ref=  ..SideHumanFolderRef.ShoulderArm.Seg.Hand.Finger5.Jnt.DIP;
    DriverPos={.Finger5_DIP}*pi/180;  
    DriverVel={0};
  };  
  

};
// The study: Operations to be performed on the model
AnyBodyCalibrationStudy HandCalibrationStudy01 = {
  AnyFolder &ref=.HandRUHMCal0;
  
  AnyString HandMusPrefix = CompleteNameOf(&.SideHumanFolderRef.ShoulderArm.Mus.Hand);

  MuscleArr = ObjSearch(HandMusPrefix + ".*", "AnyMuscle");

  
  
  
  nStep = 1;
  Kinematics.KinematicTol = 1e-06;
  InitialConditions.SmallStepAssumptionOnOff = Off;
  Kinematics.SmallStepAssumptionOnOff = On;
  InitialConditions.PosAnalysisOnlyOnOff = On;
  Kinematics.PosAnalysisOnlyOnOff = On;
};

