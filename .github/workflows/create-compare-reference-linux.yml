name: Create compare reference (Linux worker)

on:
  pull_request:
  push:
    tags:
      - 'ammr-*'
  workflow_dispatch:
    inputs:
      git_reference:
        description: 'Which Git reference to check out. Examples: "refs/tags/v0.2.1", "refs/heads/master".'
        default: refs/tags/vX.Y.Z
        required: true


concurrency: 
  group: compare-test-${{ github.ref }}
  cancel-in-progress: true


jobs:
  test:
    runs-on: [self-hosted, linux]
    container: ghcr.io/anybody/anybodycon-linux:latest

    steps:
      - name: Set variables
        env:
          DEFAULT_GIT_REFERENCE: refs/heads/master
        run: |
          echo "GIT_REFERENCE=${{ github.event.inputs.git_reference || env.DEFAULT_GIT_REFERENCE }}" >> $GITHUB_ENV


      - name: Checkout repository at ${{ env.GIT_REFERENCE }}
        uses: actions/checkout@v2
        with:
          ref: ${{ env.GIT_REFERENCE }}
          fetch-depth: 0

      - name: Store AMS Version
        shell: python
        run: |
          import os, anypytools
          ver = anypytools.tools.anybodycon_version()
          ver = ver.partition(" (")[0].replace(" ","")
          with open(os.environ["GITHUB_ENV"], "a") as fp:
            fp.write(f"AMS_VERSION={ver}")

      - name: Run test for compare
        env:
          RLM_LICENSE_PASSWORD: ${{ secrets.LICENSE_PASSWORD }}
        run: |
          pytest --anytest-output=${{runner.temp}} --anytest-name=${{ env.GIT_REFERENCE }} Tests/Applications/test_JumpingJack.any

      - name: Compress compare data
        working-directory: ${{runner.temp}}
        run: |
          echo $PWD
          cd ${{runner.temp}}
          ls .
          tar -zcvf compare-data.tar.gz ./${{ env.GIT_REFERENCE }}

      - name: install azure storage blob
        run: | 
          mamba install azure-storage-blob

      - name: Create Upload script
        env: 
          AZURE_CONN_STR: ${{ secrets.AZURE_CONN_STR }}
          AZURE_BLOB_NAME: ${{ env.COMPARE_TEST_NAME }}
        working-directory: ${{runner.temp}}
        shell: python
        run: |
          import os, sys
          from azure.storage.blob import BlobServiceClient
          container_name = "linux-ams-" + os.environ['AMS_VERSION'].replace('.','-')
          blob_name = os.environ["AZURE_BLOB_NAME"]
          container_client = BlobServiceClient.from_connection_string(
              os.environ["AZURE_CONN_STR"]
          ).get_container_client(container_name)
          if not container_client.exists():
            container_client.create_container()
          with open("compare-data.tar.gz", "rb") as fh:
              container_client.upload_blob(blob_name, fh, overwrite=True)

