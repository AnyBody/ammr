
name: Documentation build and deploy

on:
  push:
     branches: [ master ]
     tags: ['*']
  pull_request:
     branches: [ master ]
  workflow_dispatch:

concurrency: 
  group: ci-docs-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'anybody' || github.event_name != 'push'

    defaults:
      run:
        shell: bash -leo pipefail {0} {0}
  
    steps:
      - uses: actions/checkout@v4
        
      - name: Install mamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: Docs/environment.yaml
                            
      - name: Build Documentation
        run: |
          set -e
          cd Docs
          sphinx-build -M html . _build -W --keep-going -j auto -a -t draft
          cd ..
          mkdir -p public/beta
          cp -rT Docs/_build/html public/beta

      - name: Link check
        run: |
          set -e
          cd Docs
          sphinx-build -M linkcheck . _build -W --keep-going -a -j auto -q 
          
      - name: Build last tagged version
        if: github.ref == 'refs/heads/master'
        run: |
          git fetch --shallow-since=2020-07-07
          git checkout $(git describe --tags `git rev-list --tags=ammr* --max-count=1`);
          micromamba create -n ammr-tagged -y -f Docs/environment.yaml
          micromamba activate ammr-tagged
          cd Docs
          make clean
          sphinx-build -M html . _build -a
          cd ..
          cp -rT Docs/_build/html public

      - uses: actions/upload-pages-artifact@v2
        with: 
          path: public
           

  deploy:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      pages: write    
      id-token: write 

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
          
