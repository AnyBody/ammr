
variables:
  GIT_STRATEGY: fetch


other_tests:
  stage: test
  script:
    - mkdir Documentation
    - pytest "--ignore=Tests/Applications" -n 4
  only: 
    - branches@anybody/beta/ammr
    - branches@anybody/github-mirror/ammr
  except:
    - master@anybody/github-mirror/ammr
    - /^docs.*$/
  tags:
    - ams

Application_tests:
  stage: test
  script:
    - mkdir Documentation
    - pytest Tests/Applications -n 4 --timeout=1700
  only: 
    - branches@anybody/beta/ammr
    - branches@anybody/github-mirror/ammr
  except:
    - master@anybody/github-mirror/ammr
    - /^docs.*$/
  tags:
    - ams



test_docs:
  image:
    name: continuumio/miniconda3
  before_script:
    - mkdir -p "/conda-cache"
    - export CONDA_PKGS_DIRS="/conda-cache"
    - conda config --set always_yes yes --set changeps1 no
    - conda info -a
    - conda install -q sphinx make
    - conda install -q -c conda-forge  cloud_sptheme pygments_anyscript matplotlib pillow
  script:
    - set -e
    - cd Docs
    - make html-dev
    - cd ..
    - mkdir -p public/dev
    - cp -rT Docs/_build/html public/dev
    - git checkout $(git describe --tags `git rev-list --tags --max-count=1`);
    - cd Docs
    - make clean
    - make html
    - cd ..
    - cp -rT Docs/_build/html public
  only:
    - /^docs.*$/
    - master@anybody/beta/ammr
    - tags@anybody/beta/ammr
  cache:
    paths:
      - /conda-cache
  artifacts:
    paths:
    - public
    expire_in: 10 hours



deploy_docs:
  stage: deploy
  environment:
    name: staging
    url: https://anyscript.org/ammr-doc/dev
  before_script:
    - gem install dpl
  only:
    - master@anybody/beta/ammr
    - tags@anybody/beta/ammr
  script:
    - touch public/.nojekyll
    - ls public
    - apt-get update
    - apt-get install -y rsync
    - dpl --provider=pages --repo="AnyBody/ammr-doc" --target-branch=master --local-dir="public" --skip_cleanup --github-token=$GITHUB_TOKEN 
  #when: manual
  tags:
    - docker
    - ruby




# deploy_docs:
#   stage: deploy
#   script:
#     - cd Docs/_build/html
#     - ls
#   only: 
#     - tags
#   except:
#     - branches
#   tags:
#     - docker
#     - linux

