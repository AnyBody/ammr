  
#class_template OptimizeAnthropometricsOnOff (
  PELVIS_WIDTH=0,
  HEAD_HEIGHT =0,
  TRUNK_HEIGHT = 0,
  RIGHT_THIGH_LENGTH =0,
  LEFT_THIGH_LENGTH =0,
  RIGHT_SHANK_LENGTH =0,
  LEFT_SHANK_LENGTH =0,
  RIGHT_FOOT_LENGTH =0,
  LEFT_FOOT_LENGTH =0,
  RIGHT_UPPERARM_LENGTH =0,
  LEFT_UPPERARM_LENGTH =0,
  RIGHT_LOWERARM_LENGTH =0,
  LEFT_LOWERARM_LENGTH =0,
  RIGHT_HAND_LENGTH = 0,
  LEFT_HAND_LENGTH = 0,
  RIGHT_VARUS_VALGUS = 0,
  LEFT_VARUS_VALGUS = 0,
//  RIGHT_TIBIAL_TORSION = 0,
//  LEFT_TIBIAL_TORSION = 0,
  LEFT_RIGHT_SYMMETRY = 1,
  PARAMETER_OPT_STUDY = Main.Studies.ParameterIdentification,
  SEGMENTS_LENGTHS = Main.HumanModel.Anthropometrics.SegmentDimensions,
  HUMAN_MODEL_FOLDER = Main.HumanModel
  ){
  
  // These should be set as default values in the argument to the tempalte                                              
  Main.ModelSetup.ParameterIdentification =
  {    
    AnyDesVar PelvisWidth = {
      Val = SEGMENTS_LENGTHS.PelvisWidth;
      Min = 0.05;
      Max = 0.5;
    };
    #if PELVIS_WIDTH
    PARAMETER_OPT_STUDY = { AnyDesVar& PelvisWidth = Main.ModelSetup.ParameterIdentification.PelvisWidth; };
    #endif
    
    AnyDesVar HeadHeight = {
      Val = SEGMENTS_LENGTHS.HeadHeight;
      Min = 0.05;
      Max = 0.5;
    };
    #if HEAD_HEIGHT
    PARAMETER_OPT_STUDY = { AnyDesVar& HeadHeight = Main.ModelSetup.ParameterIdentification.HeadHeight; };
    #endif
    
    AnyDesVar TrunkHeight = {
      Val = SEGMENTS_LENGTHS.TrunkHeight;
      Min = 0.1;
      Max = 1.5;
    };
    #if TRUNK_HEIGHT
    PARAMETER_OPT_STUDY = { AnyDesVar& TrunkHeight = Main.ModelSetup.ParameterIdentification.TrunkHeight; };
    #endif
        
    AnyDesVar RightThighLength = {
      Val = SEGMENTS_LENGTHS.Right.ThighLength;
      Min = 0.1;
      Max = 1;
    };
    #if RIGHT_THIGH_LENGTH
    PARAMETER_OPT_STUDY = { AnyDesVar& RightThighLength = Main.ModelSetup.ParameterIdentification.RightThighLength; };
    #endif
    
    AnyDesVar LeftThighLength = {
      Val = SEGMENTS_LENGTHS.Left.ThighLength;
      Min = 0.1;
      Max = 1;
    };
    #if LEFT_THIGH_LENGTH
    PARAMETER_OPT_STUDY = { AnyDesVar& LeftThighLength = Main.ModelSetup.ParameterIdentification.LeftThighLength; };
    #endif
    
    AnyDesMeasure ThighLengthSymmetry = {
      Val = .LeftThighLength.Val - .RightThighLength.Val;
      Type = EqualToZero;
    };
    #if RIGHT_THIGH_LENGTH & LEFT_THIGH_LENGTH & LEFT_RIGHT_SYMMETRY
    PARAMETER_OPT_STUDY = { AnyDesMeasure& ThighLengthSymmetry = Main.ModelSetup.ParameterIdentification.ThighLengthSymmetry; };
    #endif
    
    
    AnyDesVar RightShankLength = {
      Val = SEGMENTS_LENGTHS.Right.ShankLength;
      Min = 0.1;
      Max = 1;
    };
    #if RIGHT_SHANK_LENGTH
    PARAMETER_OPT_STUDY = { AnyDesVar& RightShankLength = Main.ModelSetup.ParameterIdentification.RightShankLength; };
    #endif
    
    AnyDesVar LeftShankLength = {
      Val = SEGMENTS_LENGTHS.Left.ShankLength;
      Min = 0.1;
      Max = 1;
    };
    #if LEFT_SHANK_LENGTH
    PARAMETER_OPT_STUDY = { AnyDesVar& LeftShankLength = Main.ModelSetup.ParameterIdentification.LeftShankLength; };
    #endif
    
    AnyDesMeasure ShankLengthSymmetry = {
      Val = .LeftShankLength.Val - .RightShankLength.Val;
      Type = EqualToZero;
    };
    #if RIGHT_SHANK_LENGTH & LEFT_SHANK_LENGTH & LEFT_RIGHT_SYMMETRY
    PARAMETER_OPT_STUDY = { AnyDesMeasure& ShankLengthSymmetry = Main.ModelSetup.ParameterIdentification.ShankLengthSymmetry; };
    #endif
    
    
    
    AnyDesVar RightFootLength = {
      Val = SEGMENTS_LENGTHS.Right.FootLength;
      Min = 0.05;
      Max = 0.5;
    };
    #if RIGHT_FOOT_LENGTH
    PARAMETER_OPT_STUDY = { AnyDesVar& RightFootLength = Main.ModelSetup.ParameterIdentification.RightFootLength; };
    #endif
    
    AnyDesVar LeftFootLength = {
      Val = SEGMENTS_LENGTHS.Left.FootLength;
      Min = 0.05;
      Max = 0.5;
    };
    #if LEFT_FOOT_LENGTH
    PARAMETER_OPT_STUDY = { AnyDesVar& LeftFootLength = Main.ModelSetup.ParameterIdentification.LeftFootLength; };
    #endif
    
    AnyDesMeasure FootLengthSymmetry = {
      Val = .LeftFootLength.Val - .RightFootLength.Val;
      Type = EqualToZero;
    };
    #if RIGHT_FOOT_LENGTH & LEFT_FOOT_LENGTH & LEFT_RIGHT_SYMMETRY
    PARAMETER_OPT_STUDY = { AnyDesMeasure& FootLengthSymmetry = Main.ModelSetup.ParameterIdentification.FootLengthSymmetry; };
    #endif    
    
    
    
    
    AnyDesVar RightUpperArmLength = {
      Val = SEGMENTS_LENGTHS.Right.UpperArmLength;
      Min = 0.01;
      Max = 1;
    };
    #if RIGHT_UPPERARM_LENGTH
    PARAMETER_OPT_STUDY = { AnyDesVar& RightUpperArmLength = Main.ModelSetup.ParameterIdentification.RightUpperArmLength; };
    #endif
    
    AnyDesVar LeftUpperArmLength = {
      Val = SEGMENTS_LENGTHS.Left.UpperArmLength;
      Min = 0.1;
      Max = 1;
    };
    #if LEFT_UPPERARM_LENGTH
    PARAMETER_OPT_STUDY = { AnyDesVar& LeftUpperArmLength = Main.ModelSetup.ParameterIdentification.LeftUpperArmLength; };
    #endif
    
    AnyDesMeasure UpperArmLengthSymmetry = {
      Val = .LeftUpperArmLength.Val - .RightUpperArmLength.Val;
      Type = EqualToZero;
    };
    #if RIGHT_UPPERARM_LENGTH & LEFT_UPPERARM_LENGTH & LEFT_RIGHT_SYMMETRY
    PARAMETER_OPT_STUDY = { AnyDesMeasure& UpperArmLengthSymmetry = Main.ModelSetup.ParameterIdentification.UpperArmLengthSymmetry; };
    #endif    
        
    
    
    
    AnyDesVar RightLowerArmLength = {
      Val = SEGMENTS_LENGTHS.Right.LowerArmLength;
      Min = 0.1;
      Max = 1;
    };
    #if RIGHT_LOWERARM_LENGTH
    PARAMETER_OPT_STUDY = { AnyDesVar& RightLowerArmLength = Main.ModelSetup.ParameterIdentification.RightLowerArmLength; };
    #endif
    
    AnyDesVar LeftLowerArmLength = {
      Val = SEGMENTS_LENGTHS.Left.LowerArmLength;
      Min = 0.1;
      Max = 1;
    };
    #if LEFT_LOWERARM_LENGTH
    PARAMETER_OPT_STUDY = { AnyDesVar& LeftLowerArmLength = Main.ModelSetup.ParameterIdentification.LeftLowerArmLength; };
    #endif
    
    AnyDesMeasure LowerArmLengthSymmetry = {
      Val = .LeftLowerArmLength.Val - .RightLowerArmLength.Val;
      Type = EqualToZero;
    };
    #if RIGHT_LOWERARM_LENGTH & LEFT_LOWERARM_LENGTH & LEFT_RIGHT_SYMMETRY
    PARAMETER_OPT_STUDY = { AnyDesMeasure& LowerArmLengthSymmetry = Main.ModelSetup.ParameterIdentification.LowerArmLengthSymmetry; };
    #endif    
        
   
    
    
    
    
    AnyDesVar RightHandLength = {
      Val = SEGMENTS_LENGTHS.Right.HandLength;
      Min = 0.05;
      Max = 0.5;
    };
    #if RIGHT_HAND_LENGTH
    PARAMETER_OPT_STUDY = { AnyDesVar& RightHandLength = Main.ModelSetup.ParameterIdentification.RightHandLength; };
    #endif
    
    AnyDesVar LeftHandLength = {
      Val = SEGMENTS_LENGTHS.Left.HandLength;
      Min = 0.05;
      Max = 0.5;
    };
    #if LEFT_HAND_LENGTH
    PARAMETER_OPT_STUDY = { AnyDesVar& LeftHandLength = Main.ModelSetup.ParameterIdentification.LeftHandLength; };
    #endif
    
    AnyDesMeasure HandLengthSymmetry = {
      Val = .LeftHandLength.Val - .RightHandLength.Val;
      Type = EqualToZero;
    };
    #if RIGHT_HAND_LENGTH & LEFT_HAND_LENGTH & LEFT_RIGHT_SYMMETRY
    PARAMETER_OPT_STUDY = { AnyDesMeasure& HandLengthSymmetry = Main.ModelSetup.ParameterIdentification.HandLengthSymmetry; };
    #endif    
    
    
//    
//    AnyDesVar RightTibialTorsionOffset = {
//      Val = HUMAN_MODEL_FOLDER.BodyModel.Right.Leg.Seg.Shank.AnkleJoint.TibialTorsionOffset;
//      Min = -pi/4;
//      Max = pi/4;
//    };
//    #if RIGHT_TIBIAL_TORSION
//    PARAMETER_OPT_STUDY = { AnyDesVar& RightTibialTorsionOffset = Main.ModelSetup.ParameterIdentification.RightTibialTorsionOffset; };
//    #endif
//    
//    AnyDesVar LeftTibialTorsionOffset = {
//      Val = HUMAN_MODEL_FOLDER.BodyModel.Left.Leg.Seg.Shank.AnkleJoint.TibialTorsionOffset;
//      Min = -pi/4;
//      Max = pi/4;
//    };
//    #if LEFT_TIBIAL_TORSION
//    PARAMETER_OPT_STUDY = { AnyDesVar& LeftTibialTorsionOffset = Main.ModelSetup.ParameterIdentification.LeftTibialTorsionOffset; };
//    #endif
//    
//    AnyDesMeasure TibialTorsionSymmetry = {
//      Val = .LeftTibialTorsionOffset.Val + .RightTibialTorsionOffset.Val;
//      Type = EqualToZero;
//    };
//    #if RIGHT_TIBIAL_TORSION & LEFT_TIBIAL_TORSION & LEFT_RIGHT_SYMMETRY
//    PARAMETER_OPT_STUDY = { AnyDesMeasure& TibialTorsionSymmetry = Main.ModelSetup.ParameterIdentification.TibialTorsionSymmetry; };
//    #endif      
    
    
    
    #if RIGHT_VARUS_VALGUS
    AnyDesVar RightVarusValgusOffset = {
      Val = HUMAN_MODEL_FOLDER.BodyModel.Right.Leg.Seg.Thigh.KneeJoint.VarusValgusRotation;
      Min = -pi/4;
      Max = pi/4;
    };
    PARAMETER_OPT_STUDY = { AnyDesVar& RightVarusValgusOffset = Main.ModelSetup.ParameterIdentification.RightVarusValgusOffset; };
    #endif
    
    #if LEFT_VARUS_VALGUS
    AnyDesVar LeftVarusValgusOffset = {
      Val = HUMAN_MODEL_FOLDER.BodyModel.Left.Leg.Seg.Thigh.KneeJoint.VarusValgusRotation;
      Min = -pi/4;
      Max = pi/4;
    };
    PARAMETER_OPT_STUDY = { AnyDesVar& LeftVarusValgusOffset = Main.ModelSetup.ParameterIdentification.LeftVarusValgusOffset; };
    #endif

    #if RIGHT_VARUS_VALGUS & LEFT_VARUS_VALGUS & LEFT_RIGHT_SYMMETRY
    AnyDesMeasure VarusValgusSymmetry = {
      Val = .RightVarusValgusOffset.Val + .LeftVarusValgusOffset.Val;
      Type = EqualToZero;
    };
    PARAMETER_OPT_STUDY = { AnyDesMeasure& VarusValgusSymmetry = Main.ModelSetup.ParameterIdentification.VarusValgusSymmetry; };
    #endif      
        
    
 };
  
  
  
  
  
  
  
}; // End of InsertSegmentClass



#class_template CreateDesVar (
    NAME,
    PARAMETER,
    ENABLE=1, 
    PARAMETER_OPT_STUDY = Main.Studies.ParameterIdentification
    )
{
   Main.ModelSetup.ParameterIdentification = 
   {
     AnyDesVar NAME = {
       Val = .....PARAMETER;
       #var Min = 0.01;
       #var Max = 1;
     };
   };
   #if ENABLE
   PARAMETER_OPT_STUDY = 
   {
      AnyDesVar& NAME = Main.ModelSetup.ParameterIdentification.NAME;
   };
   #endif
};


