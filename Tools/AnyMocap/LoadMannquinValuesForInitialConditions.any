AnyFolder SetMannequinValues = {
  
  #define _ANYMOCAP_JOINT_ANGLE_WARNING_MSG_
  
  AnyFolder Trunk = {
    #include "InterpolateJointAngleData.any"
    FileReader.FileName ??= TEMP_PATH+"/"+ MOCAP_TEST_FILENAME_PREFIX + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-MannequinValuesFromModel-Trunk.txt";
    FileReader.Data0 = zeros(NumElemOf(Main.Studies.MarkerTracking.JointAngleOutputs.OutputFile_MannequinValuesFromModel_Trunk.Values), FileReader.Length0 );
  };
  AnyFolder RightLeg = {
    #include "InterpolateJointAngleData.any"
    FileReader.FileName ??= TEMP_PATH+"/"+ MOCAP_TEST_FILENAME_PREFIX + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-MannequinValuesFromModel-Right-Leg.txt";
    FileReader.Data0 = zeros(NumElemOf(Main.Studies.MarkerTracking.JointAngleOutputs.OutputFile_MannequinValuesFromModel_Right_Leg.Values), FileReader.Length0 );
  };
  AnyFolder LeftLeg = {
    #include "InterpolateJointAngleData.any"
    FileReader.FileName ??= TEMP_PATH+"/"+ MOCAP_TEST_FILENAME_PREFIX + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-MannequinValuesFromModel-Left-Leg.txt";
    FileReader.Data0 = zeros(NumElemOf(Main.Studies.MarkerTracking.JointAngleOutputs.OutputFile_MannequinValuesFromModel_Left_Leg.Values), FileReader.Length0 );
  };
  AnyFolder RightArm = {
    #include "InterpolateJointAngleData.any"
    FileReader.FileName ??= TEMP_PATH+"/"+ MOCAP_TEST_FILENAME_PREFIX + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-MannequinValuesFromModel-Right-Arm.txt";
    FileReader.Data0 = zeros(NumElemOf(Main.Studies.MarkerTracking.JointAngleOutputs.OutputFile_MannequinValuesFromModel_Right_Arm.Values), FileReader.Length0 );
  };
  AnyFolder LeftArm = {
    #include "InterpolateJointAngleData.any"
    FileReader.FileName ??= TEMP_PATH+"/"+ MOCAP_TEST_FILENAME_PREFIX + MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName + "-MannequinValuesFromModel-Left-Arm.txt";
    FileReader.Data0 = zeros(NumElemOf(Main.Studies.MarkerTracking.JointAngleOutputs.OutputFile_MannequinValuesFromModel_Left_Arm.Values), FileReader.Length0 );
  };

  
  #undef _ANYMOCAP_JOINT_ANGLE_WARNING_MSG_
  
   AnyVar time ??= DesignVar(Trunk.InterpolatedData.T[0]);

  AnyFolder LoadedMannequinValues = {
    //This controls the position of the pelvi wrt. to the global reference frame
    AnyVar PelvisPosX = .Trunk.InterpolatedData(.time)[0];
    AnyVar PelvisPosY = .Trunk.InterpolatedData(.time)[1];
    AnyVar PelvisPosZ = .Trunk.InterpolatedData(.time)[2];
    
    //This controls the rotation of the pelvis wrt. to the global reference frame
    AnyVar PelvisRotX = .Trunk.InterpolatedData(.time)[3];
    AnyVar PelvisRotY = .Trunk.InterpolatedData(.time)[4];
    AnyVar PelvisRotZ = .Trunk.InterpolatedData(.time)[5];
            
    // These variables control the rotation of the thorax wrt the
    // pelvis    
    AnyVar PelvisThoraxExtension = .Trunk.InterpolatedData(.time)[6]; 
    AnyVar PelvisThoraxLateralBending = .Trunk.InterpolatedData(.time)[7]; 
    AnyVar PelvisThoraxRotation = .Trunk.InterpolatedData(.time)[8];        
    
    AnyVar PelvisT12Extension = .Trunk.InterpolatedData(.time)[9];  
    
    AnyFolder Right = {
      AnyVar SternoClavicularProtraction = ..RightArm.InterpolatedData(..time)[0];
      AnyVar SternoClavicularElevation = ..RightArm.InterpolatedData(..time)[1];
      AnyVar GlenohumeralFlexion = ..RightArm.InterpolatedData(..time)[2];
      AnyVar GlenohumeralAbduction = ..RightArm.InterpolatedData(..time)[3];
      AnyVar GlenohumeralExternalRotation = ..RightArm.InterpolatedData(..time)[4];
      AnyVar ElbowFlexion = ..RightArm.InterpolatedData(..time)[5];
      AnyVar ElbowPronation = ..RightArm.InterpolatedData(..time)[6];
      AnyVar HipFlexion = ..RightLeg.InterpolatedData(..time)[0];
      AnyVar HipAbduction = ..RightLeg.InterpolatedData(..time)[1];
      AnyVar HipExternalRotation = ..RightLeg.InterpolatedData(..time)[2];
      AnyVar KneeFlexion = ..RightLeg.InterpolatedData(..time)[3];
      AnyVar AnklePlantarFlexion = ..RightLeg.InterpolatedData(..time)[4];
      AnyVar SubTalarEversion = ..RightLeg.InterpolatedData(..time)[5];
    };
    AnyFolder Left = {
      AnyVar SternoClavicularProtraction = ..LeftArm.InterpolatedData(..time)[0];
      AnyVar SternoClavicularElevation = ..LeftArm.InterpolatedData(..time)[1];
      AnyVar GlenohumeralFlexion = ..LeftArm.InterpolatedData(..time)[2];
      AnyVar GlenohumeralAbduction = ..LeftArm.InterpolatedData(..time)[3];
      AnyVar GlenohumeralExternalRotation = ..LeftArm.InterpolatedData(..time)[4];
      AnyVar ElbowFlexion = ..LeftArm.InterpolatedData(..time)[5];
      AnyVar ElbowPronation = ..LeftArm.InterpolatedData(..time)[6];
      AnyVar HipFlexion = ..LeftLeg.InterpolatedData(..time)[0];
      AnyVar HipAbduction = ..LeftLeg.InterpolatedData(..time)[1];
      AnyVar HipExternalRotation = ..LeftLeg.InterpolatedData(..time)[2];
      AnyVar KneeFlexion = ..LeftLeg.InterpolatedData(..time)[3];
      AnyVar AnklePlantarFlexion = ..LeftLeg.InterpolatedData(..time)[4];
      AnyVar SubTalarEversion = ..LeftLeg.InterpolatedData(..time)[5];
    };
  };
 AnyOperationSetValue SetInitialPositions = {
    #define _LOAD_MANNEQUIN_VALUES(PREFIX) \
        &.PREFIX.PelvisPosX, \
        &.PREFIX.PelvisPosY, \
        &.PREFIX.PelvisPosZ, \
        &.PREFIX.PelvisRotX, \
        &.PREFIX.PelvisRotY, \
        &.PREFIX.PelvisRotZ, \
        &.PREFIX.PelvisThoraxExtension, \
        &.PREFIX.PelvisThoraxLateralBending, \
        &.PREFIX.PelvisThoraxRotation, \
        &.PREFIX.PelvisT12Extension, \
        &.PREFIX.Right.SternoClavicularProtraction, \
        &.PREFIX.Right.SternoClavicularElevation, \
        &.PREFIX.Right.GlenohumeralFlexion, \
        &.PREFIX.Right.GlenohumeralAbduction, \
        &.PREFIX.Right.GlenohumeralExternalRotation, \
        &.PREFIX.Right.ElbowFlexion, \
        &.PREFIX.Right.ElbowPronation, \
        &.PREFIX.Right.HipFlexion, \
        &.PREFIX.Right.HipAbduction, \
        &.PREFIX.Right.HipExternalRotation, \
        &.PREFIX.Right.KneeFlexion, \
        &.PREFIX.Right.AnklePlantarFlexion, \
        &.PREFIX.Right.SubTalarEversion, \
        &.PREFIX.Left.SternoClavicularProtraction, \
        &.PREFIX.Left.SternoClavicularElevation, \
        &.PREFIX.Left.GlenohumeralFlexion, \
        &.PREFIX.Left.GlenohumeralAbduction, \
        &.PREFIX.Left.GlenohumeralExternalRotation, \
        &.PREFIX.Left.ElbowFlexion, \
        &.PREFIX.Left.ElbowPronation, \
        &.PREFIX.Left.HipFlexion, \
        &.PREFIX.Left.HipAbduction, \
        &.PREFIX.Left.HipExternalRotation, \
        &.PREFIX.Left.KneeFlexion, \
        &.PREFIX.Left.AnklePlantarFlexion, \
        &.PREFIX.Left.SubTalarEversion

    Source = {_LOAD_MANNEQUIN_VALUES(LoadedMannequinValues) };
    Target = {_LOAD_MANNEQUIN_VALUES(...HumanModel.Mannequin.Posture)};
    };
    
    #undef _LOAD_MANNEQUIN_VALUES
 
 
 };
  
