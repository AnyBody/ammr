// Main.Studies:
#ifndef MOCAP_FUTURE_BVH_READER_73

AnyKinStudy BVH_CreateMarkerTrajectoriesStudy = 
{  
  Kinematics.PosAnalysisOnlyOnOff = On;
  AnyFolder MarkerOutput ={};
  
  AnyFolder &BVHData= Main.ModelSetup.BVHFileData ;
  
  //Environment around the human
  //AnyFolder& EnvironmentModel =  Main.EnvironmentModel;
  
  Gravity = Main.ModelSetup.LabSpecificData.Gravity; 
  
  AnyIntVar FirstFrame = 0 ;
  AnyIntVar LastFrame  = Main.ModelSetup.BVHFileData.Header.FramesNo - 1  ;

//  nStep  = LastFrame - FirstFrame + 1 ;
//  tStart = FirstFrame * Main.ModelSetup.BVHFileData.Header.FrameTime ;
//  tEnd   = LastFrame * Main.ModelSetup.BVHFileData.Header.FrameTime ;

      AnyFloat _FrameOffset = 100*Main.ModelSetup.BVHFileData.Header.FrameTime;
      AnyFloat _tStart = max({0, ..ModelSetup.TrialSpecificData.tStart-_FrameOffset});
      AnyFloat _tEnd = min({..ModelSetup.TrialSpecificData.tEnd+_FrameOffset, (LastFrame+1) * Main.ModelSetup.BVHFileData.Header.FrameTime});
      AnyInt _nStep = round( (_tEnd - _tStart) / Main.ModelSetup.BVHFileData.Header.FrameTime);
      nStep   = _nStep;
      tStart = _tStart;
      tEnd   = _tEnd;      
      
  Kinematics.OPERATION_DISPLAY_PRIORITY(PriorityLow);
  
};//BVH_CreateMarkerTrajectoriesStudy    
    

// Add exlcuder so Normal MoCap studies doesn't pick up the 
// BVH stick-figure
Main.ModelSetup.MocapDrivers = 
{
  AnyObjectPtrVar pObjBVHMechObjects = &.BVHFileData ;
  AnyString strBVHMechObjects = CompleteNameOf(pObjBVHMechObjects);     
  
  AnyMechObjectExcluder MechObjectExcluder = 
  {
    Objects = ObjSearchRecursive(.strBVHMechObjects, "*","AnyMechObject");
  };    
};


Main = 
{

    AnyOperationSequence BVH_PreProcess = 
    {
      AnyOperation& BVH_ViewSetMacro = Main.ModelSetup.Views.SetViewMacros.BVHView;
      AnyOperation& BVH_CreateMarkerTrajectoriesStudy = Main.Studies.BVH_CreateMarkerTrajectoriesStudy.Kinematics;
      AnyOperation& BVH_SetValueOperation = Main.ModelSetup.Macros.BVH_Preprocess.BVH_SetValueOperation;
      AnyOperation& BVH_UpdateValuesOperation = Main.ModelSetup.Macros.BVH_Preprocess.BVH_UpdateValuesOperation;
      AnyOperation& BVH_SaveTrajectories = Main.ModelSetup.Macros.BVH_Preprocess.Save_BVH_Trajectories;
    };

};


Main.Studies.MarkerTracking.InitialConditions.PreOperation =  
{
    AnyOperation& BVH_LoadTrajectories = Main.ModelSetup.Macros.BVH_Preprocess.Load_BVH_Trajectories;
};
    
Main.ModelSetup.Macros = {
   AnyFolder BVH_Preprocess =
   {
   
    //Dummy study used for transfer of values
    AnyKinStudy OutputFunStudy = 
    {
      Kinematics = {};
      nStep = 1;
      Gravity = {0.0, -9.81, 0.0};  
    };  
    
    //Setvalue operations
    AnyOperationSequence BVH_SetValueOperation = 
    {
      OPERATION_DISPLAY_PRIORITY(PriorityLow);
      AnyOperation& update_outputfuns = .OutputFunStudy.InitialConditions;
      AnyOperationSetValue copy = {
        Source = ObjSearch("..OutputFunStudy.*Val_*");
        Target = ObjSearch("Main.ModelSetup.C3DFileData.Points.Markers.*.FromBVH.val_*");
      };
    };//BVH_SetValueOperations     
    
    AnyOperationMacro BVH_UpdateValuesOperation =   
    {  
      OPERATION_DISPLAY_PRIORITY(PriorityLow);
      MacroStr = ({ "classoperation Main" + strquote("Update Values") });  
    };//BVH_UpdateValuesOperation   
    
    AnyOperationMacro Save_BVH_Trajectories = 
    {
      OPERATION_DISPLAY_PRIORITY(PriorityLow);
      AnyFileVar SavePath = TEMP_PATH;
      MacroStr  = {
        "classoperation Main" + strquote("Save Values") +"--file=" + 
        strquote(FilePathCompleteOf(SavePath) +"/"+  MOCAP_TEST_FILENAME_PREFIX +MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName +"_BVH_Trajectories.anyset" )
      };
    };
    AnyOperationMacro Load_BVH_Trajectories = {
      OPERATION_DISPLAY_PRIORITY(PriorityLow);
      AnyFileVar SavePath = TEMP_PATH;
      MacroStr  = {"classoperation Main" + strquote("Load Values") +"--file=" + 
        strquote(FilePathCompleteOf(SavePath) +"/"+  MOCAP_TEST_FILENAME_PREFIX +MOCAP_OUTPUT_FILENAME_PREFIX + Main.ModelSetup.TrialSpecificData.TrialFileName +"_BVH_Trajectories.anyset"),
        "classoperation Main " + strquote("Update Values")
      };
    };    
  };
};



//Main.Studies.MarkerTracking = 
//{
//  AnyFolder& BVHFileData = Main.ModelSetup.BVHFileData;
//};


Main.ModelSetup.Views = 
{
  DrawGroups = 
  {
    AnyDrawGroup All_BVH ={Objects = ObjSearchRecursive("Main.ModelSetup.BVHFileData","*", "AnyDrawObject"); };      
  };
  
  SetViewMacros =
  {
    AnyOperationMacro BVHView = {
      OPERATION_DISPLAY_PRIORITY(PriorityLow);
      MacroStr = {"classoperation "+ CompleteNameOf(&Main.ModelSetup.Views.BVHView) + strquote("Set View") };
    };       
  };
  
  AnyProjectModelViewDefinition BVHView =
  {
    DrawGroupSequence = {&.DrawGroups.All, &.DrawGroups.All_BVH, &.DrawGroups.All_Environment,&.DrawGroups.GRF_Trigger_volume };
    Reset = {On, On, On, On};
    Hide =  {On, Off, Off, On}; 
    ShowModelDefined = {Off, Off, Off, Off}; 
    ShowAutoGenerated = {Off, Off, Off, Off}; 
  };      
};


#else

AnyKinStudy BVH_StickFigure = 
{  
  Kinematics.PosAnalysisOnlyOnOff = Off;
  
  AnyFolder &BVHData= Main.ModelSetup.BVHFileData.Model ;
    
  Gravity = Main.ModelSetup.LabSpecificData.Gravity; 
  
  AnyVar FirstFrame = Main.ModelSetup.BVHFileData.Header.FirstFrameNo;
  AnyVar LastFrame  = Main.ModelSetup.BVHFileData.Header.LastFrameNo;
  AnyVar FrameTime = Main.ModelSetup.BVHFileData.Header.FrameTime;

      tStart = FirstFrame*FrameTime;
      tEnd = LastFrame*FrameTime;
      nStep = round(LastFrame-FirstFrame+1);
      
  Kinematics.OPERATION_DISPLAY_PRIORITY(PriorityLow);
  
};
   

#endif
