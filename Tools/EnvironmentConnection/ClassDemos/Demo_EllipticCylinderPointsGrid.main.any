#include "../Connectors/PointsGenerator/EllipticCylinderPointsGrid.any"
/*
This is a demo for the class template EllipticCylinderPointsGrid. The 
class generates a uniformly distributed grid of nodes in an elliptical 
cylinder shape. The reference frames of the generated nodes are oriented 
such that one axis is tangential to the ellipse, one axis is parallel to 
the axis of the cylinder, and the third axis points inwards. 

The class requires an AnyRefFrame object as the CENTER_FRAME along with
parameters defining the ellipse and cylinder (axis, length, major_axis,
minor_axis) and the number of points to be generated in the form of 
n_rows and n_columns. 

The generated nodes are named in the format Node#, for eg., Node0, Node1,
Node2, etc. The term "Node" for the nodes can be set by the user. However,
the numbering is fixed and starts from 0.

In this example, a node defined on the Global Ref is used as the center 
frame for demonstrating the features of the class.
*/
Main = {
  AnyFixedRefFrame GlobalRef = 
  {
    Origin ={0.0,0.0,0.0};
    AnyDrawRefFrame drw = {ScaleXYZ = 0.1*{1,1,1};};
    
    AnyRefNode TestNode = {
      sRel = {0.1,0.1,0.2};
      ARel = RotMat(pi/2,y);
      AnyDrawRefFrame drw = {
        ScaleXYZ = 0.05*{1,1,1};
        RGB = {1,0,0};      
      };
    };
  };
  
  // -----------------------------------------------------------
  // Generate points grid using default settings
  // -----------------------------------------------------------
  EllipticCylinderPointsGrid Points (
  CENTER_FRAME = Main.GlobalRef.TestNode,
  AXIS = "X",
  LENGTH = 0.5,
  MAJ_AX = 0.2,
  MIN_AX = 0.1,
  nROWS = 3,
  nCOLS = 20) = { };
  
  
  // -----------------------------------------------------------
  // Generate points using optional settings: Customize names 
  // -----------------------------------------------------------
  // The class creates an AnyRefNodeGroup object inside the 
  // CENTER_FRAME. In this example, the same Center Frame is 
  // used to create multiple instances of points grid. Thus, 
  // different naming is required. The name of the AnyRefNodeGroup 
  // can be set during the initialization of the class. Further,
  // the names of the nodes inside the AnyRefNodeGroupObject
  // can also be initialized in the settings.    
  EllipticCylinderPointsGrid PointsNaming (
  CENTER_FRAME = Main.GlobalRef.TestNode,
  AXIS = "X",
  LENGTH = 0.5,
  MAJ_AX = 0.2,
  MIN_AX = 0.1,
  nROWS = 3,
  nCOLS = 20,
  NAME = MyNodes) = {  // Default name is NodeGroup
    Settings = {
      NodesName = "MyPoints";  // Default is Node.
    };
  };
  
  // -----------------------------------------------------------
  // Generate points using optional settings: offset from center frame
  // -----------------------------------------------------------
  // The generated nodes can be offset from the center frame by 
  // specifying srel and arel in the settings.
  EllipticCylinderPointsGrid PointsOffset (
  CENTER_FRAME = Main.GlobalRef.TestNode,
  AXIS = "X",
  LENGTH = 0.5,
  MAJ_AX = 0.2,
  MIN_AX = 0.1,
  nROWS = 1,
  nCOLS = 20,
  NAME = OffsetNodes) = {
    Settings = {
      // Please note the relative offsets are measured from CENETER_FRAME
      srel = {0.0,0.5,0.0};
      arel = RotMat(pi/2, x);
    };
  };
  
  // Generate points using optional settings: partial loop.
  // You can use the StartAngle and EndAngle in case you do 
  // not want points in the entire circumference of the ellipse.
  EllipticCylinderPointsGrid PointsPartial (
  CENTER_FRAME = Main.GlobalRef.TestNode,
  AXIS = "X",
  LENGTH = 0.5,
  MAJ_AX = 0.2,
  MIN_AX = 0.1,
  nROWS = 2,
  nCOLS = 20,
  NAME = PartialNodes) = {
    Settings = {
      StartAngle = -1/2*pi;
      EndAngle = 1/2*pi;
      srel = {0.0,0.0,0.4}; // Offset 0.4 along z axis of Center_Frame
    };
  };
  
};


