#class_template KinMsrClass (
IDX = 0,
ARG1 = BaseObject,
ARG2 = TargetObject,
ARG3 = AnyKinLinear, // Test class creation using ARG3
ARG4 = RefAnyKinMeasureOrganizer, // Reference to AnyKinMeasureOrganizer
ARG5 = "Z", // Normal Direction 
ARG_INI_SWITCH = 0, 
ARG_INI = NOT_DEFINED)

{
  AnyRefFrame &BaseObject = ARG1.Node##IDX;
  AnyRefFrame &TargetObject = ARG2.Node##IDX;
  //  AnyRefFrame &StrengthObject = ARG2.Node##IDX;
  AnyComponentDefinition obj = {};
  //  AnyFolder &DrawRef=Main.DrawSettings; //reference to the folder which contains drawsettings
  
  AnyKinLinear Lin={
    Ref=0;
    AnyRefFrame &BaseObject=.BaseObject;
    AnyRefFrame &TargetObject=.TargetObject;
  };
  
  #if ARG5 == "Z"
  #var AnyInt NormalDirection = 2;
  #var AnyInt FrictionDirection1 = 0;
  #var AnyInt FrictionDirection2 = 1;
  #endif
  
  #if ARG5 == "Y"
  #var AnyInt NormalDirection = 1;
  #var AnyInt FrictionDirection1 = 0;
  #var AnyInt FrictionDirection2 = 2;
  #endif
  
  #if ARG5 == "X"
  #var AnyInt NormalDirection = 0;
  #var AnyInt FrictionDirection1 = 1;
  #var AnyInt FrictionDirection2 = 2;
  #endif 
  
  AnyIntArray Direction = {NormalDirection,FrictionDirection1,FrictionDirection2}; //first element gives normal direction
  
  AnyKinMeasureOrg LinNormal ={
    AnyKinLinear &ref=.Lin;
    MeasureOrganizer={.Direction[0]};
  };
  
  AnyKinMeasureOrg LinFriction1 ={
    AnyKinLinear &ref=.Lin;
    MeasureOrganizer={.Direction[1]};
  };
  
  AnyKinMeasureOrg LinFriction2 ={
    AnyKinLinear &ref=.Lin;
    MeasureOrganizer={.Direction[2]};
  };

//  AnyFolder &MeasuresOrg = ARG4;
//  MeasuresOrg = {
//    #if IDX < 10
//    AnyKinMeasure &LinNormal_00##IDX=.LinNormal;
//    AnyKinMeasure &LinFriction1_00##IDX=.LinFriction1;
//    AnyKinMeasure &LinFriction2_00##IDX=.LinFriction2;
//    #endif
//    #if (IDX > 9) & (IDX < 100)
//    AnyKinMeasure &LinNormal_0##IDX=.LinNormal;
//    AnyKinMeasure &LinFriction1_0##IDX=.LinFriction1;
//    AnyKinMeasure &LinFriction2_0##IDX=.LinFriction2;
//    #endif
//    #if IDX > 99
//    AnyKinMeasure &LinNormal_##IDX=.LinNormal;
//    AnyKinMeasure &LinFriction1_##IDX=.LinFriction1;
//    AnyKinMeasure &LinFriction2_##IDX=.LinFriction2;
//    #endif
//
//
////    AnyKinLinear &Lin##IDX = .Lin;
//  };

  ARG3 testclass={
    Ref=0;
    AnyRefFrame &BaseObject=.BaseObject;
    AnyRefFrame &TargetObject=.TargetObject;
  };
  
  AnyFolder &MeasuresNormal = .MeasuresNormal;
  MeasuresNormal = {
    #if IDX < 10
    AnyKinMeasure &LinNormal_00##IDX=.LinNormal;
    #endif
    #if (IDX > 9) & (IDX < 100)
    AnyKinMeasure &LinNormal_0##IDX=.LinNormal;
    #endif
    #if IDX > 99
    AnyKinMeasure &LinNormal_##IDX=.LinNormal;
    #endif
  };
  
  AnyFolder &MeasuresFriction1 = .MeasuresFriction1;
  MeasuresFriction1 = {
    #if IDX < 10
    AnyKinMeasure &LinFriction1_00##IDX=.LinFriction1;
    #endif
    #if (IDX > 9) & (IDX < 100)
    AnyKinMeasure &LinFriction1_0##IDX=.LinFriction1;
    #endif
    #if IDX > 99
    AnyKinMeasure &LinFriction1_##IDX=.LinFriction1;
    #endif
  };

  AnyFolder &MeasuresFriction2 = .MeasuresFriction2;
  MeasuresFriction2 = {
    #if IDX < 10
    AnyKinMeasure &LinFriction2_00##IDX=.LinFriction2;
    #endif
    #if (IDX > 9) & (IDX < 100)
    AnyKinMeasure &LinFriction2_0##IDX=.LinFriction2;
    #endif
    #if IDX > 99
    AnyKinMeasure &LinFriction2_##IDX=.LinFriction2;
    #endif
  };


};
