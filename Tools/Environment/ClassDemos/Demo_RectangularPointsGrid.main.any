#include "../Connection/Generic/PointsGenerator/RectangularPointsGrid.any"
/**
This is a demo for the class template RectangularPointsGrid. The 
class generates a uniformly distributed grid of nodes in a rectangular 
grid. 

The class requires an AnyRefFrame object as the CENTER_FRAME and a
NORMAL axis to the plane containing the rectangular grid. Further, 
the parameters specifying the grid (the lengths of the two sides and
the number of points along either side) must be provided.

The generated nodes are centered around the CENTER_FRAME. By default,
the generated nodes have the same orientation as the CENTER_FRAME,but
it can be modified. Furthermore, optional settings allow to provide
a linear and rotational offset to the group of nodes relative to the
CENTER_FRAME:

The generated nodes are created using an AnyRefNodeGroup object in the 
format Node#, for eg., Node0, Node1, Node2, etc. The name of the 
AnyRefNodeGroup object and the term "Node" for the nodes can be set by 
the user. However, the numbering is fixed and starts from 0.

In this example, a node defined on the Global Ref is used as the center 
frame for demonstrating the features of the class. Please load the model.
In case the nodes are not visible, please right-click on GlobalRef in the
model tree -> Model View -> Refframes -> Show
*/
Main = {
  AnyFixedRefFrame GlobalRef = 
  {
    Origin ={0.0,0.0,0.0};
    AnyDrawRefFrame drw = {ScaleXYZ = 0.3*{1,1,1};};
    
    AnyRefNode TestNode = {
      sRel = {0.1,0.1,0.2};
      ARel = RotMat(pi/2,y);
      AnyDrawRefFrame drw = {
        ScaleXYZ = 0.2*{1,1,1};
        RGB = {1,0,0};      
      };
    };
  };
  
  // -----------------------------------------------------------
  // Generate points grid using default settings
  // -----------------------------------------------------------
  RectangularPointsGrid Points (
  CENTER_FRAME = Main.GlobalRef.TestNode,
  NORMAL = "Z") = {
    Side1 = 0.5;
    Side2 = 0.2;
    nPoints_S1 = 4;
    nPoints_S2 = 6;
  };
  
  
  // -----------------------------------------------------------
  // Generate points using optional settings: Customize names 
  // -----------------------------------------------------------
  // The class creates an AnyRefNodeGroup object inside the 
  // CENTER_FRAME. In this example, the same Center Frame is 
  // used to create multiple instances of points grid. Thus, 
  // different naming is required. The class template takes
  // care of it by setting the name of the AnyRefNodeGroup
  // to the name used to initialize the class (for example,
  // see previous instance: Main.GlobalRef.TestNode.Points).
  // However, if desired, the name of the AnyRefNodeGroup
  // object can be set during the initialization of the class
  // as shown in this example. Further, the names of the nodes 
  // inside the AnyRefNodeGroup Object can also be initialized
  // in the settings.  
  RectangularPointsGrid PointsNaming (
  CENTER_FRAME = Main.GlobalRef.TestNode,
  NORMAL = "X",
  NAME = MyNodes) = {  // Default is <Name used to initialize the class template>
    Side1 = 0.5;
    Side2 = 0.2;
    nPoints_S1 = 1;
    nPoints_S2 = 4;
    Settings = {
      NodesName = "MyPoints";  // Default is Node.
    };
  };
  
  // -----------------------------------------------------------
  // Generate points using optional settings: offset from center frame
  // -----------------------------------------------------------
  // The generated nodes can be offset from the center frame by 
  // specifying NodesLinOffset and NodesRotOffset in the settings.
  RectangularPointsGrid PointsOffset (
  CENTER_FRAME = Main.GlobalRef.TestNode,
  NORMAL = "Y") = {
    Side1 = 0.5;
    Side2 = 0.9;
    nPoints_S1 = 2;
    nPoints_S2 = 4;
    Settings = {
      // Please note the relative offsets are measured from CENETER_FRAME
      NodesLinOffset = {0.0,0.6,0.0};
      NodesRotOffset = RotMat(pi/2, x);
    };
  };
  
  // -----------------------------------------------------------
  // Generate points using optional settings: Angular orientation
  // -----------------------------------------------------------
  // You can use NodesOrientation in case you want the generated 
  // nodes to have a specific angular orientation.
  RectangularPointsGrid PointsOriented (
  CENTER_FRAME = Main.GlobalRef.TestNode,
  NORMAL = "X") = {
    Side1 = 1.0;
    Side2 = 1.5;
    nPoints_S1 = 6;
    nPoints_S2 = 3;
    Settings = {
      NodesOrientation = RotMat(pi/4,x);
      NodesLinOffset = {0.0,0.0,0.4}; // Offset 0.4 along z axis of Center_Frame
    };
  };
  
};


