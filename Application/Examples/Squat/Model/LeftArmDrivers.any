

  // ************************************
  // Drivers for the left arm
  // ************************************
  
  
  #if BM_ARM_SHOULDER_RHYTHM == 0
  //Sterno clavicular joint driver
  AnyKinEqSimpleDriver SCDriverLeft ={
    AnyKinMeasure& ref1 =...HumanModel.Interface.Left.SternoClavicularProtraction;
    AnyKinMeasure& ref2 =...HumanModel.Interface.Left.SternoClavicularElevation;
    AnyKinMeasure& ref3 =...HumanModel.Interface.Left.SternoClavicularAxialRotation;
    
    DriverPos = pi/180*{
      .JntPos.Left.SternoClavicularProtraction,
      .JntPos.Left.SternoClavicularElevation,
      .JntPos.Left.SternoClavicularAxialRotation
    };
    
    DriverVel = pi/180*{
      .JntVel.Left.SternoClavicularProtraction,
      .JntVel.Left.SternoClavicularElevation,
      .JntVel.Left.SternoClavicularAxialRotation
    };

    Reaction.Type={Off,Off,Off};
  };
  #endif
  
  AnyKinEqSimpleDriver GHDriverLeft=
  {
    AnyKinMeasure& ref1 =...HumanModel.Interface.Left.GlenohumeralAbduction;
    AnyKinMeasure& ref2 =...HumanModel.Interface.Left.GlenohumeralFlexion;
    AnyKinMeasure& ref3 =...HumanModel.Interface.Left.GlenohumeralExternalRotation;
    DriverPos=pi/180*{
      .JntPos.Left.GlenohumeralAbduction, 
      .JntPos.Left.GlenohumeralFlexion,  
      .JntPos.Left.GlenohumeralExternalRotation  
    };    
    DriverVel = pi/180*{
      .JntVel.Left.GlenohumeralAbduction, 
      .JntVel.Left.GlenohumeralFlexion,  
      .JntVel.Left.GlenohumeralExternalRotation  
    };    
    Reaction.Type={Off, Off, Off};
  };

  AnyKinEqSimpleDriver ElbowFEDriverLeft=
  {
    AnyKinMeasureOrg  &Elbow =...HumanModel.Interface.Left.ElbowFlexion;
    DriverPos=pi/180*{.JntPos.Left.ElbowFlexion};  
    DriverVel = pi/180*{.JntVel.Left.ElbowFlexion};  
    Reaction.Type={Off};
  };

  AnyKinEqSimpleDriver ElbowPSDriverLeft=
  {
    AnyKinMeasure& Elbow =...HumanModel.Interface.Left.ElbowPronation;
    DriverPos= pi/180*{.JntPos.Left.ElbowPronation };  
    DriverVel = pi/180*{.JntVel.Left.ElbowPronation };  
    Reaction.Type={Off};
  };
  
  AnyKinEqSimpleDriver WristDriverLeft =
  {
    AnyKinMeasure& ref1 =...HumanModel.Interface.Left.WristFlexion;
    AnyKinMeasure& ref2 =...HumanModel.Interface.Left.WristAbduction;
    DriverPos = pi/180*
    {
      .JntPos.Left.WristFlexion,
      .JntPos.Left.WristAbduction
    };
    DriverVel = pi/180*
    {
      .JntVel.Left.WristFlexion,
      .JntVel.Left.WristAbduction
    };
    Reaction.Type={Off,Off};
  };  
  

  


  