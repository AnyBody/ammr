#include "Model\ClassTemplates.any"

Main = 
{
  #include "Model/DrawSettings.any"
  #include "Input\Parameters.any"
  
  AnyFolder Model = 
  {
    #include "Model\Environment.any"
    #include "Model\Segs.any"
    #ifdef USE_LIGAMENT_CALIBRATION
    #include "Model\Ligaments.any"
    #endif
    #include "Model\Tendons.any"
    #include "Model\Joints.any"
    #include "Model\Contacts.any"
  };//Model
  
  AnyBodyStudy InitStudy =
  {
//    AnyObjectPtrArray ObjArr1 = 
//    ObjSearchRecursive("Main.Model.Joints.KneeJoint_Lin", "*", "AnyMechObject");
//    AnyObjectPtrArray ObjArr2 = 
//    ObjSearchRecursive("Main.Model.Joints.KneeJoint_Rot", "*", "AnyMechObject");    
//    MechObjectExclude = arrcat(ObjArr1, ObjArr2);    
    AnyObjectPtrArray ObjArr = 
    ObjSearchRecursive("Main.Model.Joints", "KneeJoint*", "AnyMechObject");
    MechObjectExclude = arrcat(ObjArr);    
    
    AnyFolder& Parameters = .Parameters;
    AnyFolder& Model = .Model;
    #include "Model\Inputs_InitStudy.any"
    
    Gravity = {0, 0, -9.81};
    tStart = 0.0 ;
    tEnd = 1.0 ;
    nStep = 1 ;
    #include "Model\OutputFunctions_Length.any"   
  };
  
  #ifdef USE_LIGAMENT_CALIBRATION
  #include "Model\EvalStudy.any"
  #endif
  
  AnyBodyStudy LoadStudy = 
  {
    AnyFolder& Parameters = .Parameters; 
    AnyFolder& Model = .Model;
    #include "<PATH_INPUT_LOAD_STUDY>"
    #include "Model\Actuators.any"
    #include "Model\Measures.any"
    //#include "Model\Outputs.any"
    
    AnyFolder CameraObjects = 
    {
 
    };
    
    Gravity = {0, 0, -9.81};
    tStart = (DEF_GAIT_PERIOD * DEF_GAIT_PERIOD_USE_RATIO * 0.0);
    tEnd = (DEF_GAIT_PERIOD * DEF_GAIT_PERIOD_USE_RATIO * 1.0);
    nStep = round((DEF_GAIT_NSTEP)) ;
    AnyVar Cycle = t / (tEnd - tStart) * 100;
    
    #ifdef USE_FDK
    InverseDynamics.ForceDepKinOnOff=On;
    InverseDynamics.ForceDepKin.SolverType = FDK_SolverType ;
    InverseDynamics.ForceDepKin.ForceTol = FDK_ForceTol ;
    InverseDynamics.ForceDepKin.UseAdaptiveForceTolOnOff = FDK_UseAdaptiveForceTolOnOff ;
    InverseDynamics.ForceDepKin.Perturbation = FDK_Perturbation;
    InverseDynamics.ForceDepKin.MaxIteration = FDK_MaxIteration;
    InverseDynamics.ForceDepKin.MaxNewtonStep = FDK_MaxNewtonStep;       
    InverseDynamics.ForceDepKin.LocalSearchOnOff = FDK_LocalSearchOnOff;   
    #endif
  };
  
  #include "Model\OperationSequences.any"    
};
