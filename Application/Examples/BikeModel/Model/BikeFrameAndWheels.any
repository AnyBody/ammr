
AnyFolder BikeModel = {


  /*
  This folder contains the definition of the bike
  - GlobalRefFrame
  - BikeFrame
  - Crank motion and loading
  - Rear wheel definition

*/
  //Bike Segment
  AnySeg BikeFrame = {
    Jii = {0.00,0.00,0.00};
    Mass =0.0;
    AnyRefNode SaddlePos = {
       sRel = {Main.BikeParameters.SaddlePos,Main.BikeParameters.SaddleHeight,0};
    };
    AnyRefNode Crank = { sRel = {0,0,0}; };
    AnyRefNode RearWheel = { sRel = {-0.545,0.009,0}; };

    AnyRefNode FrontWheel = { sRel = {0.868,-0.003,-0.007}; };

    AnyRefNode SaddlePin = {
      sRel = {-tan(24.5*pi/180)*Main.BikeParameters.SaddleHeight+0.077,Main.BikeParameters.SaddleHeight-0.260,0};
    };

    AnyRefNode SaddleOnPin = {
       sRel = {Main.BikeParameters.SaddlePos-0.05,Main.BikeParameters.SaddleHeight-0.092,0};
    };

    AnyRefNode RightHand={
      sRel={0.58,0.756,0.25};
    };

    AnyRefNode LeftHand={
      sRel={0.58,0.756,-0.25};
    };

    AnyRefNode ElbowPosRight={
      sRel={0.0,0,0.25};
    };
    AnyRefNode ElbowPosLeft={
      sRel={0.0,0,-0.25};
    };

    AnyDrawSurf BikeFrameSurf ={
      FileName = "../Input/MFrame";
      ScaleXYZ={1.2,1.2,1.2};
      RGB=Main.DrawSettings.Colors.AnyBodyBlue;
    };

//    AnyDrawRefFrame drw_frame =
//    {
//      RGB = {0.2980392157, 0.2980392157, 0.2980392157};
//      Opacity = 1;
//      ScaleXYZ = {0.05762648458, 0.05762648458, 0.05762648458};
//      Visible = On;
//    };

  };  // BikeFrame

  AnySeg Crank = {
    Mass=0.5;
    Jii = {0.001,0.001,0.001};
    AnyRefNode CrankJoint = { sRel = {0,0,0}; };
    AnyRefNode RPedal = { sRel = {0,....BikeParameters.PedalArmLength,....BikeParameters.PedalArmWidth}; };
    AnyRefNode LPedal = { sRel = {0,-....BikeParameters.PedalArmLength,-....BikeParameters.PedalArmWidth}; };
    AnyDrawSurf CrankSurf ={
      FileName = "../Input/MSprocket";
      ScaleXYZ={1.2,1.2,1.2};
      RGB=Main.DrawSettings.Colors.AnyBodyGreen;
    };
  };//Crank

  AnyRevoluteJoint CrankJoint ={
    Axis = z;
    AnyRefNode &Ground = .BikeFrame.Crank;
    AnyRefNode &Crank = .Crank.CrankJoint;
  };

  AnyKinEqSimpleDriver CrankRotation = {
    AnyRevoluteJoint &Jnt = .CrankJoint;
    DriverPos = {0};
    DriverVel = {-(...BikeParameters.Cadence/60)*pi*2};
    Reaction.Type = {Off}; //This has to be zero otherwise the crank driver will carry the applied load
  };

  //This is the definiton of the crank moment
  AnyForce CrankMoment ={
    AnyJoint &Jnt=.CrankJoint;
    F={...BikeParameters.CrankMomentOffset-...BikeParameters.CrankMomentAmp*cos(4*pi*t/...BikeParameters.T+ ...BikeParameters.CrankMomentPhase)};
  };

  //This is the definition of the rear wheel its pure graphics!
  AnySeg RearWheel = {
    Mass=0.0;
    Jii = {0.00,0.00,0.00};
    AnyRefNode Wheel = { sRel = {0,0,0}; };
//    r0 ={0.550000, 0.010000, 0.000000};

    AnyDrawSurf Crank ={
      FileName = "../Input/MBackWheel";
      ScaleXYZ={1.2,1.2,1.2};
      RGB=Main.DrawSettings.Colors.AnyBodyGreen;
    };
  };

  AnyRevoluteJoint RearWheelJoint ={
    Axis = z;
    AnyRefNode& Ground = .BikeFrame.RearWheel;
    AnyRefNode &Wheel = .RearWheel.Wheel;
  };

  AnyKinEqSimpleDriver RearWheelRotation = {
    AnyRevoluteJoint &Jnt = .RearWheelJoint;
    DriverPos = {0};
    DriverVel = -{0.9*(...BikeParameters.Cadence/60)*pi*2};
    Reaction.Type = {On}; //Setting Reaction.Type=1 means the joint should provide the needed moment to turn the wheel
  };

  //This is the definition of the front wheel its pure graphics!
  AnySeg FrontWheel = {
    Mass=0.0;
    Jii = {0.00,0.00,0.00};
    AnyRefNode Wheel = { sRel = {0,0,0}; };
    AnyDrawSurf Crank ={
      FileName = "../Input/MFrontWheel";
      ScaleXYZ={1.2,1.2,1.2};
      RGB=Main.DrawSettings.Colors.AnyBodyGreen;
    };
  };

  AnyRevoluteJoint FrontWheelJoint ={
    Axis = z;
    AnyRefNode &Ground = .BikeFrame.FrontWheel;
    AnyRefNode &Wheel = .FrontWheel.Wheel;
  };

  AnyKinEqSimpleDriver WheelRotation = {
    AnyRevoluteJoint &Jnt = .FrontWheelJoint;
    DriverPos = {0};
    DriverVel = -{0.9*(...BikeParameters.Cadence/60)*pi*2};
    Reaction.Type = {On}; //Setting Reaction.Type=1 means the joint should provide the needed moment to turn the wheel
  };

  //This is the definition of the saddle pin its pure graphics!
  AnySeg SaddlePin = {
    Mass=0.0;
    Jii = {0.00,0.00,0.00};
    AnyRefNode Pin = { sRel = {0,0,0}; };
    AnyDrawSurf SaddlePin ={
      FileName = "../Input/MSaddlePin";
      ScaleXYZ={1.2,1.2,1.2};
      RGB=Main.DrawSettings.Colors.AnyBodyGreen;
    };
  };

  AnyPrismaticJoint SaddlePinJoint ={
    Axis = y;
    AnyRefNode &Ground = .BikeFrame.SaddlePin;
    AnyRefNode &SaddlePin = .SaddlePin.Pin;
  };

  AnyKinEqSimpleDriver PinHeight = {
    AnyPrismaticJoint &Jnt = .SaddlePinJoint;
    DriverPos = {0};
    DriverVel = {0};
    Reaction.Type = {On}; //Setting Reaction.Type=1 means the joint should provide the needed moment to turn the wheel
  };

  //This is the definition of the saddle its pure graphics!
  AnySeg Saddle = {
    Mass=0.0;
    Jii = {0.00,0.00,0.00};
    AnyRefNode SaddleNode = { sRel = {0,0,0}; };
    AnyDrawSurf SaddleDrw ={
      FileName = "../Input/MSaddle";
      ScaleXYZ={1.2,1.2,1.2};
      RGB=Main.DrawSettings.Colors.AnyBodyGreen;
    };
  };

  AnyPrismaticJoint SaddleJoint ={
    Axis = x;
    AnyRefNode &Ground = .BikeFrame.SaddleOnPin;
    AnyRefNode &SaddlePin = .Saddle.SaddleNode;
  };

  AnyKinEqSimpleDriver SaddleHeightDrv = {
    AnyPrismaticJoint &Jnt = .SaddleJoint;
    DriverPos = {0};
    DriverVel = {0};
    Reaction.Type = {On}; //Setting Reaction.Type=1 means the joint should provide the needed moment to turn the wheel
  };



}; //Bikemodel
