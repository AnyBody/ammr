
#include "../../libdef.any"
#include "<ANYBODY_PATH_BODY>/ToolBox/Widgets/WidgetMarkerDriver.any"

Main ={
  
  
  
  AnyBodyStudy Study ={
    Kinematics.KinematicTol=3e-4;
    InitialConditions.KinematicTol=3e-4;
    //include the next line to have a camera in the model
    //#include "Model/MovingCamera.any"
    InitialConditions.SolverType = KinSolOverDeterminate;
    InitialConditions.PosAnalysisOnlyOnOff=On;
    Kinematics.SolverType = KinSolOverDeterminate;
    InitialConditions.SmallStepAssumptionOnOff=Off;
    Kinematics.UseStartGuessOnOff=Off;
    InitialConditions.UseStartGuessOnOff=Off;
    Kinematics.PosAnalysisOnlyOnOff=On;
    nStep=400;
    Gravity  ={0,0,0};
    AnySeg Mass ={
      Mass=10;
      Jii ={0,0,0};
      AnyDrawNode drw2 ={ScaleXYZ={1,1,1}*0.05;RGB ={0,0,1};};
    };
    
    AnyFixedRefFrame Global ={
      
      AnyDrawRefFrame drw2 ={RGB={0,0,1};};
      
    };
    AnyFixedRefFrame frm ={};
    
    AnyPrismaticJoint jnt ={
      AnyFixedRefFrame &ref=.Global;
      AnySeg &ref2=.Mass;
      Axis=z;
    };
    
    AnyForce LinearSpring = {
     AnyPrismaticJoint &ref=.jnt;
     F={-ref.Pos[0]};
    };
    
    AnyForce ExpSpring = {
      AnyPrismaticJoint &ref=.jnt;
     F={.LinZ_Capped.Pos[0]};
    };
    
    AnyKinEqSimpleDriver driver_On_Jnt ={
      AnyPrismaticJoint &ref=.jnt;
      DriverPos ={0};
      DriverVel ={0};
      CType = {Soft};
      WeightFun={&WeightFun2};
      
      AnyFunConst WeightFun2 ={Value = {1};};
      
    };
    
    AnyKinEqSimpleDriver driver_On_Jnt_hard ={
      AnyPrismaticJoint &ref=.jnt;
      DriverPos ={0};
      DriverVel ={0.2};
     
      
    };

    AnySeg Slider ={
      Mass=10;
      Jii ={0,0,0};
      AnyDrawNode drw2 ={ScaleXYZ={1,1,1}*0.05;};
    r0={0,0,1.25};
    };
    
    
    AnyPrismaticJoint jnt2 ={
      AnyFixedRefFrame &ref=.Global;
      AnySeg &ref2=.Slider;
      Axis=z;
    };
    
    AnyKinEqSimpleDriver drv2 ={
      AnyPrismaticJoint &ref=.jnt2;
      DriverPos ={0.2};
      DriverVel ={0.9}*0;
      
    };
    
    AnyKinLinear Lin  ={
      Ref=0;
      AnyRefFrame  &ref1=.Mass;
      AnyRefFrame  &ref2=.Slider;
    };
    
    
    AnyKinMeasureOrg LinZ ={
      AnyKinLinear &lin= .Lin; 
      MeasureOrganizer = {2};
    };
    
    
    
    AnyKinMeasureFunComb1 LinZ_Capped= {
      Functions = {&.ExpFun };
      AnyKinMeasureOrg &lin_z= .LinZ; 
    };
    
    
    AnyFunInterpol ExpFun = {
      AnyVar MaxOuput = 0.2;
      AnyVar InputAt60PercetOfMax = 0.2;
      Type = Bspline ;
      
      T = arrcat(farr(-1010*MaxOuput,MaxOuput/1, 1000*1),
      farr(-10*MaxOuput,MaxOuput/10, 2*10*10),
      farr(MaxOuput*10,MaxOuput/1, 1000*1));
      
      Data = 
      {T^2};
      
    }; 
   

//    
//    AnyFunInterpol ExpFun = {
//      AnyVar MaxOuput = 0.2;
//      AnyVar InputAt60PercetOfMax = 0.2;
//      Type = Bspline ;
//      
//      T = arrcat(farr(-1010*MaxOuput,MaxOuput/1, 1000*1),
//      farr(-10*MaxOuput,MaxOuput/10, 2*10*10),
//      farr(MaxOuput*10,MaxOuput/1, 1000*1));
//      
//      Data = 
//      {T^2};
//      
//    }; 

    
    AnyKinMeasureFunComb1 CappedSliderMeasures= {
      Functions = {&.ExpFun };
      AnyKinMeasureOrg &lin_z= .jnt2; 
    };
    
    
    
    
    AnyKinEqSimpleDriver DriverLinCapped ={
      AnyKinMeasureFunComb1 &ref3=.LinZ_Capped;
      DriverPos ={0};
      DriverVel ={0};
      CType={Soft};
      WeightFun={&WeightFun2 };
      AnyFunConst WeightFun2 ={Value = {1};};
    };
    
    
    AnyVar Abs=Main.Study.jnt.Pos[0];
    AnyVar soft_kinObjetive = (LinZ_Capped.Pos[0]^2+jnt.Pos[0]^2)^0.5;
    
    AnyVar soft_kinObjetive1 = (LinZ_Capped.Pos[0])^0.5;
    AnyVar soft_kinObjetive2 = (jnt.Pos[0])^0.5;
    
    //    WidgetMarkerDriver P2 (
    //    HumanNode=.Mass,
    //    Operation=Main.Study.InitialConditions,
    //    OriginRefFrame=.frm
    //    )= {
    //      Origin = ({0.0,0,0});
    //    };
    
    
    
    
  };
  
  
  
};
