#if      BalanceOnOff 

 AnyFolder Human_Connection = 
{
  
  
  AnyKinEq Pelvis_Lin_Control = 
  {
    AnyKinMeasureLinComb LinComb = 
    {
      AnyKinLinear left_foot_lin = 
      {
        AnyRefFrame& target = Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ToeJoint;
      };
      
      AnyKinLinear right_foot_lin = 
      {
        AnyRefFrame& target = Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ToeJoint;
      };
      AnyKinCoM Human_CoM =   {
        AnyFolder& Human = Main.HumanModel;
      };
      
      //      AnyKinLinear pelvis_lin = 
      //      {
      //        AnyRefFrame& target = Main.HumanModel.BodyModel.Trunk.SegmentsLumbar.PelvisSeg;
      //      };      
      Coef = {{1,0,0, 1,0,0, -2,0,0}, {0,1,0, 0,1,0, 0,-2,0}, {0,0,1, 0,0,1, 0,0,-2}};
    
     // Const = {Main.Model.EnvironmentModel.WeightBalanceControl.px, 0, Main.Model.EnvironmentModel.WeightBalanceControl.pz};
            Const = {0, 0, 0};

    OutDim=3;
    };
    MeasureOrganizer = {0, 2};   
    CType = {Soft, Soft};
    AnyFunConst WeightFun_Custom =
    {
      Value = {20, 20};
    };     
    WeightFun = {&WeightFun_Custom} ;
    Reaction.Type = {Off, Off};
  };
  
  AnyKinEq Pelvis_Rot_Control = 
  {
    AnyKinRotational pelvis_rot = 
    {
      AnyRefFrame& target = Main.HumanModel.BodyModel.Trunk.SegmentsLumbar.PelvisSeg;
      Type = PlanarAngles;
      Axis1 = y;
      Axis2 = z;
      Axis3 = x;
    };
    MeasureOrganizer = {1, 2};
    CType = {Soft, Soft};
    AnyFunConst WeightFun_Custom =
    {
      Value = {1, 1};
    };     
    WeightFun = {&WeightFun_Custom} ;
    Reaction.Type = {Off, Off};
  };  
  
  
  
  
//   AnyFolder WeightBalanceControl={
//    
//    AnyVec3 FeetCenterPoint=0.5*(.GlobalRef.Right_Foot_Node.sRel +.GlobalRef.Left_Foot_Node.sRel );
//    AnyVec3 ForceAppliancePoint = .GlobalRef.Right_Hand_Node.sRel;
//    AnyVec3 R=ForceAppliancePoint -FeetCenterPoint;
//
//    AnyVec3 ForceVector = (.GlobalRef.Right_Hand_Node.sRel- .GlobalRef.Right_Hand_Node_Load.sRel)*100;
//    //    AnyVec3 ForceVector =  Main.Model.Mannequin.Loads.Right.Hand ;
//  //AnyVec3 ForceVector =  Main.Model.EnvironmentModel.Loads.RightHand.Righthand.F;
//
//    AnyVec3 LoadMoment=cross(ForceVector,R);
//    
//    AnyVar Mass=75;//Main.Model.ModelEnvironmentConnection.Human_Connection.Human_CoM.MassTotal;
//    
//    AnyVar m1=LoadMoment[0];
//    AnyVar m2=LoadMoment[1];
//    AnyVar m3=LoadMoment[2];
//    
//    AnyVar f1=0;
//    AnyVar f2=Mass*Main.Study.Gravity[1];
//    AnyVar f3=0;
//    
//    AnyVar      px=m3/f2;
//    AnyVar      py=0;
//    AnyVar      pz=-m1/f2; //not sure why negative...
//    
//    
////    
////    AnyDrawVector DrawForce = {
////    Vec = 0.01*.ForceVector ;
////    PointAway = Off;
////    GlobalCoord = On;
////    AnyRefNode &ref=.Main.Model.EnvironmentModel.GlobalRef.Right_Hand_Node;
////    Line.Thickness=0.015;
////    Line.RGB={0,0,1};
////    Line.End.Style = {5} ;
////    Line.End.Thickness = 3*Line.Thickness;  
////    Line.End.Length = 4*Line.Thickness;
////    Line.Start.Style = {0};
////    Line.Start.Thickness = 3*Line.Thickness;  
////    Line.Start.Length = 3*Line.Thickness;
////    Line.Start.RGB = {1,0,0};
////  };
//
//    
//  };
//AnyDrawWidgetLin Right_Hand_Node_Lod_WidgetLin =         
//  {
//    Operation = &Main.RunApplication ;
//    UpdateEvent = OnMouseRelease;
//    MaxDrawSize = 0.2;
//    MinDrawSize = 0.2;
//    RefFrame = &.GlobalRef;
//    Target = &.GlobalRef.Right_Hand_Node_Load.sRel ;
//    AxisOnOff = {On, On, On};
//  };

};

#endif