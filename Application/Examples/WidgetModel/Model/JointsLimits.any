AnyFolder JointLimits={
  
  AnyFolder Limits={
    
    
    AnyVar PelvisThoraxExtension_Low=30; 
    AnyVar PelvisThoraxExtension_High=-50;       
    AnyVar PelvisThoraxExtension_Neutral=0;       
    AnyVar PelvisThoraxExtension_Weight=0.1;       
    
    
    AnyVar PelvisThoraxLateralBending_Low=-20;
    AnyVar PelvisThoraxLateralBending_High=20;
    AnyVar PelvisThoraxLateralBending_Neutral=0;       
    AnyVar PelvisThoraxLateralBending_Weight=0.1;       
    
    
    AnyVar PelvisThoraxRotation_Low=-30;  
    AnyVar PelvisThoraxRotation_High=30;  
    AnyVar PelvisThoraxRotation_Neutral=0;       
    AnyVar PelvisThoraxRotation_Weight=0.1;       
    
     
    AnyVar SkullThoraxFlexion_Low=30; 
    AnyVar SkullThoraxFlexion_High=-50;       
    AnyVar SkullThoraxFlexion_Neutral=0;       
    AnyVar SkullThoraxFlexion_Weight=3;       
    
    
    AnyVar SkullThoraxLateralBending_Low=-30;
    AnyVar SkullThoraxLateralBending_High=30;
    AnyVar SkullThoraxLateralBending_Neutral=0;       
    AnyVar SkullThoraxLateralBending_Weight=3;       
    
    
    AnyVar SkullThoraxRotation_Low=-30;  
    AnyVar SkullThoraxRotation_High=30;  
    AnyVar SkullThoraxRotation_Neutral=0;       
    AnyVar SkullThoraxRotation_Weight=3;       
    
    
//    AnyVar NeckExtension_Low=-30    ;
//    AnyVar NeckExtension_High=30    ;
//    AnyVar NeckExtension_Neutral= 0;       
//    AnyVar NeckExtension_Weight=1;       
    
    
    
    
    
    AnyVar SternoClavicularProtraction_Low =-10;
    AnyVar SternoClavicularProtraction_High =10;
    AnyVar SternoClavicularProtraction_Neutral=0;       
    AnyVar SternoClavicularProtraction_Weight=0.5;       
    
    
    AnyVar SternoClavicularElevation_Low=-10;       
    AnyVar SternoClavicularElevation_High=20;   
    AnyVar SternoClavicularElevation_Neutral=0;       
    AnyVar SternoClavicularElevation_Weight=0.5;       
    
    AnyVar SternoClavicularAxialRotation_Low=-5;         
    AnyVar SternoClavicularAxialRotation_High=5;         
    AnyVar SternoClavicularAxialRotation_Neutral=0;       
    AnyVar SternoClavicularAxialRotation_Weight=1;       
    
    AnyVar GlenohumeralFlexion_Low=-120;          
    AnyVar GlenohumeralFlexion_High=120;      
    AnyVar GlenohumeralFlexion_Neutral=0;       
    AnyVar GlenohumeralFlexion_Weight=0.1;       
    
    AnyVar GlenohumeralAbduction_Low=0;          
    AnyVar GlenohumeralAbduction_High=170;
    AnyVar GlenohumeralAbduction_Neutral=0;       
    AnyVar GlenohumeralAbduction_Weight=0.1;       
    
    AnyVar GlenohumeralExternalRotation_Low=-60;          
    AnyVar GlenohumeralExternalRotation_High=60;          
    AnyVar GlenohumeralExternalRotation_Neutral=0;       
    AnyVar GlenohumeralExternalRotation_Weight=0.5;       
    
    
    AnyVar ElbowFlexion_Low=0;          
    AnyVar ElbowFlexion_High=150;          
    AnyVar ElbowFlexion_Neutral=5;       
    AnyVar ElbowFlexion_Weight=0.01;       
    
    AnyVar ElbowPronation_Low=-60;          
    AnyVar ElbowPronation_High=60;      
    AnyVar ElbowPronation_Neutral=0;       
    AnyVar ElbowPronation_Weight=0.1;       
    
    AnyVar WristFlexion_Low=-30;          
    AnyVar WristFlexion_High=30;
    AnyVar WristFlexion_Neutral=0;       
    AnyVar WristFlexion_Weight=0.5;       
    
    AnyVar WristAbduction_Low=-25;          
    AnyVar WristAbduction_High=25;            
    AnyVar WristAbduction_Neutral=0;       
    AnyVar WristAbduction_Weight=0.5;       
    
    AnyVar HipFlexion_Low=-50;          
    AnyVar HipFlexion_High=50;          
    AnyVar HipFlexion_Neutral=0;       
    AnyVar HipFlexion_Weight=0*0.001;       
    
    AnyVar HipAbduction_Low=0;          
    AnyVar HipAbduction_High=80;          
    AnyVar HipAbduction_Neutral=0;       
    AnyVar HipAbduction_Weight=0*0.001;       
    
    
    AnyVar HipExternalRotation_Low=-45;                
    AnyVar HipExternalRotation_High=45;          
    AnyVar HipExternalRotation_Neutral=0;       
    AnyVar HipExternalRotation_Weight=0*0.001;       
    
    
    AnyVar KneeFlexion_Low=0;   
    AnyVar KneeFlexion_High=140;          
    AnyVar KneeFlexion_Neutral=20;       
    AnyVar KneeFlexion_Weight=0*0.001;       
    
    AnyVar AnklePlantarFlexion_Low=-30;          
    AnyVar AnklePlantarFlexion_High=60;          
    AnyVar AnklePlantarFlexion_Neutral=0;       
    AnyVar AnklePlantarFlexion_Weight=0*0.01;       
    
    AnyVar SubTalarEversion_Low=-30;          
    AnyVar SubTalarEversion_High=30;          
    AnyVar SubTalarEversion_Neutral=0;       
    AnyVar SubTalarEversion_Weight=0*0.01;       
    
  };  
    
  
  AnyFolder Trunk ={

        AnyFolder PelvisThoraxExtension=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Trunk.PelvisThoraxExtension;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.PelvisThoraxExtension_High/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.PelvisThoraxExtension_Low/180*pi;
      AnyVar Weight =  ..Limits.PelvisThoraxExtension_Weight;
      AnyVar Neutral =  ..Limits.PelvisThoraxExtension_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
      AnyFolder PelvisThoraxLateralBending=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Trunk.PelvisThoraxLateralBending;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.PelvisThoraxLateralBending_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.PelvisThoraxLateralBending_High/180*pi;
      
     AnyVar Weight =  ..Limits.PelvisThoraxLateralBending_Weight;
      AnyVar Neutral =  ..Limits.PelvisThoraxLateralBending_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };


      AnyFolder PelvisThoraxRotation=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Trunk.PelvisThoraxRotation;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.PelvisThoraxRotation_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.PelvisThoraxRotation_High/180*pi;
      
       AnyVar Weight =  ..Limits.PelvisThoraxRotation_Weight;
      AnyVar Neutral =  ..Limits.PelvisThoraxRotation_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
   AnyFolder SkullThoraxFlexion=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Trunk.SkullThoraxFlexion;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.SkullThoraxFlexion_High/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.SkullThoraxFlexion_Low/180*pi;
      AnyVar Weight =  ..Limits.SkullThoraxFlexion_Weight;
      AnyVar Neutral =  ..Limits.SkullThoraxFlexion_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
      AnyFolder SkullThoraxLateralBending=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Trunk.SkullThoraxLateralBending;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.SkullThoraxLateralBending_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.SkullThoraxLateralBending_High/180*pi;
      
     AnyVar Weight =  ..Limits.SkullThoraxLateralBending_Weight;
      AnyVar Neutral =  ..Limits.SkullThoraxLateralBending_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };


      AnyFolder SkullThoraxRotation=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Trunk.SkullThoraxRotation;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.SkullThoraxRotation_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.SkullThoraxRotation_High/180*pi;
      
       AnyVar Weight =  ..Limits.SkullThoraxRotation_Weight;
      AnyVar Neutral =  ..Limits.SkullThoraxRotation_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
  
  };
    
  
  AnyFolder Right ={
    
    AnyFolder SternoClavicularProtraction=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Right.SternoClavicularProtraction;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.SternoClavicularProtraction_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.SternoClavicularProtraction_High/180*pi;
      
       AnyVar Weight =  ..Limits.SternoClavicularProtraction_Weight;
      AnyVar Neutral =  ..Limits.SternoClavicularProtraction_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder SternoClavicularElevation=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Right.SternoClavicularElevation;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.SternoClavicularElevation_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.SternoClavicularElevation_High/180*pi;
      
      AnyVar Weight =  ..Limits.SternoClavicularElevation_Weight;
      AnyVar Neutral =  ..Limits.SternoClavicularElevation_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
   
    
    AnyFolder SternoClavicularAxialRotation=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Right.SternoClavicularAxialRotation;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.SternoClavicularAxialRotation_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.SternoClavicularAxialRotation_High/180*pi;
      
       AnyVar Weight =  ..Limits.SternoClavicularAxialRotation_Weight;
      AnyVar Neutral =  ..Limits.SternoClavicularAxialRotation_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder ElbowFlexion=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Right.ElbowFlexion;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.ElbowFlexion_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.ElbowFlexion_High/180*pi;
      
      AnyVar Weight =  ..Limits.ElbowFlexion_Weight;
      AnyVar Neutral =  ..Limits.ElbowFlexion_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder ElbowPronation=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Right.ElbowPronation;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.ElbowPronation_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.ElbowPronation_High/180*pi;
      
      AnyVar Weight =  ..Limits.ElbowPronation_Weight;
      AnyVar Neutral =  ..Limits.ElbowPronation_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder WristFlexion=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Right.WristFlexion;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.WristFlexion_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.WristFlexion_High/180*pi;
      
       AnyVar Weight =  ..Limits.WristFlexion_Weight;
      AnyVar Neutral =  ..Limits.WristFlexion_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder WristAbduction=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Right.WristAbduction;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.WristAbduction_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.WristAbduction_High/180*pi;
      
       AnyVar Weight =  ..Limits.WristAbduction_Weight;
      AnyVar Neutral =  ..Limits.WristAbduction_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder HipFlexion=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Right.HipFlexion;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.HipFlexion_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.HipFlexion_High/180*pi;
      
      AnyVar Weight =  ..Limits.HipFlexion_Weight;
      AnyVar Neutral =  ..Limits.HipFlexion_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder HipAbduction=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Right.HipAbduction;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.HipAbduction_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.HipAbduction_High/180*pi;
      
      AnyVar Weight =  ..Limits.HipAbduction_Weight;
      AnyVar Neutral =  ..Limits.HipAbduction_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder HipExternalRotation=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Right.HipExternalRotation;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.HipExternalRotation_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.HipExternalRotation_High/180*pi;
      
      AnyVar Weight =  ..Limits.HipExternalRotation_Weight;
      AnyVar Neutral =  ..Limits.HipExternalRotation_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder KneeFlexion=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Right.KneeFlexion;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.KneeFlexion_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.KneeFlexion_High/180*pi;
      
      AnyVar Weight =  ..Limits.KneeFlexion_Weight;
      AnyVar Neutral =  ..Limits.KneeFlexion_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder AnklePlantarFlexion=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Right.AnklePlantarFlexion;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.AnklePlantarFlexion_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.AnklePlantarFlexion_High/180*pi;
      
      AnyVar Weight =  ..Limits.AnklePlantarFlexion_Weight;
      AnyVar Neutral =  ..Limits.AnklePlantarFlexion_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder SubTalarEversion=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Right.SubTalarEversion;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.SubTalarEversion_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.SubTalarEversion_High/180*pi;
      
      AnyVar Weight =  ..Limits.SubTalarEversion_Weight;
      AnyVar Neutral =  ..Limits.SubTalarEversion_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
  }; //right
  
  
    
  AnyFolder Left ={
    
    AnyFolder SternoClavicularProtraction=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Left.SternoClavicularProtraction;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.SternoClavicularProtraction_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.SternoClavicularProtraction_High/180*pi;
      
       AnyVar Weight =  ..Limits.SternoClavicularProtraction_Weight;
      AnyVar Neutral =  ..Limits.SternoClavicularProtraction_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder SternoClavicularElevation=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Left.SternoClavicularElevation;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.SternoClavicularElevation_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.SternoClavicularElevation_High/180*pi;
      
      AnyVar Weight =  ..Limits.SternoClavicularElevation_Weight;
      AnyVar Neutral =  ..Limits.SternoClavicularElevation_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
   
    
    AnyFolder SternoClavicularAxialRotation=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Left.SternoClavicularAxialRotation;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.SternoClavicularAxialRotation_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.SternoClavicularAxialRotation_High/180*pi;
      
       AnyVar Weight =  ..Limits.SternoClavicularAxialRotation_Weight;
      AnyVar Neutral =  ..Limits.SternoClavicularAxialRotation_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder ElbowFlexion=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Left.ElbowFlexion;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.ElbowFlexion_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.ElbowFlexion_High/180*pi;
      
      AnyVar Weight =  ..Limits.ElbowFlexion_Weight;
      AnyVar Neutral =  ..Limits.ElbowFlexion_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder ElbowPronation=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Left.ElbowPronation;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.ElbowPronation_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.ElbowPronation_High/180*pi;
      
      AnyVar Weight =  ..Limits.ElbowPronation_Weight;
      AnyVar Neutral =  ..Limits.ElbowPronation_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder WristFlexion=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Left.WristFlexion;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.WristFlexion_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.WristFlexion_High/180*pi;
      
       AnyVar Weight =  ..Limits.WristFlexion_Weight;
      AnyVar Neutral =  ..Limits.WristFlexion_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder WristAbduction=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Left.WristAbduction;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.WristAbduction_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.WristAbduction_High/180*pi;
      
       AnyVar Weight =  ..Limits.WristAbduction_Weight;
      AnyVar Neutral =  ..Limits.WristAbduction_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder HipFlexion=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Left.HipFlexion;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.HipFlexion_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.HipFlexion_High/180*pi;
      
      AnyVar Weight =  ..Limits.HipFlexion_Weight;
      AnyVar Neutral =  ..Limits.HipFlexion_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder HipAbduction=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Left.HipAbduction;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.HipAbduction_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.HipAbduction_High/180*pi;
      
      AnyVar Weight =  ..Limits.HipAbduction_Weight;
      AnyVar Neutral =  ..Limits.HipAbduction_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder HipExternalRotation=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Left.HipExternalRotation;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.HipExternalRotation_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.HipExternalRotation_High/180*pi;
      
      AnyVar Weight =  ..Limits.HipExternalRotation_Weight;
      AnyVar Neutral =  ..Limits.HipExternalRotation_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder KneeFlexion=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Left.KneeFlexion;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.KneeFlexion_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.KneeFlexion_High/180*pi;
      
      AnyVar Weight =  ..Limits.KneeFlexion_Weight;
      AnyVar Neutral =  ..Limits.KneeFlexion_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder AnklePlantarFlexion=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Left.AnklePlantarFlexion;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.AnklePlantarFlexion_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.AnklePlantarFlexion_High/180*pi;
      
      AnyVar Weight =  ..Limits.AnklePlantarFlexion_Weight;
      AnyVar Neutral =  ..Limits.AnklePlantarFlexion_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
    AnyFolder SubTalarEversion=   {
      AnyKinMeasure& MeasureInterface = ....HumanModel.Interface.Left.SubTalarEversion;
      AnyKinMeasureLinComb MeasureInDegree = 
      {
        AnyKinMeasure& ref = .MeasureInterface ;
        Coef = {{180/pi}};
        OutDim = 1;
      }; 
      
      AnyKinMeasure& TargetMeasure = MeasureInterface ;
      AnyVar RangeMin = -pi;
      AnyVar RangeMax = pi;
      AnyVar LowerLimit = ..Limits.SubTalarEversion_Low/180*pi; //note extension positive
      AnyVar HighLimit = ..Limits.SubTalarEversion_High/180*pi;
      
      AnyVar Weight =  ..Limits.SubTalarEversion_Weight;
      AnyVar Neutral =  ..Limits.SubTalarEversion_Neutral/180*pi;
      #include "JointLimitsAndNeutralDriver.any"
    };
    
  }; //Left
  
};
