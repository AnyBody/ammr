#include "../libdef.any"


// First we include one of the example applications so we don't have to create a full model here. 
// The code below could be in any application. 
#include "<ANYBODY_PATH_AMMR>/Application/Examples/Squat/Squat.main.any"


Main = {
  
  // We add our code to the study folder, so we are sure it is included in the analysis.
  Study = {
    
    AnyFolder KneeForces = {
      
      // Some references for convenience and less typing. 
      AnyFolder& LegRef = Main.HumanModel.BodyModel.Right.Leg;
      AnyFolder& GlobalRef = Main.Model.Environment.GlobalRef;
      
      // We can get the forces/moments in the knee joints by finding the Contraints.Reactions object
      // in the joint.
      //
      // F[0] or F[1] are the same force vector but with different signs. Depends if we want the force femur inserts on tibia or opposite.
      // Here we chose [0] which is force shanks inserts on the femur.
      AnyVec3 KneeForceInGlobal = LegRef.Jnt.Knee.Constraints.Reaction.RefFrameOutput.F[0];
      AnyVec3 KneeMomentInGlobal = LegRef.Jnt.Knee.Constraints.Reaction.RefFrameOutput.M[0];
      
      // We can now express the force and moments in the coordinate system we want. 
      AnyVec3 KneeForceInShank = transf3D(KneeForceInGlobal, &GlobalRef, &LegRef.Seg.Shank.KneeJoint);
      AnyVec3 KneeMomentInShank = transf3D(KneeMomentInGlobal, &GlobalRef, &LegRef.Seg.Shank.KneeJoint);
      
      // Note this transformation is most easily done with the transf3D function but the same could have been achived 
      // by simply multipling the 'Axes' variable (rotation matrix) of the Shank knee joint coordinate system.
      // E.i.
      // AnyVec3 KneeForceInShank = (LegRef.Seg.Shank.KneeJoint.Axes'*KneeForceInGlobal')';
      
      
      // We can now calculate two equalant condyle compression forces which 
      // generates the same total force and moment. We can imagine this as the 2 force in the frontal 
      // plane which representas the force from the tibial platau on the femoral condyles. 
      // The two components are placed at somme displacement (L_medial/L_lateral) from the knee center. 
      AnyVar L_medial = 0.03;
      AnyVar L_lateral = 0.03;

      // Here F_total is vertical component of the force and M_total is the abbduction moment in the frontal plane.
      AnyVar F_total = KneeForceInShank[1];
      AnyVar M_total = KneeMomentInShank[0];
      
      // The relationships with lateral/medial force can be expressed as:
      // 
      //  F_total = F_medial + F_lateral
      //  M_total = F_medial*L_medial - F_lateral*L_lateral
      // 
      // From these the F_medial/F_lateral can be found:
      
      AnyFloat F_lateral = (F_total * L_medial - M_total) / (L_lateral + L_medial);
      AnyFloat F_medial = F_total - F_lateral;
      
      
      
      // Finally let us visualize the the forces:
      // First we create the nodes some medial/lateral distance 
      // along the knee axis. And inside the nodes we create small
      // vectors representing the forces. 
      
      LegRef.Seg.Shank = {
        AnyRefNode LateralKneeContactNode = {
          AnyVec3 uKneeAxis = {0,0,1}*ARel';
          sRel = .KneeJoint.sRel + ....L_lateral *uKneeAxis;
          ARel = .KneeJoint.ARel;
          AnyDrawVector LateralForceVec = {
            Vec = {0,.....F_lateral, 0}/5000;
            GlobalCoord = Off;
          };          
        };
        AnyRefNode MedialKneeContactNode = {
          AnyVec3 uKneeAxis = {0,0,1}*.KneeJoint.ARel';
          sRel = .KneeJoint.sRel - ....L_medial *uKneeAxis;
          ARel = .KneeJoint.ARel;
          AnyDrawVector MedialForceVec = {
            Vec = {0,.....F_medial, 0}/5000;
            GlobalCoord = Off;
          };
        };    
      };
      
 

      
      
      
      
    };
      
      
      
      
      
   };
    

};

