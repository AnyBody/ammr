#if HeadMarkersOnOff == 0
 #if BM_TRUNK == ON
 AnyKinEqSimpleDriver NeckDrv=
 {
   AnyKinMeasure& ref0 = ...BodyModel.Interface.Trunk.NeckJoint; 
   DriverPos=pi/180*{.JntPos.NeckExtension};
   DriverVel=pi/180*{.JntVel.NeckExtension};
   Reaction.Type={Off};
   //CType = {Soft};
 };
 #endif
 #if BM_TRUNK_NECK == ON
 AnyKinEqSimpleDriver NeckDrv=
 {
   AnyKinMeasure& ref0 = ...BodyModel.Interface.Trunk.SkullThoraxFlexion;
   AnyKinMeasure& ref1 = ...BodyModel.Interface.Trunk.SkullThoraxLateralBending;
   AnyKinMeasure& ref2 = ...BodyModel.Interface.Trunk.SkullThoraxRotation;   
   DriverPos=pi/180*{0, 0, 0};
   DriverVel=pi/180*{0, 0, 0};
   Reaction.Type={Off, Off, Off};
   //CType = {Soft, Soft, Soft};
 }; 
 #endif
#endif



#if TrunkMarkersOnOff == 0
 AnyKinEqSimpleDriver PelvisThoraxDrv =
 {
     AnyKinMeasure& ref0 = ...BodyModel.Interface.Trunk.PelvisThoraxExtension;
     AnyKinMeasure& ref1 = ...BodyModel.Interface.Trunk.PelvisThoraxLateralBending;
     AnyKinMeasure& ref2 = ...BodyModel.Interface.Trunk.PelvisThoraxRotation;
     DriverPos = pi/180*
     {
         .JntPos.PelvisThoraxExtension,
         .JntPos.PelvisThoraxLateralBending,
         .JntPos.PelvisThoraxRotation
     };
     DriverVel =  pi/180*
     {
         .JntVel.PelvisThoraxExtension,
         .JntVel.PelvisThoraxLateralBending,
         .JntVel.PelvisThoraxRotation
     };
     Reaction.Type = {Off, Off, Off};
 };
#endif
          
#if ThreeFootMarkersOnOff == 0
 AnyKinEqSimpleDriver AnkleDriverRight={
   AnyKinMeasure& ref2= Main.Studies.HumanModel.BodyModel.Interface.Right.SubTalarEversion;
   DriverPos = pi/180*{.JntPos.Right.SubTalarEversion};  
   DriverVel=pi/180*{.JntVel.Right.SubTalarEversion};  
   CType = {Soft};
   Reaction.Type={Off};
 };
 AnyKinEqSimpleDriver AnkleDriverLeft={
   AnyKinMeasure& ref2= Main.Studies.HumanModel.BodyModel.Interface.Left.SubTalarEversion;
   DriverPos = pi/180*{.JntPos.Left.SubTalarEversion};  
   DriverVel=pi/180*{.JntVel.Left.SubTalarEversion};  
   CType = {Soft};
   Reaction.Type={Off};
 };
#endif

#if BM_ARM_LEFT == ON
  #if BM_ARM_SHOULDER_RHYTHM == OFF
  AnyKinEqSimpleDriver SCAxialRotationDriverLeft =
  {
    AnyKinMeasure& ref3 =...BodyModel.Interface.Left.SternoClavicularAxialRotation;
    DriverPos = pi/180*
    {
      .JntPos.Left.SternoClavicularAxialRotation
    };
    DriverVel = pi/180*
    {
      .JntVel.Left.SternoClavicularAxialRotation
    };
    Reaction.Type={Off};
    //CType = {Soft};
  }; 
  #if SCMarkersOnOff == OFF
  AnyKinEqSimpleDriver SCProtractionDriverLeft =
  {
    AnyKinMeasure& ref3 =...BodyModel.Interface.Left.SternoClavicularProtraction;
    DriverPos = pi/180*
    {
      .JntPos.Left.SternoClavicularProtraction
    };
    DriverVel = pi/180*
    {
      .JntVel.Left.SternoClavicularProtraction
    };
    Reaction.Type={Off};
    //CType = {Soft};
  };  
  AnyKinEqSimpleDriver SCElevationDriverLeft =
  {
    AnyKinMeasure& ref3 =...BodyModel.Interface.Left.SternoClavicularElevation;
    DriverPos = pi/180*
    {
      .JntPos.Left.SternoClavicularElevation
    };
    DriverVel = pi/180*
    {
      .JntVel.Left.SternoClavicularElevation
    };
    Reaction.Type={Off};
    //CType = {Soft};
  };  
  #endif
 #endif
#endif

#if BM_ARM_RIGHT == ON
 #if BM_ARM_SHOULDER_RHYTHM == OFF
  AnyKinEqSimpleDriver SCAxialRotationDriverRight =
  {
    AnyKinMeasure& ref3 =...BodyModel.Interface.Right.SternoClavicularAxialRotation;
    DriverPos = pi/180*
    {
      .JntPos.Right.SternoClavicularAxialRotation
    };
    DriverVel = 
    {
      .JntVel.Right.SternoClavicularAxialRotation
    };
    Reaction.Type={Off};
    //CType = {Soft};
  };
  #if SCMarkersOnOff == OFF
   AnyKinEqSimpleDriver SCProtractionDriverRight =
   {
     AnyKinMeasure& ref3 =...BodyModel.Interface.Right.SternoClavicularProtraction;
     DriverPos = pi/180*
     {
       .JntPos.Right.SternoClavicularProtraction
     };
     DriverVel = 
     {
       .JntVel.Right.SternoClavicularProtraction
     };
     Reaction.Type={Off};
     //CType = {Soft};
   }; 
   AnyKinEqSimpleDriver SCElevationDriverRight =
   {
     AnyKinMeasure& ref3 =...BodyModel.Interface.Right.SternoClavicularElevation;
     DriverPos = pi/180*
     {
       .JntPos.Right.SternoClavicularElevation
     };
     DriverVel = 
     {
       .JntVel.Right.SternoClavicularElevation
     };
     Reaction.Type={Off};
     //CType = {Soft};
   };
  #endif
 #endif
#endif