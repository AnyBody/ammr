
//this template can be used to control that a models CoM is within the foot stance area.

#class_template CreateCoMLimitDriversFootStanceArea  (CoM
) {
  
  
  AnyFolder BalanceDrivers =   {
    
    Main.HumanModel.BodyModel.Right.Leg.Seg.Foot =     {
      AnyRefNode Centre =      {
        sRel = (.HeelContactNodeLow.sRel + .ToeLateralContactNode.sRel + .ToeMedialContactNode.sRel)/3;
        AnyDrawRefFrame drw ={};
      };
    };
    
    Main.HumanModel.BodyModel.Left.Leg.Seg.Foot = {
      AnyRefNode Centre =  {
        sRel = (.HeelContactNodeLow.sRel + .ToeLateralContactNode.sRel + .ToeMedialContactNode.sRel)/3;
        AnyDrawRefFrame drw ={};
      };
    };
    
    AnyFixedRefFrame VisualAids ={
      
      AnyVar Thickness=0.0075;
      //line between toe tips
      AnyDrawLine ToeTipsLineRightLeft ={
        p0=Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node3.r*{{1.0,0,0},{0,1.0,0},{0,0.0,0}}+Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.Centre.sRel*{{0.0,0,0},{0,0.0,0},{0,0.0,1.0}};
        p1=Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node3.r*{{1.0,0,0},{0,1.0,0},{0,0.0,0}}+Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.Centre.sRel*{{0.0,0,0},{0,0.0,0},{0,0.0,1.0}};
        
        Line.Thickness=.Thickness;
        Line.RGB={1,0,0};
      };
      
      //line on front of foot
      AnyDrawLine ToeFrontLineRight ={
        p0=Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node3.r*{{1.0,0,0},{0,1.0,0},{0,0.0,0}}+Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.Centre.sRel*{{0.0,0,0},{0,0.0,0},{0,0.0,1.0}};
        p1=Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node20.r*{{1.0,0,0},{0,1.0,0},{0,0.0,0}}+Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.Centre.sRel*{{0.0,0,0},{0,0.0,0},{0,0.0,1.0}};     
        Line.Thickness=.Thickness;
        Line.RGB={1,0,0};
      };
      
      //line on lateral side of foot
      AnyDrawLine FootLateralLineRight ={
        p0=Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node0.r*{{1.0,0,0},{0,1.0,0},{0,0.0,0}}+Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.Centre.sRel*{{0.0,0,0},{0,0.0,0},{0,0.0,1.0}};
        p1=Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node20.r*{{1.0,0,0},{0,1.0,0},{0,0.0,0}}+Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.Centre.sRel*{{0.0,0,0},{0,0.0,0},{0,0.0,1.0}};
        Line.Thickness=.Thickness;
        Line.RGB={1,0,0};
      };
      
      //line on front of foot
      AnyDrawLine ToeTipsLeft ={
        p0=Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node3.r*{{1.0,0,0},{0,1.0,0},{0,0.0,0}}+Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.Centre.sRel*{{0.0,0,0},{0,0.0,0},{0,0.0,1.0}};
        p1=Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node20.r*{{1.0,0,0},{0,1.0,0},{0,0.0,0}}+Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.Centre.sRel*{{0.0,0,0},{0,0.0,0},{0,0.0,1.0}};
        Line.Thickness=.Thickness;
        Line.RGB={1,0,0};
      };
      
      //line on lateral side of foot
      AnyDrawLine FootLateralLineLeft ={
        p0=Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node0.r*{{1.0,0,0},{0,1.0,0},{0,0.0,0}}+Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.Centre.sRel*{{0.0,0,0},{0,0.0,0},{0,0.0,1.0}};
        p1=Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node20.r*{{1.0,0,0},{0,1.0,0},{0,0.0,0}}+Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.Centre.sRel*{{0.0,0,0},{0,0.0,0},{0,0.0,1.0}};     
        Line.Thickness=.Thickness;
        Line.RGB={1,0,0};
      };
      
      
      //line between heel points
      AnyDrawLine HeelLine ={
        p0=Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node0.r*{{1.0,0,0},{0,1.0,0},{0,0.0,0}}+Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.Centre.sRel*{{0.0,0,0},{0,0.0,0},{0,0.0,1.0}};
        p1=Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node0.r*{{1.0,0,0},{0,1.0,0},{0,0.0,0}}+Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.Centre.sRel*{{0.0,0,0},{0,0.0,0},{0,0.0,1.0}};
        Line.RGB={1,0,0};
        Line.Thickness=.Thickness;
        
      };
      
    };
    
    
    AnyFolder MeasuringCoordinateSystemsForLines ={
      
      AnyFolder ToeTipsCoordinateSystem={
        
        AnyFixedRefFrame frm={};
        
        AnySeg CoordinateSystem ={
          Mass=0;
          Jii={0,0,0};
          AnyRefNode MeasuringNode ={  
            ARel=RotMat(-0.5*pi,z);   
            AnyDrawRefFrame drw ={ScaleXYZ={0,1,0}*0.05; RGB={0,0,1};};
          };
          r0=Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.r0+(Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node3.sRel*Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.ARel'+Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.sRel)*Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.Axes0'   ;
          Axes0=Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.Axes0*Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.ARel*RotMat(pi,y);
          AnyRefNode PointAtNodeX ={sRel={0.1,0,0};};
          AnyRefNode PointAtNodeZ ={sRel={0,0,0.1};};
          
        };
        AnyKinLinear lin ={
          AnyRefFrame &ref1=Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node3;
          AnySeg &ref2 =.CoordinateSystem;
        };
        AnyKinEq linCon ={
          AnyKinLinear &ref=.lin;
        };
        AnyKinLinear lin2 ={
          Ref=0;
          AnyRefFrame &ref2 =.CoordinateSystem.PointAtNodeZ;
          AnyRefFrame &ref1=Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node3;
        };
        
        AnyKinEq linCon2 ={
          AnyKinLinear &ref=.lin2;
          MeasureOrganizer ={0,1};
        };
        AnyKinLinear lin3 ={
          Ref=1;
          AnyRefFrame &ref2 =.CoordinateSystem.PointAtNodeX;
          AnyRefFrame &ref1=Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node3;
        };
        AnyKinEq linCon3 ={
          AnyKinLinear &ref=.lin3;
          MeasureOrganizer ={1};
        };
        
      };
      
      AnyFolder HeelCoordinateSystem={
        
        AnyFixedRefFrame frm={};
        AnySeg CoordinateSystem ={
          Mass=0;
          Jii={0,0,0};
          r0=Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.r0+(Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node0.sRel*Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.ARel'+Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.sRel)*Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.Axes0'   ;
          Axes0=Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.Axes0*Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.ARel*RotMat(pi,y)*RotMat(-0.5*pi,z); 
          AnyRefNode MeasuringNode ={
            ARel=RotMat(pi,z);   
            AnyDrawRefFrame drw ={ScaleXYZ={1,1,1}*0.05; RGB={0,0,1};};
          };
          AnyRefNode PointAtNodeX ={sRel={0.1,0,0};};
          AnyRefNode PointAtNodeY ={sRel={0,0.1,0};};
          
          AnyRefNode PointAtNodeZ ={sRel={0,0,0.1};};
          
        };
        
        
        
        AnyKinLinear lin1 ={
          Ref=-1;
          AnyRefFrame &ref1=Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node0;
          AnySeg &ref2 =.CoordinateSystem;
        };
        AnyKinEq linCon ={
          AnyKinLinear &ref=.lin1;
          MeasureOrganizer ={0,1};
        };
        AnyKinLinear lin2 ={
          AnyRefFrame &ref1=.frm;
          AnySeg &ref2 =.CoordinateSystem;
          Ref=0;
        };
        AnyKinEq linConZ ={
          AnyKinLinear &ref=.lin2;
          MeasureOrganizer ={2};
        };
        
        AnyKinLinear lin3 ={
          Ref=-1;
          AnyRefFrame &ref1=.frm;
          AnyRefFrame &ref2 =.CoordinateSystem.PointAtNodeZ;
        };
        
        AnyKinEq linCon3 ={
          AnyKinLinear &ref=.lin3;
          MeasureOrganizer ={2};
        };
        
        AnyKinLinear lin4 ={
          Ref=-1;
          AnyRefFrame &ref1=.frm;
          AnyRefFrame &ref2 =.CoordinateSystem.PointAtNodeY;
        };
        
        AnyKinEq linCon4 ={
          AnyKinLinear &ref=.lin4;
          MeasureOrganizer ={2};
        };
        
        AnyKinLinear lin5 ={
          Ref=0;  
          AnyRefFrame &ref2 =.CoordinateSystem.PointAtNodeZ;
          AnyRefFrame &ref1=Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node0;
        };
        AnyKinEq linCon5 ={
          AnyKinLinear &ref=.lin5;
          MeasureOrganizer ={1};
        };
        
        
      };
      
      
      
      //line on front of foot
      AnyFolder ToeFrontLineRight ={
        
        AnyFolder &ref= Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node3;
        ref={
          AnyRefNode CoordinateSystem ={ARel =RotMat(
            Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node3.sRel,
            Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node20.sRel,
            Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node0.sRel)*RotMat(pi,y);
            AnyDrawRefFrame drw ={ScaleXYZ={0,1,0}*0.05; RGB={0,0,1};};
          }; 
        };
        
      };
      
      AnyFolder FootLateralLineRight ={
        
        AnyFolder &ref= Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node20;
        ref={
          AnyRefNode CoordinateSystem ={ARel =RotMat(
            Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node20.sRel,
            Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node0.sRel,
            Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.ConditionalContact_Nodes.Node3.sRel)*RotMat(pi,y);
            AnyDrawRefFrame drw ={ScaleXYZ={0,1,0}*0.05; RGB={0,0,1};};
          }; 
        };
        
      };
      
      //line on front of foot
      AnyFolder ToeFrontLineLeft ={
        
        AnyFolder &ref= Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node3;
        ref={
          AnyRefNode CoordinateSystem ={ARel =RotMat(
            Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node3.sRel,
            Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node20.sRel,
            Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node0.sRel)*RotMat(pi,y);
            AnyDrawRefFrame drw ={ScaleXYZ={0,1,0}*0.05; RGB={0,0,1};};
          }; 
        };
        
      };
      
      AnyFolder FootLateralLineLeft ={
        
        AnyFolder &ref= Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node20;
        ref={
          AnyRefNode CoordinateSystem ={ARel =RotMat(
            Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node20.sRel,
            Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node0.sRel,
            Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.ConditionalContact_Nodes.Node3.sRel)*RotMat(pi,y);
            AnyDrawRefFrame drw ={ScaleXYZ={0,1,0}*0.05; RGB={0,0,1};};
          }; 
        };
        
      };
    };
    
    
    AnyFolder LineMeasures ={
      
      AnyKinLinear ToeTipsLine={
        Ref=0;
        AnyRefFrame &ref1=....CoMLimits.BalanceDrivers.MeasuringCoordinateSystemsForLines.ToeTipsCoordinateSystem.CoordinateSystem.MeasuringNode;
        AnySeg &body = CoM;
      };
      
      AnyKinLinear HeelLine={
        Ref=0;
        AnyRefFrame &ref1=       ....CoMLimits.BalanceDrivers.MeasuringCoordinateSystemsForLines.HeelCoordinateSystem.CoordinateSystem.MeasuringNode;
        AnySeg &body = CoM;
      };
      //    //line on front of foot
      AnyKinLinear ToeFrontLineRight ={
        Ref=0;
        AnyRefFrame &ref1=        ....CoMLimits.BalanceDrivers.MeasuringCoordinateSystemsForLines.ToeFrontLineRight.ref.CoordinateSystem;
        AnySeg &body = CoM;
      };
      
      
      AnyKinLinear FootLateralLineRight ={
        Ref=0;
        AnyRefFrame &ref1=        ....CoMLimits.BalanceDrivers.MeasuringCoordinateSystemsForLines.FootLateralLineRight.ref.CoordinateSystem;
        AnySeg &body = CoM;
      };
      
      //line on front of foot
      AnyKinLinear ToeFrontLineLeft ={
        Ref=0;
        AnyRefFrame &ref1=       ....CoMLimits.BalanceDrivers.MeasuringCoordinateSystemsForLines.ToeFrontLineLeft.ref.CoordinateSystem;
        AnySeg &body = CoM;
      };
      
      AnyKinLinear FootLateralLineLeft ={
        
        Ref=0;
        AnyRefFrame &ref1=       ....CoMLimits.BalanceDrivers.MeasuringCoordinateSystemsForLines.FootLateralLineLeft.ref.CoordinateSystem;
        AnySeg &body = CoM;
      };
    };
    
    //now add the conditional constraints
    
    AnyFolder LineConstraints ={
      
      AnyVar LowerLimit =0.05; //inside bound
      AnyVar DriverPhaseIn =0.075;
      AnyVar ErrorAtHardLimit =0.1; //0.05
      
      AnyFolder ToeTipsLine={
        #var AnyVar HighLimit = 1;  //needs to be high to move it out of influence
        #var AnyVar LowerLimit= .LowerLimit;  //stop before the edge of the foot
        
        AnyKinMeasureOrg Y_ ={AnyKinLinear  &ref=...LineMeasures.ToeTipsLine ; MeasureOrganizer={1};};
        
        KinLimitsDriver Driver(
        KinMeasure= .Y_
        ) = { LowerLimit =.LowerLimit;HighLimit = .HighLimit; MeasureConversion=1;ErrorAtHardLimit= ..ErrorAtHardLimit; DriverPhaseIn =..DriverPhaseIn; };
        
      };
      
      AnyFolder HeelLine={
        #var AnyVar HighLimit = 1;  //needs to be high to move it out of influence
        #var AnyVar LowerLimit= .LowerLimit; 
        
        AnyKinMeasureOrg Y_ ={AnyKinLinear  &ref=...LineMeasures.HeelLine ; MeasureOrganizer={1};};
        
        KinLimitsDriver Driver(
        KinMeasure= .Y_
        ) = { LowerLimit =.LowerLimit;HighLimit = .HighLimit; MeasureConversion=1;ErrorAtHardLimit= ..ErrorAtHardLimit;DriverPhaseIn =..DriverPhaseIn; };
        
        
      };
      AnyFolder ToeFrontLineRight ={
        #var AnyVar HighLimit = 1;  //needs to be high to move it out of influence
        #var AnyVar LowerLimit= .LowerLimit; 
        
        AnyKinMeasureOrg Y_ ={AnyKinLinear  &ref=...LineMeasures.ToeFrontLineRight ; MeasureOrganizer={1};};
        
        KinLimitsDriver Driver(
        KinMeasure= .Y_
        ) = { LowerLimit =.LowerLimit;HighLimit = .HighLimit; MeasureConversion=1;ErrorAtHardLimit= ..ErrorAtHardLimit;DriverPhaseIn =..DriverPhaseIn; };
        
        
      };
      AnyFolder FootLateralLineRight ={
        #var AnyVar HighLimit = 1;  //needs to be high to move it out of influence
        #var AnyVar LowerLimit= .LowerLimit; 
        
        AnyKinMeasureOrg Y_ ={AnyKinLinear  &ref=...LineMeasures.FootLateralLineRight ; MeasureOrganizer={1};};
        
        KinLimitsDriver Driver(
        KinMeasure= .Y_
        ) = { LowerLimit =.LowerLimit;HighLimit = .HighLimit; MeasureConversion=1;ErrorAtHardLimit= ..ErrorAtHardLimit;DriverPhaseIn =..DriverPhaseIn; };
        
        
      };
      AnyFolder ToeFrontLineLeft ={
        #var AnyVar HighLimit = 1;  //needs to be high to move it out of influence
        #var AnyVar LowerLimit= .LowerLimit; 
        
        AnyKinMeasureOrg Y_ ={AnyKinLinear  &ref=...LineMeasures.ToeFrontLineLeft ; MeasureOrganizer={1};};
        
        KinLimitsDriver Driver(
        KinMeasure= .Y_
        ) = { LowerLimit =.LowerLimit;HighLimit = .HighLimit; MeasureConversion=1;ErrorAtHardLimit= ..ErrorAtHardLimit;DriverPhaseIn =..DriverPhaseIn; };
       
      };
      
     
      AnyFolder FootLateralLineLeft =     {
        #var AnyVar HighLimit = 1;  //needs to be high to move it out of influence
        #var AnyVar LowerLimit= .LowerLimit; 
        
        AnyKinMeasureOrg Y_ ={AnyKinLinear  &ref=...LineMeasures.FootLateralLineLeft ; MeasureOrganizer={1};};
        
        KinLimitsDriver Driver(
        KinMeasure= .Y_
        ) = { LowerLimit =.LowerLimit;HighLimit = .HighLimit; MeasureConversion=1;ErrorAtHardLimit= ..ErrorAtHardLimit;DriverPhaseIn =..DriverPhaseIn; };
        
      };
     
    };
    
  };
};






