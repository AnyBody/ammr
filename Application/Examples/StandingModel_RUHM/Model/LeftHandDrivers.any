

// ************************************
// Drivers for the Left fingers
// ************************************

//finger1
AnyKinEqSimpleDriver CMC1FlexionL={
  AnyRevoluteJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger1.Jnt.CMCFlexion;
  DriverPos= {.JntPos.Left.Finger1.CMCFlexion}*pi/180;  
  DriverVel= {.JntVel.Left.Finger1.CMCFlexion}*pi/180; 
  Reaction.Type={Off};
};

AnyKinEqSimpleDriver CMC1AbductionL={
  AnyRevoluteJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger1.Jnt.CMCAbduction;
  DriverPos={.JntPos.Left.Finger1.CMCAbduction}*pi/180;  
  DriverVel={.JntVel.Left.Finger1.CMCAbduction}*pi/180;
  Reaction.Type={Off};
};



AnyKinEqSimpleDriver MCP1FlexionL={
  
  AnyRevoluteJoint &ref= ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger1.Jnt.MCPFlexion;
  DriverPos={.JntPos.Left.Finger1.MCPFlexion}*pi/180;
  DriverVel={.JntVel.Left.Finger1.MCPFlexion}*pi/180;
  Reaction.Type={Off};
};
AnyKinEqSimpleDriver MCP1AbductionL={
  
  AnyRevoluteJoint &ref= ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger1.Jnt.MCPAbduction;
  DriverPos={.JntPos.Left.Finger1.MCPAbduction}*pi/180;
  DriverVel={.JntVel.Left.Finger1.MCPAbduction}*pi/180;
  Reaction.Type={Off};
};

AnyKinEqSimpleDriver DIP1L={
  AnyRevoluteJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger1.Jnt.DIP;
  DriverPos={.JntPos.Left.Finger1.DIPFlexion}*pi/180;  
  DriverVel={.JntVel.Left.Finger1.DIPFlexion}*pi/180;
  Reaction.Type={Off};
};


// finger2
#if BM_HAND_MODEL == _HAND_MODEL_RUHM_
AnyKinEqSimpleDriver CMC2L={
  AnyUniversalJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger2.Jnt.CMC;
  DriverPos={0,0};  
  DriverVel={0,0};
  Reaction.Type={Off,Off};
};
#endif
AnyKinEqSimpleDriver MCP2L={
  AnyUniversalJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger2.Jnt.MCP;
  DriverPos={.JntPos.Left.Finger2.MCPFlexion,.JntPos.Left.Finger2.MCPAbduction}*pi/180;  
  DriverVel={.JntVel.Left.Finger2.MCPFlexion,.JntVel.Left.Finger2.MCPAbduction}*pi/180;
  Reaction.Type={Off,Off};
};  
AnyKinEqSimpleDriver PIP2L={
  AnyRevoluteJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger2.Jnt.PIP;
  DriverPos={.JntPos.Left.Finger2.PIPFlexion}*pi/180;  
  DriverVel={.JntVel.Left.Finger2.PIPFlexion}*pi/180;
  Reaction.Type={Off};
};
#if BM_HAND_FINGER_RHYTHM == OFF
AnyKinEqSimpleDriver DIP2L={
  AnyRevoluteJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger2.Jnt.DIP;
  DriverPos={.JntPos.Left.Finger2.DIPFlexion}*pi/180;  
  DriverVel={.JntVel.Left.Finger2.DIPFlexion}*pi/180;
  Reaction.Type={Off};
};
#else
AnyKinMeasureLinComb FingerRhythm_DIP2L= 
{
  AnyRevoluteJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger2.Jnt.DIP;
  AnyKinMeasureFunComb1 FunComp = 
  {
    AnyKinMeasureOrg &Jnt = ..PIPAngle2;
    Functions = {&DIPflexion};  
    #include "FingerDriver.any" 
    AnyFunPolynomial &DIPflexion = Rhythm.DIPflexion;      
  }; 
  OutDim = 1;
  Coef = {{1,-1}};  
};
AnyKinMeasureOrg PIPAngle2L={
  AnyKinRotational Angle = 
  {
    Type = RotAxesAngles;
    AnyRefNode &ref1=....HumanModel.Left.ShoulderArm.Seg.Hand.Finger2.Seg.ProximalPhalanx.DistalJointNode;
    AnyRefNode &ref2=....HumanModel.Left.ShoulderArm.Seg.Hand.Finger2.Seg.MiddlePhalanx.ProximalJointNode;
  };
  MeasureOrganizer ={0};
};
AnyKinEqSimpleDriver DIP2L= 
{
  AnyKinMeasureLinComb &FingerRhythm = .FingerRhythm_DIP2;
  MeasureOrganizer = {0};
  DriverPos = {0};
  DriverVel = {0};
  Reaction.Type = {Off};
};
#endif



// finger3
#if BM_HAND_MODEL == _HAND_MODEL_RUHM_
AnyKinEqSimpleDriver CMC3L={
  AnyUniversalJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger3.Jnt.CMC;
  DriverPos={0,0};  
  DriverVel={0,0};
  Reaction.Type={Off,Off};
};
#endif
AnyKinEqSimpleDriver MCP3L={
  AnyUniversalJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger3.Jnt.MCP;
  DriverPos={.JntPos.Left.Finger3.MCPFlexion,.JntPos.Left.Finger3.MCPAbduction}*pi/180;  
  DriverVel={.JntVel.Left.Finger3.MCPFlexion,.JntVel.Left.Finger3.MCPAbduction}*pi/180;
  Reaction.Type={Off,Off};
};  
AnyKinEqSimpleDriver PIP3L={
  AnyRevoluteJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger3.Jnt.PIP;
  DriverPos={.JntPos.Left.Finger3.PIPFlexion}*pi/180;  
  DriverVel={.JntVel.Left.Finger3.PIPFlexion}*pi/180;
  Reaction.Type={Off};
};
#if BM_HAND_FINGER_RHYTHM == OFF
AnyKinEqSimpleDriver DIP3L={
  AnyRevoluteJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger3.Jnt.DIP;
  DriverPos={.JntPos.Left.Finger3.DIPFlexion}*pi/180;  
  DriverVel={.JntVel.Left.Finger3.DIPFlexion}*pi/180;
  Reaction.Type={Off};
};
#else
AnyKinMeasureLinComb FingerRhythm_DIP3L= 
{
  AnyRevoluteJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger3.Jnt.DIP;
  AnyKinMeasureFunComb1 FunComp = 
  {
    AnyKinMeasureOrg &Jnt = ..PIPAngle3;
    Functions = {&DIPflexion};  
    #include "FingerDriver.any" 
    AnyFunPolynomial &DIPflexion = Rhythm.DIPflexion;      
  }; 
  OutDim = 1;
  Coef = {{1,-1}};  
};
AnyKinMeasureOrg PIPAngle3L={
  AnyKinRotational Angle = 
  {
    Type = RotAxesAngles;
    AnyRefNode &ref1=....HumanModel.Left.ShoulderArm.Seg.Hand.Finger3.Seg.ProximalPhalanx.DistalJointNode;
    AnyRefNode &ref2=....HumanModel.Left.ShoulderArm.Seg.Hand.Finger3.Seg.MiddlePhalanx.ProximalJointNode;
  };
  MeasureOrganizer ={0};
};
AnyKinEqSimpleDriver DIP3L= 
{
  AnyKinMeasureLinComb &FingerRhythm = .FingerRhythm_DIP3;
  MeasureOrganizer = {0};
  DriverPos = {0};
  DriverVel = {0};
  Reaction.Type = {Off};
};
#endif


//finger4
#if BM_HAND_MODEL == _HAND_MODEL_RUHM_
AnyKinEqSimpleDriver CMC4L={
  AnyUniversalJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger4.Jnt.CMC;
  DriverPos={0,0}*pi/180;  
  DriverVel={0,0};
  Reaction.Type={Off,Off};
};
#endif
AnyKinEqSimpleDriver MCP4L={
  AnyUniversalJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger4.Jnt.MCP;
  DriverPos={.JntPos.Left.Finger4.MCPFlexion,.JntPos.Left.Finger4.MCPAbduction}*pi/180;  
  DriverVel={.JntVel.Left.Finger4.MCPFlexion,.JntVel.Left.Finger4.MCPAbduction}*pi/180;
  Reaction.Type={Off,Off};
};  
AnyKinEqSimpleDriver PIP4L={
  AnyRevoluteJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger4.Jnt.PIP;
  DriverPos={.JntPos.Left.Finger4.PIPFlexion}*pi/180;  
  DriverVel={.JntVel.Left.Finger4.PIPFlexion}*pi/180;
  Reaction.Type={Off};
};
#if BM_HAND_FINGER_RHYTHM == OFF
AnyKinEqSimpleDriver DIP4L={
  AnyRevoluteJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger4.Jnt.DIP;
  DriverPos={.JntPos.Left.Finger4.DIPFlexion}*pi/180;  
  DriverVel={.JntVel.Left.Finger4.DIPFlexion}*pi/180;
  Reaction.Type={Off};
};
#else
AnyKinMeasureLinComb FingerRhythm_DIP4L = 
{
  AnyRevoluteJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger4.Jnt.DIP;
  AnyKinMeasureFunComb1 FunComp = 
  {
    AnyKinMeasureOrg &Jnt = ..PIPAngle4;
    Functions = {&DIPflexion};  
    #include "FingerDriver.any" 
    AnyFunPolynomial &DIPflexion = Rhythm.DIPflexion;      
  }; 
  OutDim = 1;
  Coef = {{1,-1}};
};
AnyKinMeasureOrg PIPAngle4 ={
  AnyKinRotational Angle = 
  {
    Type = RotAxesAngles;
    AnyRefNode &ref1=....HumanModel.Left.ShoulderArm.Seg.Hand.Finger4.Seg.ProximalPhalanx.DistalJointNode;
    AnyRefNode &ref2=....HumanModel.Left.ShoulderArm.Seg.Hand.Finger4.Seg.MiddlePhalanx.ProximalJointNode;
  };
  MeasureOrganizer ={0};
};
AnyKinEqSimpleDriver DIP4L = 
{
  AnyKinMeasureLinComb &FingerRhythm = .FingerRhythm_DIP4;
  MeasureOrganizer = {0};
  DriverPos = {0};
  DriverVel = {0};
  Reaction.Type = {Off};
};
#endif


// finger5
#if BM_HAND_MODEL == _HAND_MODEL_RUHM_
AnyKinEqSimpleDriver CMC5L={
  AnyUniversalJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger5.Jnt.CMC;
  DriverPos={0,0};  
  DriverVel={0,0};
  Reaction.Type={Off,Off};
};
#endif
AnyKinEqSimpleDriver MCP5L={
  AnyUniversalJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger5.Jnt.MCP;
  DriverPos={.JntPos.Left.Finger5.MCPFlexion,.JntPos.Left.Finger5.MCPAbduction}*pi/180;  
  DriverVel={.JntVel.Left.Finger5.MCPFlexion,.JntVel.Left.Finger5.MCPAbduction}*pi/180;
  Reaction.Type={Off,Off};
};  
AnyKinEqSimpleDriver PIP5L={
  AnyRevoluteJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger5.Jnt.PIP;
  DriverPos={.JntPos.Left.Finger5.PIPFlexion}*pi/180;  
  DriverVel={.JntVel.Left.Finger5.PIPFlexion}*pi/180;
  Reaction.Type={Off};
};
#if BM_HAND_FINGER_RHYTHM == OFF
AnyKinEqSimpleDriver DIP5L={
  AnyRevoluteJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger5.Jnt.DIP;
  DriverPos={.JntPos.Left.Finger5.DIPFlexion}*pi/180;  
  DriverVel={.JntVel.Left.Finger5.DIPFlexion}*pi/180;
  Reaction.Type={Off};
};
#else
AnyKinMeasureLinComb FingerRhythm_DIP5L = 
{
  AnyRevoluteJoint &ref=  ...HumanModel.Left.ShoulderArm.Seg.Hand.Finger5.Jnt.DIP;
  AnyKinMeasureFunComb1 FunComp = 
  {
    AnyKinMeasureOrg &Jnt = ..PIPAngle5;
    Functions = {&DIPflexion};  
    #include "FingerDriver.any" 
    AnyFunPolynomial &DIPflexion = Rhythm.DIPflexion;      
  }; 
  OutDim = 1;
  Coef = {{1,-1}};  
};
AnyKinMeasureOrg PIPAngle5L ={
  AnyKinRotational Angle = 
  {
    Type = RotAxesAngles;
    AnyRefNode &ref1=....HumanModel.Left.ShoulderArm.Seg.Hand.Finger5.Seg.ProximalPhalanx.DistalJointNode;
    AnyRefNode &ref2=....HumanModel.Left.ShoulderArm.Seg.Hand.Finger5.Seg.MiddlePhalanx.ProximalJointNode;
  };
  MeasureOrganizer ={0};
};
AnyKinEqSimpleDriver DIP5L = 
{
  AnyKinMeasureLinComb &FingerRhythm = .FingerRhythm_DIP5;
  MeasureOrganizer = {0};
  DriverPos = {0};
  DriverVel = {0};
  Reaction.Type = {Off};
};   
#endif



