

// ************************************
// Drivers for the right fingers
// ************************************

//finger1
AnyKinEqSimpleDriver CMC1Flexion={
  AnyRevoluteJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger1.Jnt.CMCFlexion;
  DriverPos= {.JntPos.Right.Finger1.CMCFlexion}*pi/180;  
  DriverVel= {.JntVel.Right.Finger1.CMCFlexion}*pi/180; 
  Reaction.Type={Off};
};

AnyKinEqSimpleDriver CMC1Abduction={
  AnyRevoluteJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger1.Jnt.CMCAbduction;
  DriverPos={.JntPos.Right.Finger1.CMCAbduction}*pi/180;  
  DriverVel={.JntVel.Right.Finger1.CMCAbduction}*pi/180;
  Reaction.Type={Off};
};



AnyKinEqSimpleDriver MCP1Flexion={
  
  AnyRevoluteJoint &ref= ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger1.Jnt.MCPFlexion;
  DriverPos={.JntPos.Right.Finger1.MCPFlexion}*pi/180;
  DriverVel={.JntVel.Right.Finger1.MCPFlexion}*pi/180;
  Reaction.Type={Off};
};
AnyKinEqSimpleDriver MCP1Abduction={
  
  AnyRevoluteJoint &ref= ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger1.Jnt.MCPAbduction;
  DriverPos={.JntPos.Right.Finger1.MCPAbduction}*pi/180;
  DriverVel={.JntVel.Right.Finger1.MCPAbduction}*pi/180;
  Reaction.Type={Off};
};

AnyKinEqSimpleDriver DIP1={
  AnyRevoluteJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger1.Jnt.DIP;
  DriverPos={.JntPos.Right.Finger1.DIPFlexion}*pi/180;  
  DriverVel={.JntVel.Right.Finger1.DIPFlexion}*pi/180;
  Reaction.Type={Off};
};


// finger2
#if _ARM_DETAILED_HAND_WHICH =="RUHM"
AnyKinEqSimpleDriver CMC2={
  AnyUniversalJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger2.Jnt.CMC;
  DriverPos={0,0};  
  DriverVel={0,0};
  Reaction.Type={Off,Off};
};
#endif
AnyKinEqSimpleDriver MCP2={
  AnyUniversalJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger2.Jnt.MCP;
  DriverPos={.JntPos.Right.Finger2.MCPFlexion,.JntPos.Right.Finger2.MCPAbduction}*pi/180;  
  DriverVel={.JntVel.Right.Finger2.MCPFlexion,.JntVel.Right.Finger2.MCPAbduction}*pi/180;
  Reaction.Type={Off,Off};
};  
AnyKinEqSimpleDriver PIP2={
  AnyRevoluteJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger2.Jnt.PIP;
  DriverPos={.JntPos.Right.Finger2.PIPFlexion}*pi/180;  
  DriverVel={.JntVel.Right.Finger2.PIPFlexion}*pi/180;
  Reaction.Type={Off};
};
#if BM_HAND_FINGER_RHYTHM == OFF
AnyKinEqSimpleDriver DIP2={
  AnyRevoluteJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger2.Jnt.DIP;
  DriverPos={.JntPos.Right.Finger2.DIPFlexion}*pi/180;  
  DriverVel={.JntVel.Right.Finger2.DIPFlexion}*pi/180;
  Reaction.Type={Off};
};
#else
AnyKinMeasureLinComb FingerRhythm_DIP2 = 
{
  AnyRevoluteJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger2.Jnt.DIP;
  AnyKinMeasureFunComb1 FunComp = 
  {
    AnyKinMeasureOrg &Jnt = ..PIPAngle2;
    Functions = {&DIPflexion};  
    #include "FingerDriver.any" 
    AnyFunPolynomial &DIPflexion = Rhythm.DIPflexion;      
  }; 
  OutDim = 1;
  Coef = {{1,-1}};  
};
AnyKinMeasureOrg PIPAngle2 ={
  AnyKinRotational Angle = 
  {
    Type = RotAxesAngles;
    AnyRefNode &ref1=....HumanModel.Right.ShoulderArm.Seg.Hand.Finger2.Seg.ProximalPhalanx.DistalJointNode;
    AnyRefNode &ref2=....HumanModel.Right.ShoulderArm.Seg.Hand.Finger2.Seg.MiddlePhalanx.ProximalJointNode;
  };
  MeasureOrganizer ={0};
};
AnyKinEqSimpleDriver DIP2 = 
{
  AnyKinMeasureLinComb &FingerRhythm = .FingerRhythm_DIP2;
  MeasureOrganizer = {0};
  DriverPos = {0};
  DriverVel = {0};
  Reaction.Type = {Off};
};
#endif



// finger3
#if _ARM_DETAILED_HAND_WHICH =="RUHM"
AnyKinEqSimpleDriver CMC3={
  AnyUniversalJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger3.Jnt.CMC;
  DriverPos={0,0};  
  DriverVel={0,0};
  Reaction.Type={Off,Off};
};
#endif
AnyKinEqSimpleDriver MCP3={
  AnyUniversalJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger3.Jnt.MCP;
  DriverPos={.JntPos.Right.Finger3.MCPFlexion,.JntPos.Right.Finger3.MCPAbduction}*pi/180;  
  DriverVel={.JntVel.Right.Finger3.MCPFlexion,.JntVel.Right.Finger3.MCPAbduction}*pi/180;
  Reaction.Type={Off,Off};
};  
AnyKinEqSimpleDriver PIP3={
  AnyRevoluteJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger3.Jnt.PIP;
  DriverPos={.JntPos.Right.Finger3.PIPFlexion}*pi/180;  
  DriverVel={.JntVel.Right.Finger3.PIPFlexion}*pi/180;
  Reaction.Type={Off};
};
#if BM_HAND_FINGER_RHYTHM == OFF
AnyKinEqSimpleDriver DIP3={
  AnyRevoluteJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger3.Jnt.DIP;
  DriverPos={.JntPos.Right.Finger3.DIPFlexion}*pi/180;  
  DriverVel={.JntVel.Right.Finger3.DIPFlexion}*pi/180;
  Reaction.Type={Off};
};
#else
AnyKinMeasureLinComb FingerRhythm_DIP3 = 
{
  AnyRevoluteJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger3.Jnt.DIP;
  AnyKinMeasureFunComb1 FunComp = 
  {
    AnyKinMeasureOrg &Jnt = ..PIPAngle3;
    Functions = {&DIPflexion};  
    #include "FingerDriver.any" 
    AnyFunPolynomial &DIPflexion = Rhythm.DIPflexion;      
  }; 
  OutDim = 1;
  Coef = {{1,-1}};  
};
AnyKinMeasureOrg PIPAngle3 ={
  AnyKinRotational Angle = 
  {
    Type = RotAxesAngles;
    AnyRefNode &ref1=....HumanModel.Right.ShoulderArm.Seg.Hand.Finger3.Seg.ProximalPhalanx.DistalJointNode;
    AnyRefNode &ref2=....HumanModel.Right.ShoulderArm.Seg.Hand.Finger3.Seg.MiddlePhalanx.ProximalJointNode;
  };
  MeasureOrganizer ={0};
};
AnyKinEqSimpleDriver DIP3 = 
{
  AnyKinMeasureLinComb &FingerRhythm = .FingerRhythm_DIP3;
  MeasureOrganizer = {0};
  DriverPos = {0};
  DriverVel = {0};
  Reaction.Type = {Off};
};
#endif


//finger4
#if _ARM_DETAILED_HAND_WHICH =="RUHM"
AnyKinEqSimpleDriver CMC4={
  AnyUniversalJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger4.Jnt.CMC;
  DriverPos={0,0}*pi/180;  
  DriverVel={0,0};
  Reaction.Type={Off,Off};
};
#endif
AnyKinEqSimpleDriver MCP4={
  AnyUniversalJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger4.Jnt.MCP;
  DriverPos={.JntPos.Right.Finger4.MCPFlexion,.JntPos.Right.Finger4.MCPAbduction}*pi/180;  
  DriverVel={.JntVel.Right.Finger4.MCPFlexion,.JntVel.Right.Finger4.MCPAbduction}*pi/180;
  Reaction.Type={Off,Off};
};  
AnyKinEqSimpleDriver PIP4={
  AnyRevoluteJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger4.Jnt.PIP;
  DriverPos={.JntPos.Right.Finger4.PIPFlexion}*pi/180;  
  DriverVel={.JntVel.Right.Finger4.PIPFlexion}*pi/180;
  Reaction.Type={Off};
};
#if BM_HAND_FINGER_RHYTHM == OFF
AnyKinEqSimpleDriver DIP4={
  AnyRevoluteJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger4.Jnt.DIP;
  DriverPos={.JntPos.Right.Finger4.DIPFlexion}*pi/180;  
  DriverVel={.JntVel.Right.Finger4.DIPFlexion}*pi/180;
  Reaction.Type={Off};
};
#else
AnyKinMeasureLinComb FingerRhythm_DIP4 = 
{
  AnyRevoluteJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger4.Jnt.DIP;
  AnyKinMeasureFunComb1 FunComp = 
  {
    AnyKinMeasureOrg &Jnt = ..PIPAngle4;
    Functions = {&DIPflexion};  
    #include "FingerDriver.any" 
    AnyFunPolynomial &DIPflexion = Rhythm.DIPflexion;      
  }; 
  OutDim = 1;
  Coef = {{1,-1}};
};
AnyKinMeasureOrg PIPAngle4 ={
  AnyKinRotational Angle = 
  {
    Type = RotAxesAngles;
    AnyRefNode &ref1=....HumanModel.Right.ShoulderArm.Seg.Hand.Finger4.Seg.ProximalPhalanx.DistalJointNode;
    AnyRefNode &ref2=....HumanModel.Right.ShoulderArm.Seg.Hand.Finger4.Seg.MiddlePhalanx.ProximalJointNode;
  };
  MeasureOrganizer ={0};
};
AnyKinEqSimpleDriver DIP4 = 
{
  AnyKinMeasureLinComb &FingerRhythm = .FingerRhythm_DIP4;
  MeasureOrganizer = {0};
  DriverPos = {0};
  DriverVel = {0};
  Reaction.Type = {Off};
};
#endif


// finger5
#if _ARM_DETAILED_HAND_WHICH =="RUHM"
AnyKinEqSimpleDriver CMC5={
  AnyUniversalJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger5.Jnt.CMC;
  DriverPos={0,0};  
  DriverVel={0,0};
  Reaction.Type={Off,Off};
};
#endif
AnyKinEqSimpleDriver MCP5={
  AnyUniversalJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger5.Jnt.MCP;
  DriverPos={.JntPos.Right.Finger5.MCPFlexion,.JntPos.Right.Finger5.MCPAbduction}*pi/180;  
  DriverVel={.JntVel.Right.Finger5.MCPFlexion,.JntVel.Right.Finger5.MCPAbduction}*pi/180;
  Reaction.Type={Off,Off};
};  
AnyKinEqSimpleDriver PIP5={
  AnyRevoluteJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger5.Jnt.PIP;
  DriverPos={.JntPos.Right.Finger5.PIPFlexion}*pi/180;  
  DriverVel={.JntVel.Right.Finger5.PIPFlexion}*pi/180;
  Reaction.Type={Off};
};
#if BM_HAND_FINGER_RHYTHM == OFF
AnyKinEqSimpleDriver DIP5={
  AnyRevoluteJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger5.Jnt.DIP;
  DriverPos={.JntPos.Right.Finger5.DIPFlexion}*pi/180;  
  DriverVel={.JntVel.Right.Finger5.DIPFlexion}*pi/180;
  Reaction.Type={Off};
};
#else
AnyKinMeasureLinComb FingerRhythm_DIP5 = 
{
  AnyRevoluteJoint &ref=  ...HumanModel.Right.ShoulderArm.Seg.Hand.Finger5.Jnt.DIP;
  AnyKinMeasureFunComb1 FunComp = 
  {
    AnyKinMeasureOrg &Jnt = ..PIPAngle5;
    Functions = {&DIPflexion};  
    #include "FingerDriver.any" 
    AnyFunPolynomial &DIPflexion = Rhythm.DIPflexion;      
  }; 
  OutDim = 1;
  Coef = {{1,-1}};  
};
AnyKinMeasureOrg PIPAngle5 ={
  AnyKinRotational Angle = 
  {
    Type = RotAxesAngles;
    AnyRefNode &ref1=....HumanModel.Right.ShoulderArm.Seg.Hand.Finger5.Seg.ProximalPhalanx.DistalJointNode;
    AnyRefNode &ref2=....HumanModel.Right.ShoulderArm.Seg.Hand.Finger5.Seg.MiddlePhalanx.ProximalJointNode;
  };
  MeasureOrganizer ={0};
};
AnyKinEqSimpleDriver DIP5 = 
{
  AnyKinMeasureLinComb &FingerRhythm = .FingerRhythm_DIP5;
  MeasureOrganizer = {0};
  DriverPos = {0};
  DriverVel = {0};
  Reaction.Type = {Off};
};   
#endif



