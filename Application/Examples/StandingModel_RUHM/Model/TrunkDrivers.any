  // ************************************
  // Drivers for attaching the pelvis to the global reference system
  // ************************************  
  
  AnyKinEqSimpleDriver PelvisGroundDriver ={
    AnyKinLinear lin ={
      AnyFixedRefFrame &ref1 =....EnvironmentModel.GlobalRef;
      AnySeg &ref2 =....HumanModel.Trunk.SegmentsLumbar.PelvisSeg;
    };
    AnyKinRotational rot ={
      AnyFixedRefFrame &ref1 =....EnvironmentModel.GlobalRef;
      AnySeg &ref2 =....HumanModel.Trunk.SegmentsLumbar.PelvisSeg;
      Type=RotAxesAngles;
    };
    
        DriverPos={
      .JntPos.PelvisPosX,
      .JntPos.PelvisPosY,
      .JntPos.PelvisPosZ,
      pi/180*.JntPos.PelvisRotZ,
      pi/180*.JntPos.PelvisRotY,
      pi/180*.JntPos.PelvisRotX
    };
    DriverVel ={0,0,0,0,0,0};
    Reaction.Type={On,On,On,On,On,On};

  };

  //Neck driver 
  AnyKinEqSimpleDriver NeckJntDriver = {
    AnyKinMeasure &fe = ...HumanModel.Interface.Trunk.SkullThoraxFlexion;
    AnyKinMeasure &ar = ...HumanModel.Interface.Trunk.SkullThoraxRotation;
    AnyKinMeasure &lb = ...HumanModel.Interface.Trunk.SkullThoraxLateralBending;
    DriverPos = pi/180*{.JntPos.NeckExtension,.JntPos.NeckRotation,.JntPos.NeckLateralBending};
    DriverVel = pi/180*{.JntVel.NeckExtension,.JntVel.NeckRotation,.JntVel.NeckLateralBending};
    Reaction.Type = {Off,Off,Off};
  };
  
  //Thorax pelvis rotation driver
  AnyKinEqSimpleDriver PostureDriver ={
    AnyKinMeasureOrg &Ref2 = ...HumanModel.Interface.Trunk.PelvisThoraxLateralBending;        
    AnyKinMeasureOrg &Ref3 = ...HumanModel.Interface.Trunk.PelvisThoraxRotation;   
    AnyKinMeasureOrg &Ref1 = ...HumanModel.Interface.Trunk.PelvisThoraxExtension;
   
    DriverPos = pi/180*{
          .JntPos.PelvisThoraxLateralBending,
      .JntPos.PelvisThoraxRotation,
      .JntPos.PelvisThoraxExtension
    };
    DriverVel = pi/180*{
      .JntVel.PelvisThoraxLateralBending,
      .JntVel.PelvisThoraxRotation,
      .JntVel.PelvisThoraxExtension
    };
    Reaction.Type = {Off,Off,Off};  
  };  

  
//  MannequinLoads = {
//    AnyForce3D TopVertebra = {
//      AnyRefNode &ApplPoint = .hm.Trunk.SegmentsThorax.ThoraxSeg.C1HatNode;
//      F = .mql.TopVertebra;
//    };
//  };
