/*
Definition of the facetjoints in the lumbar spine


*/

Segments.ThoraxSeg = {

  AnyRefNode FacetInferiorR = {sRel = .Scale({-0.005,0.146,0.015}); //FacetJoint on T12
    AnyVar AngleV = -17; //Angle Vertebra in degrees
    AnyVar AngleL = 180-158; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 38; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat((AngleT-90)*pi/180,y)*RotMat(pi,y);
    #include "DrawFacetRefInf.any"
  };
  AnyRefNode FacetInferiorL = {sRel = {.FacetInferiorR.sRel[0],.FacetInferiorR.sRel[1],.FacetInferiorR.sRel[2]*-1};
    AnyVar AngleV = -17; //Angle Vertebra in degrees
    AnyVar AngleL = 180-158; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 38; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat(((AngleT-90)-2*AngleT)*pi/180,y);
    #include "DrawFacetRefInf.any"
  };

};


Segments.L1Seg = {

  AnyRefNode FacetSuperiorR = {sRel = .Scale({-0.005,0.146,0.015});
    AnyVar AngleV = -17; //Angle Vertebra in degrees
    AnyVar AngleL = 180-170; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 32; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat((AngleT-90)*pi/180,y)*RotMat(pi,y);
    #include "DrawFacetRefSup.any"
  };
  AnyRefNode FacetSuperiorL = {sRel = {.FacetSuperiorR.sRel[0],.FacetSuperiorR.sRel[1],.FacetSuperiorR.sRel[2]*-1};
    AnyVar AngleV = -17; //Angle Vertebra in degrees
    AnyVar AngleL = 180-170; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 32; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat(((AngleT-90)-2*AngleT)*pi/180,y);
    #include "DrawFacetRefSup.any"
  };

  AnyRefNode FacetInferiorR = {sRel = .Scale({0.008,0.117,0.015});
    AnyVar AngleV = -17; //Angle Vertebra in degrees
    AnyVar AngleL = 180-165; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 25; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat((AngleT-90)*pi/180,y)*RotMat(pi,y);
    #include "DrawFacetRefInf.any"
  };
  AnyRefNode FacetInferiorL = {sRel = {.FacetInferiorR.sRel[0],.FacetInferiorR.sRel[1],.FacetInferiorR.sRel[2]*-1};
    AnyVar AngleV = -17; //Angle Vertebra in degrees
    AnyVar AngleL = 180-165; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 25; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat(((AngleT-90)-2*AngleT)*pi/180,y);
    #include "DrawFacetRefInf.any"
  };

};

Segments.L2Seg = {

  AnyRefNode FacetSuperiorR = {sRel = .Scale({0.008,0.117,0.015});
    AnyVar AngleV = -20; //Angle Vertebra in degrees
    AnyVar AngleL = 180-171; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 25; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat((AngleT-90)*pi/180,y)*RotMat(pi,y);
    #include "DrawFacetRefSup.any"
  };
  AnyRefNode FacetSuperiorL = {sRel = {.FacetSuperiorR.sRel[0],.FacetSuperiorR.sRel[1],.FacetSuperiorR.sRel[2]*-1};
    AnyVar AngleV = -20; //Angle Vertebra in degrees
    AnyVar AngleL = 180-171; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 25; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat(((AngleT-90)-2*AngleT)*pi/180,y);
    #include "DrawFacetRefSup.any"
  };

  AnyRefNode FacetInferiorR = {sRel = .Scale({0.020,0.085,0.015});
    AnyVar AngleV = -20; //Angle Vertebra in degrees
    AnyVar AngleL = 180-161; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 31; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat((AngleT-90)*pi/180,y)*RotMat(pi,y);
    #include "DrawFacetRefInf.any"
  };
  AnyRefNode FacetInferiorL = {sRel = {.FacetInferiorR.sRel[0],.FacetInferiorR.sRel[1],.FacetInferiorR.sRel[2]*-1};
    AnyVar AngleV = -20; //Angle Vertebra in degrees
    AnyVar AngleL = 180-161; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 31; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat(((AngleT-90)-2*AngleT)*pi/180,y);
    #include "DrawFacetRefInf.any"
  };

};

Segments.L3Seg = {

  AnyRefNode FacetSuperiorR = {sRel = .Scale({0.020,0.085,0.015});
    AnyVar AngleV = -11; //Angle Vertebra in degrees
    AnyVar AngleL = 180-170; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 30; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat((AngleT-90)*pi/180,y)*RotMat(pi,y);
    #include "DrawFacetRefSup2.any"
  };
  AnyRefNode FacetSuperiorL = {sRel = {.FacetSuperiorR.sRel[0],.FacetSuperiorR.sRel[1],.FacetSuperiorR.sRel[2]*-1};
    AnyVar AngleV = -11; //Angle Vertebra in degrees
    AnyVar AngleL = 180-170; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 30; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat(((AngleT-90)-2*AngleT)*pi/180,y);
    #include "DrawFacetRefSup2.any"
  };

  AnyRefNode FacetInferiorR = {sRel = .Scale({0.023,0.059,0.015});
    AnyVar AngleV = -11; //Angle Vertebra in degrees
    AnyVar AngleL = 180-157; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 43; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat((AngleT-90)*pi/180,y)*RotMat(pi,y);
    #include "DrawFacetRefInf.any"
  };
  AnyRefNode FacetInferiorL = {sRel = {.FacetInferiorR.sRel[0],.FacetInferiorR.sRel[1],.FacetInferiorR.sRel[2]*-1};
    AnyVar AngleV = -11; //Angle Vertebra in degrees
    AnyVar AngleL = 180-157; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 43; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat(((AngleT-90)-2*AngleT)*pi/180,y);
    #include "DrawFacetRefInf.any"
  };

};

Segments.L4Seg = {

  AnyRefNode FacetSuperiorR = {sRel = .Scale({0.023,0.059,0.015});
    AnyVar AngleV = 0; //Angle Vertebra in degrees
    AnyVar AngleL = 180-170; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 38; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat((AngleT-90)*pi/180,y)*RotMat(pi,y);
    #include "DrawFacetRefSup.any"
  };
  AnyRefNode FacetSuperiorL = {sRel = {.FacetSuperiorR.sRel[0],.FacetSuperiorR.sRel[1],.FacetSuperiorR.sRel[2]*-1};
    AnyVar AngleV = 0; //Angle Vertebra in degrees
    AnyVar AngleL = 180-170; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 38; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat(((AngleT-90)-2*AngleT)*pi/180,y);
    #include "DrawFacetRefSup.any"
  };

  AnyRefNode FacetInferiorR = {sRel = .Scale({0.025,0.03,0.015});
    AnyVar AngleV = 0; //Angle Vertebra in degrees
    AnyVar AngleL = 180-155; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 52; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat((AngleT-90)*pi/180,y)*RotMat(pi,y);
    #include "DrawFacetRefInf.any"
  };
  AnyRefNode FacetInferiorL = {sRel = {.FacetInferiorR.sRel[0],.FacetInferiorR.sRel[1],.FacetInferiorR.sRel[2]*-1};
    AnyVar AngleV = 0; //Angle Vertebra in degrees
    AnyVar AngleL = 180-155; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 52; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat(((AngleT-90)-2*AngleT)*pi/180,y);
    #include "DrawFacetRefInf.any"
  };

};

Segments.L5Seg = {


  AnyRefNode FacetSuperiorR = {sRel = .Scale({0.025,0.03,0.015});
    AnyVar AngleV = 6; //Angle Vertebra in degrees
    AnyVar AngleL = 180-169; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 45; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat((AngleT-90)*pi/180,y)*RotMat(pi,y);
    #include "DrawFacetRefSup.any"
  };
  AnyRefNode FacetSuperiorL = {sRel = {.FacetSuperiorR.sRel[0],.FacetSuperiorR.sRel[1],.FacetSuperiorR.sRel[2]*-1};
    AnyVar AngleV = 6; //Angle Vertebra in degrees
    AnyVar AngleL = 180-169; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 45; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat(((AngleT-90)-2*AngleT)*pi/180,y);
    #include "DrawFacetRefSup.any"
  };

  AnyRefNode FacetInferiorR = {sRel = .Scale({0.020,0.005,0.017});
    AnyVar AngleV = 6; //Angle Vertebra in degrees
    AnyVar AngleL = 29.5; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 53; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat((AngleT-90)*pi/180,y)*RotMat(pi,y);
    #include "DrawFacetRefInf.any"
  };
  AnyRefNode FacetInferiorL = {sRel = {.FacetInferiorR.sRel[0],.FacetInferiorR.sRel[1],.FacetInferiorR.sRel[2]*-1};
    AnyVar AngleV = 6; //Angle Vertebra in degrees
    AnyVar AngleL = 29.5; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 53; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat(((AngleT-90)-2*AngleT)*pi/180,y);
    #include "DrawFacetRefInf.any"
  };

};

Segments.SacrumSeg = {

  AnyRefNode FacetSuperiorR = {sRel = .Scale({0.020,0.005,0.017});
    AnyVar AngleV = 6; //Angle Vertebra in degrees
    AnyVar AngleL = 29.5; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 53; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat((AngleT-90)*pi/180,y)*RotMat(pi,y);
    #include "DrawFacetRefSup.any"
  };
  AnyRefNode FacetSuperiorL = {sRel = {.FacetSuperiorR.sRel[0],.FacetSuperiorR.sRel[1],.FacetSuperiorR.sRel[2]*-1};
    AnyVar AngleV = 6; //Angle Vertebra in degrees
    AnyVar AngleL = 29.5; // Angle longitudinal facet angle in degrees
    AnyVar AngleT = 53; // Angle transverse facet angle in degrees
    ARel = RotMat(-AngleV*pi/180,z)*RotMat(-AngleL*pi/180,z)*RotMat(((AngleT-90)-2*AngleT)*pi/180,y);
    #include "DrawFacetRefSup.any"
  };

};

Joints.Lumbar = {

  AnyFolder FacetJointL5SacrumR = {
    AnyRefFrame &BaseObject= ...Segments.SacrumSeg.FacetSuperiorR; //Object which delivers the forces
    AnyRefFrame &TargetObject= ...Segments.L5Seg.FacetInferiorR;//Location where the force is applied
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object

    #include "FacetJointsContactSettings.any"
    #include  "<ANYBODY_PATH_MODELUTILS>\FrictionContactMuscles\ContactSurfaceLinPush.any"
  };
  AnyFolder FacetJointL5SacrumL = {
    AnyRefFrame &BaseObject= ...Segments.SacrumSeg.FacetSuperiorL; //Object which delivers the forces
    AnyRefFrame &TargetObject= ...Segments.L5Seg.FacetInferiorL;//Location where the force is applied
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object

    #include "FacetJointsContactSettings.any"
    #include  "<ANYBODY_PATH_MODELUTILS>\FrictionContactMuscles\ContactSurfaceLinPush.any"
  };

  AnyFolder FacetJointL4L5R = {
    AnyRefFrame &BaseObject= ...Segments.L5Seg.FacetSuperiorR; //Object which delivers the forces
    AnyRefFrame &TargetObject= ...Segments.L4Seg.FacetInferiorR;//Location where the force is applied
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object

    #include "FacetJointsContactSettings.any"
    #include  "<ANYBODY_PATH_MODELUTILS>\FrictionContactMuscles\ContactSurfaceLinPush.any"
  };
  AnyFolder FacetJointL4L5L = {
    AnyRefFrame &BaseObject= ...Segments.L5Seg.FacetSuperiorL; //Object which delivers the forces
    AnyRefFrame &TargetObject= ...Segments.L4Seg.FacetInferiorL;//Location where the force is applied
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object

    #include "FacetJointsContactSettings.any"
    #include  "<ANYBODY_PATH_MODELUTILS>\FrictionContactMuscles\ContactSurfaceLinPush.any"
  };

  AnyFolder FacetJointL3L4R = {
    AnyRefFrame &BaseObject= ...Segments.L4Seg.FacetSuperiorR; //Object which delivers the forces
    AnyRefFrame &TargetObject= ...Segments.L3Seg.FacetInferiorR;//Location where the force is applied
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object

    #include "FacetJointsContactSettings.any"
    #include  "<ANYBODY_PATH_MODELUTILS>\FrictionContactMuscles\ContactSurfaceLinPush.any"
  };
  AnyFolder FacetJointL3L4L = {
    AnyRefFrame &BaseObject= ...Segments.L4Seg.FacetSuperiorL; //Object which delivers the forces
    AnyRefFrame &TargetObject= ...Segments.L3Seg.FacetInferiorL;//Location where the force is applied
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object

    #include "FacetJointsContactSettings.any"
    #include  "<ANYBODY_PATH_MODELUTILS>\FrictionContactMuscles\ContactSurfaceLinPush.any"
  };

  AnyFolder FacetJointL2L3R = {
    AnyRefFrame &BaseObject= ...Segments.L3Seg.FacetSuperiorR; //Object which delivers the forces
    AnyRefFrame &TargetObject= ...Segments.L2Seg.FacetInferiorR;//Location where the force is applied
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object

    #include "FacetJointsContactSettings.any"
    #include  "<ANYBODY_PATH_MODELUTILS>\FrictionContactMuscles\ContactSurfaceLinPush.any"
  };
  AnyFolder FacetJointL2L3L = {
    AnyRefFrame &BaseObject= ...Segments.L3Seg.FacetSuperiorL; //Object which delivers the forces
    AnyRefFrame &TargetObject= ...Segments.L2Seg.FacetInferiorL;//Location where the force is applied
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object

    #include "FacetJointsContactSettings.any"
    #include  "<ANYBODY_PATH_MODELUTILS>\FrictionContactMuscles\ContactSurfaceLinPush.any"
  };

  AnyFolder FacetJointL1L2R = {
    AnyRefFrame &BaseObject= ...Segments.L2Seg.FacetSuperiorR; //Object which delivers the forces
    AnyRefFrame &TargetObject= ...Segments.L1Seg.FacetInferiorR;//Location where the force is applied
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object

    #include "FacetJointsContactSettings.any"
    #include  "<ANYBODY_PATH_MODELUTILS>\FrictionContactMuscles\ContactSurfaceLinPush.any"
  };
  AnyFolder FacetJointL1L2L = {
    AnyRefFrame &BaseObject= ...Segments.L2Seg.FacetSuperiorL; //Object which delivers the forces
    AnyRefFrame &TargetObject= ...Segments.L1Seg.FacetInferiorL;//Location where the force is applied
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object

    #include "FacetJointsContactSettings.any"
    #include  "<ANYBODY_PATH_MODELUTILS>\FrictionContactMuscles\ContactSurfaceLinPush.any"
  };
/*
  AnyFolder FacetJointT12L1R = {
    AnyRefFrame &BaseObject= ..Segments.L1Seg.FacetSuperiorR; //Object which delivers the forces
    AnyRefFrame &TargetObject= ..Segments.ThoraxSeg.FacetInferiorR;//Location where the force is applied
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object

    #include "FacetJointsContactSettings.any"
    #include  "<ANYBODY_PATH_MODELUTILS>\FrictionContactMuscles\ContactSurfaceLinPush.any"
  };
  AnyFolder FacetJointT12L1L = {
    AnyRefFrame &BaseObject= ..Segments.L1Seg.FacetSuperiorL; //Object which delivers the forces
    AnyRefFrame &TargetObject= ..Segments.ThoraxSeg.FacetInferiorL;//Location where the force is applied
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object

    #include "FacetJointsContactSettings.any"
    #include  "<ANYBODY_PATH_MODELUTILS>\FrictionContactMuscles\ContactSurfaceLinPush.any"
  };
*/
};



