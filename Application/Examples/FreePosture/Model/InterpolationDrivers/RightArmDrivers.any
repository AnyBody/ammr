

// ************************************
// Drivers for the right arm
// ************************************


#if BM_ARM_RIGHT & (BM_ARM_SHOULDER_RHYTHM == OFF)
//Sterno clavicular joint driver
AnyKinDriver SCDriverRight ={
  AnyKinMeasure& ref1 =...HumanModel.Interface.Right.SternoClavicularProtraction;
  AnyKinMeasure& ref2 =...HumanModel.Interface.Right.SternoClavicularElevation;
  AnyKinMeasure& ref3 =...HumanModel.Interface.Right.SternoClavicularAxialRotation;
  AnyFunInterpol interp = {
    Data = pi/180*{
      ..JntPos.Left.SternoClavicularProtraction,
      ..JntPos.Left.SternoClavicularElevation,
      ..JntPos.Left.SternoClavicularAxialRotation
    };
    T=..JntPos.Left.SternoClavicularTime;
    Type=Bspline;
  };
  Reaction.Type={Off,Off,Off};
};
#endif

//Glenohumeral joint 
AnyKinDriver GHDriverRight={
  AnyKinMeasure& ref1 =...HumanModel.Interface.Right.GlenohumeralAbduction;
  AnyKinMeasure& ref2 =...HumanModel.Interface.Right.GlenohumeralFlexion;
  AnyKinMeasure& ref3 =...HumanModel.Interface.Right.GlenohumeralExternalRotation;
  AnyFunInterpol interp = {
    Data=pi/180*{
      ..JntPos.Left.GlenohumeralAbductionVec,  //GH joint
      ..JntPos.Left.GlenohumeralFlexionVec,  //GH joint
      ..JntPos.Left.GlenohumeralExternalRotationVec  //GH joint
    };    
    T=..JntPos.Left.GlenohumeralTime;
    Type=Bspline;
  };
  
  Reaction.Type={Off,Off,Off};
};


//Elbow flexion driver  
AnyKinDriver ElbowFlexionDriverRight={
  AnyKinMeasureOrg  &Elbow =...HumanModel.Interface.Right.ElbowFlexion;
  AnyFunInterpol interp = {
    Data=pi/180*{..JntPos.Left.ElbowFlexionVec};  
    T=..JntPos.Left.ElbowFlexionTime;
    Type=Bspline;
  };
  Reaction.Type={Off};
};

//Elbow pronation driver
AnyKinDriver ElbowPronationDriverRight={
  AnyKinMeasure& Elbow =...HumanModel.Interface.Right.ElbowPronation;
  AnyFunInterpol interp = {
    Data= pi/180*{..JntPos.Left.ElbowPronationVec };  
    T=..JntPos.Left.ElbowPronationTime;
    Type=Bspline;
  };
  Reaction.Type={Off};
};

//Wrist driver 
AnyKinDriver WristDriverRight ={
  AnyKinMeasure& ref1 =...HumanModel.Interface.Right.WristFlexion;
  AnyKinMeasure& ref2 =...HumanModel.Interface.Right.WristAbduction;
  AnyFunInterpol interp = {
    Data = pi/180*{
      ..JntPos.Left.WristFlexionVec,
      ..JntPos.Left.WristAbductionVec
    };
    Type=Bspline;
    T=..JntPos.Left.WristTime;
  };
  Reaction.Type={Off,Off};
};
