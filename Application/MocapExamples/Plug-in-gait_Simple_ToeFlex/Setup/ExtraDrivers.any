// This file contains a set of auxillary drivers. They are usefull/necessary
// in some cases where the marker protocol doesn't provide enough information
// to specify all degrees of freedom. Hence, these drivers complement a
// specific driver protocol. Many of these drivers are soft, and an only serve
// to stabalize the solver in postures where the markers doesn't provide unique
// kinematic solution. 

AnyFolder ExtraDrivers = {

  // --------------------------------------------------------------------------
  // The BM_MANNEQUIN drivers are used to support the degrees of freedom where
  // the markers do not provide enough information. 
  // See this file for options: #path HTML_DOC "<AMMR_PATH_DOC>/bm_config/index.html"
  // --------------------------------------------------------------------------
  
  // Mannequin drivers are off per default, but can be activated individually
  #define BM_MANNEQUIN_DRIVER_DEFAULT OFF
  
  #if BM_FOOT_MODEL == _FOOT_MODEL_TOE_FLEX_GM_  
  // RotationPenetrationCombiDriver class template creates soft drivers that drive rotational 
  // and linear measures to ensure that the rotational measure (toe flexion) is normally at zero  
  // unless it deviates to prevent penetration of a target frame (toe tip) in a box shaped space. 
  // In this example, toe flexion driver for right leg is created twice. It is also possible to
  // create only once and use the setting UsePlaneBordersForBoundsCheck = 0 to disable the bounds
  // formed by the 4 corners. Another way could be to make the bounds large enough to cover the
  // entire motion trial.
  RotationPenetrationCombiDriver ToeDriverRight (
      TARGET_FRAME = Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.Toe1.DistalPhalange1.ToeTip,
      NEUTRAL_ANGLE_MEASURE = Main.HumanModel.BodyModel.Interface.Right.MetatarsoPhalangeal1DorsiFlexion
      ) = {Corners = {
                       Main.EnvironmentModel.ForcePlates.Plate1.SurfaceCorner_c04,
                       Main.EnvironmentModel.ForcePlates.Plate1.SurfaceCorner_c03,
                       Main.EnvironmentModel.ForcePlates.Plate1.SurfaceCorner_c02,
                       Main.EnvironmentModel.ForcePlates.Plate1.SurfaceCorner_c01,
                    };
            Settings.DepthLowerLimit = 0.007; // to account for shoe thickness
          };
  RotationPenetrationCombiDriver ToeDriverLeft (
      TARGET_FRAME = Main.HumanModel.BodyModel.Left.Leg.Seg.Foot.Toe1.DistalPhalange1.ToeTip,
      NEUTRAL_ANGLE_MEASURE =  Main.HumanModel.BodyModel.Interface.Left.MetatarsoPhalangeal1DorsiFlexion
      ) = {Corners = {
                       Main.EnvironmentModel.ForcePlates.Plate2.SurfaceCorner_c04,
                       Main.EnvironmentModel.ForcePlates.Plate2.SurfaceCorner_c03,
                       Main.EnvironmentModel.ForcePlates.Plate2.SurfaceCorner_c02,
                       Main.EnvironmentModel.ForcePlates.Plate2.SurfaceCorner_c01,
                    };
            Settings.DepthLowerLimit = 0.007; // to account for shoe thickness
          };
  RotationPenetrationCombiDriver ToeDriverRight2 (
      TARGET_FRAME = Main.HumanModel.BodyModel.Right.Leg.Seg.Foot.Toe1.DistalPhalange1.ToeTip,
      NEUTRAL_ANGLE_MEASURE = Main.HumanModel.BodyModel.Interface.Right.MetatarsoPhalangeal1DorsiFlexion
      ) = {Corners = {
                       Main.EnvironmentModel.ForcePlates.Plate3.SurfaceCorner_c04,
                       Main.EnvironmentModel.ForcePlates.Plate3.SurfaceCorner_c03,
                       Main.EnvironmentModel.ForcePlates.Plate3.SurfaceCorner_c02,
                       Main.EnvironmentModel.ForcePlates.Plate3.SurfaceCorner_c01,
                    };
            Settings.DepthLowerLimit = 0.007; // to account for shoe thickness
          };
  #endif
  
  // Weak extra drivers for the subtalar joint is often necessary 
  // when there is only two markers on the foot segment.
  // #define BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_RIGHT ON
  // #define BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_LEFT ON
  
  
#if INCLUDE_UPPERBODY == ON
  
  // Weak extra drivers for the glenohumeral external rotation is 
  // often necessary when there is only one marker at the elbow joint.
  #define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_RIGHT ON
  #define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_LEFT ON
  
  
  // Extra drivers for the wrist is necssary if there are no markers
  // on the hands.
//  #define BM_MANNEQUIN_DRIVER_WRIST_FLEXION_RIGHT ON
//  #define BM_MANNEQUIN_DRIVER_WRIST_FLEXION_LEFT ON
  #define BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_RIGHT ON
  #define BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_LEFT ON  
  

  // The weights for the default mannequin drivers can be adjusted.
  // This can some times help regularized the parameter optimization 
  // problem, and make it converge faster.
  Main.HumanModel.DefaultMannequinDrivers = {   
    
      GHDriverLeftExternalRotation.WeakDriverWeight = 0.01;
      GHDriverRightExternalRotation.WeakDriverWeight = 0.01;
      
      WristDriverLeftAbduction.WeakDriverWeight = 0.01;
      WristDriverRightAbduction.WeakDriverWeight = 0.01;
  };


#endif
  

  // This link to the mannequin drivers ensures they are picked up by the study.
  AnyFolder& MannequinDrivers = Main.HumanModel.DefaultMannequinDrivers;

};