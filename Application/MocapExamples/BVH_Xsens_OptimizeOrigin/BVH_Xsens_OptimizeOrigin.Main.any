#include "../libdef.any"
#include "BVH_OptimizeOrigin.any"
/* ----------------------------------------------------------------------------------
  This is an example of developing an exoskeleton concept. The example is based on
  the webcast presented by Prof. John Rasmussen from Aalborg University on 28 Mar 2022.
  <https://www.anybodytech.com/simulation-driven-conceptual-design-of-exoskeletons/>
  
  The model is structured to include the BVH_BoxLift model from the AMMR and then apply
  the code for the exoskeleton concept. This was done to avoid duplicating the box lift
  model in the AMMR. If you want to apply the exo concept to your own model, you just 
  need to copy the code in the ExoConcept section to your own model.

---------------------------------------------------------------------------------- */

// ***************************** AnyMoCap ************************************
// This section points to the BVH_BoxLift Model in the AMMR and allows you to
// select the subject and trial folders.

// Path to the BVH_BoxLift model in the AMMR. The path to the mocap models in AMMR 
// generally follows the structure: <MocapModel>/<Subjects>/<S#>/<S#_T#>/Main.any
// where # is a number. 
// Please define here the path to the mocap model.
#path ANYMOCAP_BVH_XSENS "<ANYBODY_PATH_AMMR>/Application/MocapExamples/BVH_Xsens/Subjects/"
//// Select Subject folder
#define MOCAP_NAME_SUBJECTDIR "S1"
//// Select Trial folder suffix. 
//#define MOCAP_NAME_TRIALDIR "S01_T05"
//
#define MOCAP_NAME_MAINFILEDIR "S01_Trial01"
#path BVH_XSENS_MAINFILEDIR "<ANYMOCAP_BVH_XSENS>" + MOCAP_NAME_SUBJECTDIR +"/" +MOCAP_NAME_MAINFILEDIR 
#include "<BVH_XSENS_MAINFILEDIR>/Main.any"



// ***************************** AnyMoCap ************************************
// ***************************************************************************

Main = {
//  Main.ModelSetup.BVHFileData.Model.Hips.LeftHip.LeftKnee.LeftAnkle.Seg = {
//    AnyRefNode Heel = {
//      sRel = {0,.LeftToe.sRel[1],0};
//      AnyDrawRefFrame drw ={};
//      AnyRefNode Node1 = {
//        sRel = {-0.02,0,0.15};
//        AnyDrawRefFrame drw ={};
//      };
//      AnyRefNode Node2 = {
//        sRel = {0.05,0,0.15};
//        AnyDrawRefFrame drw ={};
//      };
//    }; // Heel Node
//  }; // Seg
  BVH_OptimizeOrigin BVH_Origin_Modifier (
    HUMAN_SEG = "LHAND",
    ACTIVE_TIME_START = 3.1,
    ACTIVE_TIME_END = 3.4   
//    HUMAN_SEG = "RFOOT",
//    ACTIVE_TIME_START = 3.6, 
//    ACTIVE_TIME_END = 3.65 
    ) = 
{
      TARGET_Position = {0.5,0.0,-2.5};
      TARGET_Orientation= RotMat(0*pi/180,x)
                    *RotMat(-60*pi/180,y)
                        *RotMat(0*pi/180,z);
      
      Settings.InitialGuess = {6.0,0,0,0,100*pi/180,0};
    
  };
  
//    BVH_OptimizeOrigin BVH_Origin_Modifier (
//    HUMAN_SEG = "LHAND",
//    ACTIVE_TIME_START = 3.1,
//    ACTIVE_TIME_END = 3.15  
//    ) = 
//{
//      TARGET_SREL = {0.5,1.0,-2.5};
//      TARGET_AREL = RotMat(90*pi/180,x)
//                    *RotMat(-90*pi/180,y)
//                        *RotMat(0*pi/180,z);
//      
//      Settings.InitialGuess = {6.0,0,0,0,100*pi/180,0};
//    
//  };

//BVH_OptimizeOrigin BVH_Origin_Modifier (
//    HUMAN_SEG = "RHAND",
//    ACTIVE_TIME_START = 3.4,
//    ACTIVE_TIME_END = 3.5 
//    ) = 
//{
//      TARGET_SREL = {0.5,1.0,-2.5};
//      TARGET_AREL = RotMat(-0*pi/180,x)
//                    *RotMat(-90*pi/180,y)
//                        *RotMat(90*pi/180,z);
//      
//      Settings.InitialGuess = {6.0,0,0,0,100*pi/180,0};
//    
//  };

  
};
