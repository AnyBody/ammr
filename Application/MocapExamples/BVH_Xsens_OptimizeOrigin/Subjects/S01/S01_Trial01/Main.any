// ***************************** AnyMoCap ***********************************
#include "../../../libdef.any"
#include "../../../BVH_OptimizeOrigin.any"

// Enter and edit data/settings shared by all subjects and trials
#path MOCAP_LAB_SPECIFIC_DATA "../../../LabSpecificData.any"


// Enter and edit data shared by all trials from this subject
#path MOCAP_SUBJECT_SPECIFIC_DATA "../SubjectSpecificData.any"


// Enter and edit data specific to this trial:
#path MOCAP_TRIAL_SPECIFIC_DATA "TrialSpecificData.any"

// Include the AnyMoCap Framwork
#include "<ANYMOCAP_MODEL>"



Main = {
  #define TARGET_SEG 1 // 1 = LFOOT, 2 = RFOOT, 3 = LHAND, 4 = RHAND

#if TARGET_SEG == 1
// Specify human seg, active time, target position and orientation
// Target position and orientation is relative to global ref, which is default option but can be modified
   OptimizeBVH_Origin BVH_Origin_Modifier (
    HUMAN_SEG = "LFOOT",
//GLOBAL_REF = Main.EnvironmentModel.GlobalRef.Box,
//    REF_FRAME_FOR_TARGET = Main.EnvironmentModel.GlobalRef.Box,//Ref1.Ref2.Ref3,
    ACTIVE_TIME_START = 0.0,
    ACTIVE_TIME_END = 0.4   
    ) = 
{
      Target_Position = {0.5,0.0,0.0};
      Target_Orientation= RotMat(0*pi/180,x)
                    *RotMat(90*pi/180,y)
                        *RotMat(0*pi/180,z);
      
//      Settings.InitialGuess = {0.40,0,0.5,0,-30*pi/180,0};
    
  };
#endif

#if TARGET_SEG == 2
// Demonstrate optimization direction and initial guess to help the study.
 OptimizeBVH_Origin BVH_Origin_Modifier (
    HUMAN_SEG = "RFOOT",
    OPT_LIN_X = 1, OPT_LIN_Y = 1, OPT_LIN_Z = 1,
OPT_ROT_X = 1, OPT_ROT_Y = 1, OPT_ROT_Z = 1,

    ACTIVE_TIME_START = 1.0,
    ACTIVE_TIME_END = 1.4   
    ) = 
{
  
//  Target_Position = {-0.2508042, 0.06953926 -0.06310187, 0.5071104};
//      Target_Orientation= {{0.9867961, 0.1478207, 0.06620117},
//{-0.1446556, 0.9882018, -0.0503178},
//{-0.07285813, 0.04007704, 0.9965368}}*RotMat(pi/2,y);
      
      Target_Position = {-0.25,0.2,0.0};
      Target_Orientation= RotMat(20*pi/180,x)
                    *RotMat(120*pi/180,y)
                        *RotMat(40*pi/180,x);
      
      Settings.InitialGuess = {0.2,0.4,0.5,0,20*pi/180,0};
    
  };
#endif


#if TARGET_SEG == 3
// Demonstrate how to change ref frame for target. Target can be defined on seg that can be driven
// by other driver. Ref frame for target can be used directly with target position and orientation defaulting to zero.
  EnvironmentModel = {
AnySeg Wall = {
Mass = 0;
Jii = {0,0,0};
AnyRefNode LHandTarget = {
sRel = {-0.105,0.28,-0.1};
ARel = RotMat(0*pi/180,x)*RotMat(0*pi/180,y)*RotMat(90*pi/180,z);
//AnyDrawRefFrame drw = {};
};
AnyDrawSurf Wall ={
    FileName = "box";
    ScaleXYZ ={0.7,7,2};
    Opacity = 0.1;
  };
};


GlobalRef = {
AnyRefNode LHandTarget_Wall = {
sRel = {0.2,1.0,0.5};
ARel = RotMat(0*pi/180,x)*RotMat(40*pi/180,y)*RotMat(0*pi/180,z);
};

};

AnyStdJoint Wall_LHand = {
AnyRefFrame &wall = .Wall;
AnyRefFrame &LHand = .GlobalRef.LHandTarget_Wall;
};


};


  OptimizeBVH_Origin BVH_Origin_Modifier (
    HUMAN_SEG = "LHAND",
    REF_FRAME_FOR_TARGET = Main.EnvironmentModel.Wall.LHandTarget,
    ACTIVE_TIME_START = 1.10,
    ACTIVE_TIME_END = 1.50   
    ) = 
{
//      Target_Position = {0.2,1.28,0.5};
//      Target_Orientation= RotMat(0*pi/180,x)
//                    *RotMat(40*pi/180,y)
//                        *RotMat(90*pi/180,z);
      
//      Settings.InitialGuess = {0.0,0,0,0,0*pi/180,0};
  };
#endif

#if TARGET_SEG == 4
// Demonstrate adding target position and orientation relative to ref frame for target.
  EnvironmentModel = {
AnySeg Wall = {
Mass = 0;
Jii = {0,0,0};
AnyDrawSurf Wall ={
    FileName = "box";
    ScaleXYZ ={0.7,7,2};
    Opacity = 0.1;
  };
};

GlobalRef = {
AnyRefNode RHandTarget_Wall = {
sRel = {-0.5,1.0,0.2};
ARel = RotMat(-0*pi/180,x)*RotMat(-20*pi/180,y)*RotMat(-0*pi/180,z);
};

};

AnyStdJoint Wall_RHand = {
AnyRefFrame &wall = .Wall;
AnyRefFrame &RHand = .GlobalRef.RHandTarget_Wall;
};


};

  OptimizeBVH_Origin BVH_Origin_Modifier (
    HUMAN_SEG = "RHAND",
    REF_FRAME_FOR_TARGET = Main.EnvironmentModel.Wall,
    ACTIVE_TIME_START = 1.25,
    ACTIVE_TIME_END = 1.50   
    ) = 
{
      Target_Position = {-0.105,0.37,0.1};
      Target_Orientation= RotMat(-20*pi/180,x)
                    *RotMat(-180*pi/180,y)
                        *RotMat(-90*pi/180,z);
      
      Settings.InitialGuess = {0.0,0,0,0,0,0};

  };

#endif

//////////Main.EnvironmentModel.GlobalRef = {
//////////AnySeg Box = {
//////////Mass = 0;
//////////Jii = {0,0,0};
//////////r0 = {1,1,1};
//////////AnyDrawRefFrame drw = {RGB ={1,0,0};};
//////////};
//////////AnyStdJoint BoxJnt = {
//////////AnyRefFrame &ref1 = .Box;
//////////AnyRefFrame &ref2 = .Ref1.Ref2.Ref3;
//////////};
//////////AnyRefNode Ref1 = {
//////////sRel = {-0.5,0,-0.5};
//////////ARel = RotMat(0*pi/180,x)
//////////                    *RotMat(30*pi/180,y)
//////////                        *RotMat(0*pi/180,z);
//////////AnyRefNode Ref2 = {
//////////AnyRefNode Ref3 = {sRel = {1,0,0.5};
//////////AnyDrawRefFrame drw = {ScaleXYZ = {1,1,1}*0.6;RGB ={1,1,0};};
//////////};
//////////};
//////////};
//////////};



};// Main