// This file contains a set of auxillary drivers. They are usefull/necessary
// in some cases where the marker protocol doesn't provide enough information
// to specify all degrees of freedom. Hence, these drivers complement a
// specific driver protocol. Many of these drivers are soft, and an only serve
// to stabalize the solver in postures where the markers doesn't provide unique
// kinematic solution. 

AnyFolder ExtraDrivers = {

  // --------------------------------------------------------------------------
  // The BM_MANNEQUIN drivers are used to support the degrees of freedom where
  // the markers do not provide enough information. 
  // See this file for options: #path HTML_DOC "<AMMR_PATH_DOC>/bm_config/index.html"
  // --------------------------------------------------------------------------
  
  
  
  #define BM_MANNEQUIN_DRIVER_WRIST_FLEXION_RIGHT ON
  
  #define BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_RIGHT ON
    
  // No marker povides the motion between carpals and metacarpals.
  AnyKinMotion CMC2Flexion = {
        DriverPos0 = {0};
        AnyKinMeasure &jnt =Main.HumanModel.BodyModel.Interface.Right.Hand.Finger2.CMCFlexion; 
     };
     
  // CMC3 needs both flexion and abduction contraint to help the carpals to be 
  // kinematically determinate. This still allows the carpals to move (abduct) relatvie to each other
  AnyKinMotion CMC3Flexion = {
     DriverPos0 = {0};
     AnyKinMeasure &jnt =Main.HumanModel.BodyModel.Interface.Right.Hand.Finger3.CMCFlexion; 
  };
  AnyKinMotion CMC3Abduction = {
     DriverPos0 = {0};
     AnyKinMeasure &jnt =Main.HumanModel.BodyModel.Interface.Right.Hand.Finger3.CMCAbduction; 
  };
  
  AnyKinMotion CMC4Flexion = {
     DriverPos0 = {0};
     AnyKinMeasure &jnt =Main.HumanModel.BodyModel.Interface.Right.Hand.Finger4.CMCFlexion; 
  };
  
  
  AnyKinMotion CMC5Flexion = {
     DriverPos0 = {0};
     AnyKinMeasure &jnt =Main.HumanModel.BodyModel.Interface.Right.Hand.Finger5.CMCFlexion; 
  };
  
  //  #define BM_MANNEQUIN_DRIVER_PELVIS_ROT_Y ON
//  #define BM_MANNEQUIN_DRIVER_PELVIS_ROT_Z  ON
//  #define BM_MANNEQUIN_DRIVER_PELVIS_ROT_X  ON


  #include "ExcludeTrunkAndArm.any"
  

 // Mannequin drivers are off per default, but can be activated individually
  #define BM_MANNEQUIN_DRIVER_DEFAULT OFF
//  
  
  // Weak extra drivers for the subtalar joint is often necessary 
  // when there is only two markers on the foot segment.
  // #define BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_RIGHT ON
  // #define BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_LEFT ON
  
  // Weak extra drivers for the glenohumeral external rotation is 
  // often necessary when there is only one marker at the elbow joint.
//  #define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_RIGHT ON
//  #define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_LEFT ON
//  
  
  // Extra drivers for the wrist is necssary if there are no markers
  // on the hands.
//  #define BM_MANNEQUIN_DRIVER_WRIST_FLEXION_RIGHT ON
//  #define BM_MANNEQUIN_DRIVER_WRIST_FLEXION_LEFT ON
//  #define BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_RIGHT ON
//  #define BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_LEFT ON  
//  

  // The weights for the default mannequin drivers can be adjusted.
  // This can some times help regularized the parameter optimization 
  // problem, and make it converge faster.
  Main.HumanModel.DefaultMannequinDrivers = {   
    
//      GHDriverLeftExternalRotation.WeakDriverWeight = 0.01;
//      GHDriverRightExternalRotation.WeakDriverWeight = 0.01;
//      
//      WristDriverLeftAbduction.WeakDriverWeight = 0.01;
//      WristDriverRightAbduction.WeakDriverWeight = 0.01;
  };


  

  // This link to the mannequin drivers ensures they are picked up by the study.
  AnyFolder& MannequinDrivers = Main.HumanModel.DefaultMannequinDrivers;

};