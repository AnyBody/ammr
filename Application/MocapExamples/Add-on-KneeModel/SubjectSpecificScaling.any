 AnyFolder SubjectSpecificScaling = 
{        
  AnyFolder Source = {
    #include "SourceSTLs.any"
    #include "<SIMPLIFIED_LEG_PATH>BonyLandmarksPnts\Foot_source_R.any"
    #include "<SIMPLIFIED_LEG_PATH>BonyLandmarksPnts\Foot_source_L.any"
    
  };
  AnyFolder Target = {
    #include "TargetSTLs.any"
    #include "<SIMPLIFIED_LEG_PATH>BonyLandmarksPnts\Foot_target_R.any"
    #include "<SIMPLIFIED_LEG_PATH>BonyLandmarksPnts\Foot_target_L.any"
  };
  
  //Here is where I will need to add a 'path' referring to the MRI_data.any file.
  
  AnyFolder Trunk = {   
    AnyFolder Pelvis = 
    {
      AnyFunTransform3D &TSeg2ScaleFrame = ...BodyModel.Trunk.SegmentsLumbar.PelvisSeg.InterfaceMorphingDef.PelvisLegInterface_Unscaled;
      
      
      AnyFunTransform3DLin ScaleFunction = {
        ScaleMat = {{1,0,0},{0,1,0},{0,0,1}};
        Offset = {0,0,0};
        PreTransforms = {&.STLTransform,&.ReverseTransform};
      };
      
      AnyFunTransform3DLin2 AffineTransform = {
        AnyFileVar SourceSTL = FilePathCompleteOf(...Source.Right.FilenamePelvis) + ".stl";
        AnyFileVar TargetSTL = FilePathCompleteOf(...Target.Right.FilenamePelvis) + ".stl";
//        AnyMatrix Points0unscaled = STL_Vertices(SourceSTL, iarr(0, floor(NumPoints0/NumPoints), NumPoints0 - 1), 1);
        AnyMatrix Points0unscaled = STL_Vertices(SourceSTL, iarr(0, floor(NumPoints0/NumPoints), NumPoints0 - 1), 1)*0.001;
        Points0 = .TSeg2ScaleFrame(Points0unscaled);
        Points1 = STL_Vertices(TargetSTL, iarr(0, floor(NumPoints1/NumPoints), NumPoints1 - 1), 1)*0.001;
        AnyInt NumPoints0 = STL_Size(SourceSTL, 1)[0];
        AnyInt NumPoints1 = STL_Size(TargetSTL, 1)[0];
        AnyVar NumPoints = 3000;
        Mode = VTK_LANDMARK_AFFINE;
      };
      
      AnyFunTransform3DLin2 ReverseTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = .AffineTransform.Points0;
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DLin2 RegistrationTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = ....BodyModel.Trunk.SegmentsLumbar.PelvisSeg.Scale(.AffineTransform.Points0);
        
        
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DSTL STLTransform= 
      {
        PreTransforms = {&.AffineTransform};
        //  RBFDef.Type = RBF_Triharmonic;
        //  RBFDef.Param = 0.2;
        RBFDef.Type = RBF_ThinPlate;
        AnyFixedRefFrame ref = {
          AnySurfSTL source = {
            FileName = .....Source.Right.FilenamePelvis;
            ScaleXYZ = {1, 1, 1}*0.001;
//                        ScaleXYZ = {1, 1, 1};

            AnyFunTransform3D &pre = ...TSeg2ScaleFrame;
          };
          AnySurfSTL target = {
            FileName = .....Target.Right.FilenamePelvis;
            ScaleXYZ = {1, 1, 1}*0.001;

          };
        };
        SurfaceObjects0 = {&ref.source};
        SurfaceObjects1 = {&ref.target};
        NumPoints = 3000;
        UseClosestPointMatchingOnOff = Off;
        BoundingBox.ScaleXYZ = 5*{1, 1, 1};
        BoundingBox.DivisionFactorXYZ = 5*{1, 1, 1};
        BoundingBoxOnOff = On;
      };  
    }; // Pelvis
  };//Trunk
  
  AnyFolder Right = {  
    
    AnyFolder Thigh = 
    {
      AnyFunTransform3D &TSeg2ScaleFrame = ...BodyModel.Right.Leg.Seg.Thigh.Scale.T0;
      
      
      AnyFunTransform3DLin ScaleFunction = {
        ScaleMat = {{1,0,0},{0,1,0},{0,0,1}};
        Offset = {0,0,0};
        PreTransforms = {&.STLTransform,&.ReverseTransform};
      };
      
      AnyFunTransform3DLin2 AffineTransform = {
        AnyFileVar SourceSTL = FilePathCompleteOf(...Source.Right.FilenameThigh) + ".stl";
        AnyFileVar TargetSTL = FilePathCompleteOf(...Target.Right.FilenameThigh) + ".stl";
        AnyMatrix Points0unscaled = STL_Vertices(SourceSTL, iarr(0, floor(NumPoints0/NumPoints), NumPoints0 - 1), 1)*0.001;
        Points0 = .TSeg2ScaleFrame(Points0unscaled);
        Points1 = STL_Vertices(TargetSTL, iarr(0, floor(NumPoints1/NumPoints), NumPoints1 - 1), 1)*0.001;
        AnyInt NumPoints0 = STL_Size(SourceSTL, 1)[0];
        AnyInt NumPoints1 = STL_Size(TargetSTL, 1)[0];
        AnyVar NumPoints = 5000;
        Mode = VTK_LANDMARK_AFFINE;
      };
      
      AnyFunTransform3DLin2 ReverseTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = .AffineTransform.Points0;
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DLin2 RegistrationTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = ....BodyModel.Right.Leg.Seg.Thigh.Scale(.AffineTransform.Points0unscaled);
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DSTL STLTransform= 
      {
        PreTransforms = {&.AffineTransform};
        //  RBFDef.Type = RBF_Triharmonic;
        //  RBFDef.Param = 0.2;
        RBFDef.Type = RBF_ThinPlate;
        AnyFixedRefFrame ref = {
          AnySurfSTL source = {
            FileName = .....Source.Right.FilenameThigh;
            ScaleXYZ = {1, 1, 1}*0.001;
            AnyFunTransform3D &pre = ...TSeg2ScaleFrame;
          };
          AnySurfSTL target = {
            FileName = .....Target.Right.FilenameThigh;
            ScaleXYZ = {1, 1, 1}*0.001;
          };
        };
        SurfaceObjects0 = {&ref.source};
        SurfaceObjects1 = {&ref.target};
        NumPoints = 5000;
        UseClosestPointMatchingOnOff = Off;
        BoundingBox.ScaleXYZ = 5*{1, 1, 1};
        BoundingBox.DivisionFactorXYZ = 5*{1, 1, 1};
        BoundingBoxOnOff = On;
      };
      
    };
    
    AnyFolder Patella = 
    {   
      //      AnyFunTransform3D &TSeg2ScaleFrame = ...BodyModel.Right.Leg.Seg.Patella.Scale.T0;
      
      AnyFunTransform3DLin ScaleFunction = {
        ScaleMat = {{1,0,0},{0,1,0},{0,0,1}};
        Offset = {0,0,0};
        
        PreTransforms = {&.STLTransform, &.ReverseTransform};
      };
      
      AnyFunTransform3DLin2 AffineTransform = {
        AnyFileVar SourceSTL = FilePathCompleteOf(...Source.Right.FilenamePatella) + ".stl";
        AnyFileVar TargetSTL = FilePathCompleteOf(...Target.Right.FilenamePatella) + ".stl";
        AnyMatrix Points0unscaled = STL_Vertices(SourceSTL, iarr(0, floor(NumPoints0/NumPoints), NumPoints0 - 1), 1)*0.001;
        //        AnyMatrix Points0unscaled = STL_Vertices(SourceSTL, iarr(0, floor(NumPoints0/NumPoints), NumPoints0 - 1), 1);
        Points0 = Points0unscaled;
        Points1 = STL_Vertices(TargetSTL, iarr(0, floor(NumPoints1/NumPoints), NumPoints1 - 1), 1)*0.001;
        AnyInt NumPoints0 = STL_Size(SourceSTL, 1)[0];
        AnyInt NumPoints1 = STL_Size(TargetSTL, 1)[0];
        AnyVar NumPoints = 3000;
        Mode = VTK_LANDMARK_AFFINE;
      };
      
      AnyFunTransform3DLin2 ReverseTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = .AffineTransform.Points0;
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DLin2 RegistrationTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = ....BodyModel.Right.Leg.Seg.Patella.Scale(.AffineTransform.Points0unscaled);
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DSTL STLTransform= 
      {
        PreTransforms = {&.AffineTransform};
        RBFDef.Type = RBF_Triharmonic;
        RBFDef.Param = 0.2;
        AnyFixedRefFrame ref = {
          AnySurfSTL source = {
            FileName = .....Source.Right.FilenamePatella;
            ScaleXYZ = {1, 1, 1}*0.001;
//            ScaleXYZ = {1, 1, 1};
            //            AnyFunTransform3D &pre = ...TSeg2ScaleFrame;
          };
          AnySurfSTL target = {
            FileName = .....Target.Right.FilenamePatella;
            ScaleXYZ = {1, 1, 1}*0.001;
          };
        };
        SurfaceObjects0 = {&ref.source};
        SurfaceObjects1 = {&ref.target};
        NumPoints = 3000;
        UseClosestPointMatchingOnOff = On;
        BoundingBox.ScaleXYZ = 5*{1, 1, 1};
        BoundingBox.DivisionFactorXYZ = 5*{1, 1, 1};
        BoundingBoxOnOff = On;
      };
      
    };
    
    AnyFolder Shank = 
    {   
      AnyFunTransform3D &TSeg2ScaleFrame = ...BodyModel.Right.Leg.Seg.Shank.Scale.T0;
      
      AnyFunTransform3DLin ScaleFunction = {
        ScaleMat = {{1,0,0},{0,1,0},{0,0,1}};
        Offset = {0,0,0};
        PreTransforms = {&.STLTransform, &.ReverseTransform};
        //        PreTransforms = {&.AffineTransform, &.ReverseTransform};
      };
      
      AnyFunTransform3DLin2 AffineTransform = {
        AnyFileVar SourceSTL = FilePathCompleteOf(...Source.Right.FilenameShank) + ".stl";
        AnyFileVar TargetSTL = FilePathCompleteOf(...Target.Right.FilenameShank) + ".stl";
        AnyMatrix Points0unscaled = STL_Vertices(SourceSTL, iarr(0, floor(NumPoints0/NumPoints), NumPoints0 - 1), 1)*0.001;
        Points0 = .TSeg2ScaleFrame(Points0unscaled);
        Points1 = STL_Vertices(TargetSTL, iarr(0, floor(NumPoints1/NumPoints), NumPoints1 - 1), 1)*0.001;
        AnyInt NumPoints0 = STL_Size(SourceSTL, 1)[0];
        AnyInt NumPoints1 = STL_Size(TargetSTL, 1)[0];
        AnyVar NumPoints = 5000;
        Mode = VTK_LANDMARK_AFFINE;
      };
      
      AnyFunTransform3DLin2 ReverseTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = .AffineTransform.Points0;
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DLin2 RegistrationTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = ....BodyModel.Right.Leg.Seg.Shank.Scale(.AffineTransform.Points0unscaled);
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DSTL STLTransform= 
      {
        PreTransforms = {&.AffineTransform};
        RBFDef.Type = RBF_Triharmonic;
        RBFDef.Param = 0.2;
        AnyFixedRefFrame ref = {
          AnySurfSTL source = {
            FileName = .....Source.Right.FilenameShank;
            ScaleXYZ = {1, 1, 1}*0.001;
            AnyFunTransform3D &pre = ...TSeg2ScaleFrame;
          };
          AnySurfSTL target = {
            FileName = .....Target.Right.FilenameShank;
            ScaleXYZ = {1, 1, 1}*0.001;
          };
        };
        SurfaceObjects0 = {&ref.source};
        SurfaceObjects1 = {&ref.target};
        NumPoints = 5000;
        UseClosestPointMatchingOnOff = Off;
        BoundingBox.ScaleXYZ = 5*{1, 1, 1};
        BoundingBox.DivisionFactorXYZ = 5*{1, 1, 1};
        BoundingBoxOnOff = On;
      };
      
    };
    //-------------------------------------------------------
    //------------------------RIGHT-TALUS--------------------
    //-------------------------------------------------------
    AnyFolder Talus = 
    {
      AnyFunTransform3D &TSeg2ScaleFrame = ...BodyModel.Right.Leg.Seg.Talus.Scale.T0;
      
      
      AnyFunTransform3DLin ScaleFunction = {
        ScaleMat = {{1,0,0},{0,1,0},{0,0,1}};
        Offset = {0,0,0};
        PreTransforms = {&.STLTransform,&.ReverseTransform};
      };
      
      AnyFunTransform3DLin2 AffineTransform = {
        AnyFileVar SourceSTL = FilePathCompleteOf(...Source.Right.FilenameTalus) + ".stl";
        AnyFileVar TargetSTL = FilePathCompleteOf(...Target.Right.FilenameTalus) + ".stl";
        AnyMatrix Points0unscaled = STL_Vertices(SourceSTL, iarr(0, floor(NumPoints0/NumPoints), NumPoints0 - 1), 1)*0.001;
        //        AnyMatrix Points0unscaled = STL_Vertices(SourceSTL, iarr(0, floor(NumPoints0/NumPoints), NumPoints0 - 1), 1);
        Points0 = .TSeg2ScaleFrame(Points0unscaled);
        Points1 = STL_Vertices(TargetSTL, iarr(0, floor(NumPoints1/NumPoints), NumPoints1 - 1), 1)*0.001;
        AnyInt NumPoints0 = STL_Size(SourceSTL, 1)[0];
        AnyInt NumPoints1 = STL_Size(TargetSTL, 1)[0];
        AnyVar NumPoints = 3000;
        Mode = VTK_LANDMARK_AFFINE;
      };
      
      AnyFunTransform3DLin2 ReverseTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = .AffineTransform.Points0unscaled;
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DLin2 RegistrationTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = ....BodyModel.Right.Leg.Seg.Talus.Scale(.AffineTransform.Points0unscaled);
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DSTL STLTransform= 
      {
        PreTransforms = {&.AffineTransform};
        RBFDef.Type = RBF_Triharmonic;
        RBFDef.Param = 0.2;
        //        RBFDef.Type = RBF_ThinPlate;
        AnyFixedRefFrame ref = {
          AnySurfSTL source = {
            FileName = .....Source.Right.FilenameTalus;
            ScaleXYZ = {1, 1, 1}*0.001;
//            ScaleXYZ = {1, 1, 1};
            AnyFunTransform3D &pre = ...TSeg2ScaleFrame;
          };
          AnySurfSTL target = {
            FileName = .....Target.Right.FilenameTalus;
            ScaleXYZ = {1, 1, 1}*0.001;
          };
        };
        SurfaceObjects0 = {&ref.source};
        SurfaceObjects1 = {&ref.target};
        NumPoints = 3000;
        UseClosestPointMatchingOnOff = Off;
        BoundingBox.ScaleXYZ = 5*{1, 1, 1};
        BoundingBox.DivisionFactorXYZ = 5*{1, 1, 1};
        BoundingBoxOnOff = On;
      };
      
    };
    //-------------------------------------------------------
    //------------------------RIGHT-TALUS--------------------
    //-------------------------------------------------------
    
    AnyFolder Foot = {
      AnyFunTransform3D &TSeg2ScaleFrame = ...BodyModel.Right.Leg.Seg.Foot.Scale.T0;
      
      
      AnyFunTransform3DLin ScaleFunction = {
        ScaleMat = {{1,0,0},{0,1,0},{0,0,1}};
        Offset = {0,0,0};
        PreTransforms = {&.RBFTransform,&.ReverseTransform};
      };
      
      AnyFunTransform3DLin2 AffineTransformation = {
        AnyMatrix UnscaledPoints = ...Source.Foot_source_R;
        Points0 =     .TSeg2ScaleFrame(UnscaledPoints);
        Points1 = ...Target.Foot_target_R;
        
        Mode = VTK_LANDMARK_AFFINE;
      };
      
      AnyFunTransform3DLin2 ReverseTransform = {
        Points0 = .AffineTransformation.Points1;
        Points1 = .AffineTransformation.Points0;
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DLin2 RegistrationTransform = {
        Points0 = .AffineTransformation.Points1;
        Points1 = ....BodyModel.Right.Leg.Seg.Foot.Scale(.AffineTransformation.UnscaledPoints);
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DRBF RBFTransform = 
      {
        PreTransforms = {&.AffineTransformation};
        RBFDef = 
        {
          Type = RBF_Triharmonic;
          Param = 0.2;
        };
        Points0 =     .AffineTransformation.UnscaledPoints;
        AnyFunTransform3D &pre = .TSeg2ScaleFrame;
        
        PointNames = {
          "2nd distal phalanx",
          "2nd met head",
          "2nd proximal phalanx",
          "3rd distal phalanx",
          "3rd met head",
          "3rd proximal phalanx",
          "4th distal phalanx",
          "4th met head",
          "4th proximal phalanx",
          "5th distal phalanx",
          "5th proximal phalanx",
          "Anterior Calcaneous",
          "Central 1st met",
          "Cuboid",
          "Distal 5th met",
          "Hallux 1st",
          "Hallux 2nd",
          "Hallux 3rd",
          "Intermediate cuneiform",
          "Lateral 1st met head",
          "Lateral calcaneum",
          "Lateral cuneiform",
          "Longitudinal Arch 1",
          "Longitudinal Arch 2",
          "Longitudinal Arch 3",
          "Medial 1st met head",
          "Medial calcaneum",
          "Medial cuneiform",
          "Posterior Calcaneous",
          "Proximal 1st met head",
          "Proximal 5th met",
          "Superior calcaneum",
          "Transverse Arch 1",
          "Transverse Arch 2",
          "Transverse Arch 3",
          "Tuberosity navicular"    
        };
        
        Points1 = ...Target.Foot_target_R;
        
        BoundingBox = 
        {
          Type = BB_Cartesian;
          ScaleXYZ = {2, 2, 2};
          DivisionFactorXYZ = 5*{1, 1, 1};
        };
        BoundingBoxOnOff = On;
      };
    }; // Foot  
  }; // Right
  
  AnyFolder Left =
  { 
    AnyFolder Shank = 
    {   
      AnyFunTransform3D &TSeg2ScaleFrame = ...BodyModel.Left.Leg.Seg.Shank.Scale.T0;
      
      AnyMatrix AMirroring = { 
        {1,0,0},
        {0,1,0},
        {0,0,-1}
      };
      
      AnyFunTransform3DLin ScaleFunction = {
        ScaleMat = {{1,0,0},{0,1,0},{0,0,1}};
        Offset = {0,0,0};
        PreTransforms = {&.STLTransform, &.ReverseTransform};
      };
      
      AnyFunTransform3DLin2 AffineTransform = {
        AnyFileVar SourceSTL = FilePathCompleteOf(...Source.Right.FilenameShank) + ".stl";
        AnyFileVar TargetSTL = FilePathCompleteOf(...Target.Left.FilenameShank) + ".stl";
        AnyMatrix Points0unscaled = STL_Vertices(SourceSTL, iarr(0, floor(NumPoints0/NumPoints), NumPoints0 - 1), 1)*0.001*.AMirroring;
        Points0 = .TSeg2ScaleFrame(Points0unscaled);
        Points1 = STL_Vertices(TargetSTL, iarr(0, floor(NumPoints1/NumPoints), NumPoints1 - 1), 1)*0.001;
        AnyInt NumPoints0 = STL_Size(SourceSTL, 1)[0];
        AnyInt NumPoints1 = STL_Size(TargetSTL, 1)[0];
        AnyVar NumPoints = 5000;
        Mode = VTK_LANDMARK_AFFINE;
      };
      
      AnyFunTransform3DLin2 ReverseTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = .AffineTransform.Points0;
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DLin2 RegistrationTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = ....BodyModel.Left.Leg.Seg.Shank.Scale(.AffineTransform.Points0unscaled);
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DSTL STLTransform= 
      {
        PreTransforms = {&.AffineTransform};
        RBFDef.Type = RBF_Triharmonic;
        RBFDef.Param = 0.2;
        AnyFixedRefFrame ref = {
          AnySurfSTL source = {
            FileName = .....Source.Right.FilenameShank;
            ScaleXYZ = {1, 1, -1}*0.001;
            AnyFunTransform3D &pre = ...TSeg2ScaleFrame;
          };
          AnySurfSTL target = {
            FileName = .....Target.Left.FilenameShank;
            ScaleXYZ = {1, 1, 1}*0.001;
          };
        };
        SurfaceObjects0 = {&ref.source};
        SurfaceObjects1 = {&ref.target};
        NumPoints = 5000;
        UseClosestPointMatchingOnOff = Off;
        BoundingBox.ScaleXYZ = 5*{1, 1, 1};
        BoundingBox.DivisionFactorXYZ = 5*{1, 1, 1};
        BoundingBoxOnOff = On;
      };
    };
    
    AnyFolder Thigh = 
    {  
      AnyFunTransform3D &TSeg2ScaleFrame = ...BodyModel.Left.Leg.Seg.Thigh.Scale.T0;
      
      AnyMatrix AMirroring = { 
        {1,0,0},
        {0,1,0},
        {0,0,-1}
      };
      AnyFunTransform3DLin ScaleFunction = {
        ScaleMat = {{1,0,0},{0,1,0},{0,0,1}};
        Offset = {0,0,0};
        PreTransforms = {&.STLTransform, &.ReverseTransform};
        //PreTransforms = {&.AffineTransform, &.ReverseTransform};
      };
      
      AnyFunTransform3DLin2 AffineTransform = {
        AnyFileVar SourceSTL = FilePathCompleteOf(...Source.Right.FilenameThigh) + ".stl";
        AnyFileVar TargetSTL = FilePathCompleteOf(...Target.Left.FilenameThigh) + ".stl";
        AnyMatrix Points0unscaled = STL_Vertices(SourceSTL, iarr(0, floor(NumPoints0/NumPoints), NumPoints0 - 1), 1)*0.001*.AMirroring;
        Points0 = .TSeg2ScaleFrame(Points0unscaled);
        Points1 = STL_Vertices(TargetSTL, iarr(0, floor(NumPoints1/NumPoints), NumPoints1 - 1), 1)*0.001;
        AnyInt NumPoints0 = STL_Size(SourceSTL, 1)[0];
        AnyInt NumPoints1 = STL_Size(TargetSTL, 1)[0];
        AnyVar NumPoints = 5000;
        Mode = VTK_LANDMARK_AFFINE;
      };
      
      AnyFunTransform3DLin2 ReverseTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = .AffineTransform.Points0;
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DLin2 RegistrationTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = ....BodyModel.Left.Leg.Seg.Thigh.Scale(.AffineTransform.Points0unscaled);
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DSTL STLTransform= 
      {
        PreTransforms = {&.AffineTransform};
        //   RBFDef.Type = RBF_Triharmonic;
        //   RBFDef.Param = 0.2;
        RBFDef.Type = RBF_ThinPlate;
        AnyFixedRefFrame ref = {
          AnySurfSTL source = {
            FileName = .....Source.Right.FilenameThigh;
            ScaleXYZ = {1, 1, -1}*0.001;
            AnyFunTransform3D &pre = ...TSeg2ScaleFrame;
          };
          AnySurfSTL target = {
            FileName = .....Target.Left.FilenameThigh;
            ScaleXYZ = {1, 1, 1}*0.001;
          };
        };
        SurfaceObjects0 = {&ref.source};
        SurfaceObjects1 = {&ref.target};
        NumPoints = 5000;
        UseClosestPointMatchingOnOff = Off;
        BoundingBox.ScaleXYZ = 5*{1, 1, 1};
        BoundingBox.DivisionFactorXYZ = 5*{1, 1, 1};
        BoundingBoxOnOff = On;
      };
    };
    
    AnyFolder Patella = {
      //      AnyFunTransform3D &TSeg2ScaleFrame = ...BodyModel.Left.Leg.Seg.Patella.Scale.T0;
      
      AnyMatrix AMirroring = { 
        {1,0,0},
        {0,1,0},
        {0,0,-1}
      };
      AnyFunTransform3DLin ScaleFunction = {
        ScaleMat = {{1,0,0},{0,1,0},{0,0,1}};
        Offset = {0,0,0};
        PreTransforms = {&.STLTransform, &.ReverseTransform};
      };
      
      AnyFunTransform3DLin2 AffineTransform = {
        AnyFileVar SourceSTL = FilePathCompleteOf(...Source.Right.FilenamePatella) + ".stl";
        AnyFileVar TargetSTL = FilePathCompleteOf(...Target.Left.FilenamePatella) + ".stl";
        AnyMatrix Points0unscaled = STL_Vertices(SourceSTL, iarr(0, floor(NumPoints0/NumPoints), NumPoints0 - 1), 1)*0.001*.AMirroring;
        //        AnyMatrix Points0unscaled = STL_Vertices(SourceSTL, iarr(0, floor(NumPoints0/NumPoints), NumPoints0 - 1), 1)*.AMirroring;
        Points0 = Points0unscaled;
        Points1 = STL_Vertices(TargetSTL, iarr(0, floor(NumPoints1/NumPoints), NumPoints1 - 1), 1)*0.001;
        AnyInt NumPoints0 = STL_Size(SourceSTL, 1)[0];
        AnyInt NumPoints1 = STL_Size(TargetSTL, 1)[0];
        AnyVar NumPoints = 3000;
        Mode = VTK_LANDMARK_AFFINE;
      };
      
      AnyFunTransform3DLin2 ReverseTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = .AffineTransform.Points0;
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DLin2 RegistrationTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = ....BodyModel.Left.Leg.Seg.Patella.Scale(.AffineTransform.Points0unscaled);
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DSTL STLTransform= 
      {
        PreTransforms = {&.AffineTransform};
        RBFDef.Type = RBF_Triharmonic;
        RBFDef.Param = 0.2;
        AnyFixedRefFrame ref = {
          AnySurfSTL source = {
            FileName = .....Source.Right.FilenamePatella;
            ScaleXYZ = {1, 1, 1}*0.001;

            //            ScaleXYZ = {1, 1, -1};
            //            AnyFunTransform3D &pre = ...TSeg2ScaleFrame;
          };
          AnySurfSTL target = {
            FileName = .....Target.Left.FilenamePatella;
            ScaleXYZ = {1, 1, 1}*0.001;
          };
        };
        SurfaceObjects0 = {&ref.source};
        SurfaceObjects1 = {&ref.target};
        NumPoints = 3000;
        UseClosestPointMatchingOnOff = On;
        BoundingBox.ScaleXYZ = 5*{1, 1, 1};
        BoundingBox.DivisionFactorXYZ = 5*{1, 1, 1};
        BoundingBoxOnOff = On;
      };   
    };
    
    //-------------------------------------------------------
    //------------------------LEFT--TALUS--------------------
    //-------------------------------------------------------
    AnyFolder Talus = 
    {  
      AnyFunTransform3D &TSeg2ScaleFrame = ...BodyModel.Left.Leg.Seg.Talus.Scale.T0;
      
      AnyMatrix AMirroring = { 
        {1,0,0},
        {0,1,0},
        {0,0,-1}
      };
      AnyFunTransform3DLin ScaleFunction = {
        ScaleMat = {{1,0,0},{0,1,0},{0,0,1}};
        Offset = {0,0,0};
        PreTransforms = {&.STLTransform, &.ReverseTransform};
        //PreTransforms = {&.AffineTransform, &.ReverseTransform};
      };
      
      AnyFunTransform3DLin2 AffineTransform = {
        AnyFileVar SourceSTL = FilePathCompleteOf(...Source.Right.FilenameTalus) + ".stl";
        AnyFileVar TargetSTL = FilePathCompleteOf(...Target.Left.FilenameTalus) + ".stl";
        AnyMatrix Points0unscaled = STL_Vertices(SourceSTL, iarr(0, floor(NumPoints0/NumPoints), NumPoints0 - 1), 1)*0.001*.AMirroring;
        //        AnyMatrix Points0unscaled = STL_Vertices(SourceSTL, iarr(0, floor(NumPoints0/NumPoints), NumPoints0 - 1), 1)*.AMirroring;
        Points0 = .TSeg2ScaleFrame(Points0unscaled);
        Points1 = STL_Vertices(TargetSTL, iarr(0, floor(NumPoints1/NumPoints), NumPoints1 - 1), 1)*0.001;
        AnyInt NumPoints0 = STL_Size(SourceSTL, 1)[0];
        AnyInt NumPoints1 = STL_Size(TargetSTL, 1)[0];
        AnyVar NumPoints = 3000;
        Mode = VTK_LANDMARK_AFFINE;
      };
      
      AnyFunTransform3DLin2 ReverseTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = .AffineTransform.Points0;
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DLin2 RegistrationTransform = {
        Points0 = .AffineTransform.Points1;
        Points1 = ....BodyModel.Left.Leg.Seg.Talus.Scale(.AffineTransform.Points0unscaled);
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DSTL STLTransform= 
      {
        PreTransforms = {&.AffineTransform};
        RBFDef.Type = RBF_Triharmonic;
        RBFDef.Param = 0.2;
        //            RBFDef.Type = RBF_ThinPlate;
        AnyFixedRefFrame ref = {
          AnySurfSTL source = {
            FileName = .....Source.Right.FilenameTalus;
            ScaleXYZ = {1, 1, 1}*0.001;
            //            ScaleXYZ = {1, 1, -1};
            AnyFunTransform3D &pre = ...TSeg2ScaleFrame;
          };
          AnySurfSTL target = {
            FileName = .....Target.Left.FilenameTalus;
            ScaleXYZ = {1, 1, 1}*0.001;
          };
        };
        SurfaceObjects0 = {&ref.source};
        SurfaceObjects1 = {&ref.target};
        NumPoints = 3000;
        UseClosestPointMatchingOnOff = Off;
        BoundingBox.ScaleXYZ = 5*{1, 1, 1};
        BoundingBox.DivisionFactorXYZ = 5*{1, 1, 1};
        BoundingBoxOnOff = On;
      };
    };
    
    //-------------------------------------------------------
    //------------------------LEFT--TALUS--------------------
    //-------------------------------------------------------
    
    
    AnyFolder Foot = {
      
      AnyFunTransform3D &TSeg2ScaleFrame = ...BodyModel.Left.Leg.Seg.Foot.Scale.T0;
      
      AnyFunTransform3DLin ScaleFunction = {
        ScaleMat = {{1,0,0},{0,1,0},{0,0,1}};
        Offset = {0,0,0};
        PreTransforms = {&.RBFTransform,&.ReverseTransform};        
      };
      
      AnyFunTransform3DLin2 AffineTransformation = {
        AnyMatrix UnscaledPoints = ...Source.Foot_source_L;
        
        Points0 = .TSeg2ScaleFrame(UnscaledPoints);
        
        Points1 = ...Target.Foot_target_L;
        
        
        Mode = VTK_LANDMARK_AFFINE;
      };
      
      AnyFunTransform3DLin2 ReverseTransform = {
        Points0 = .AffineTransformation.Points1;
        Points1 = .AffineTransformation.Points0;
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      
      AnyFunTransform3DLin2 RegistrationTransform = {
        Points0 = .AffineTransformation.Points1;
        Points1 = ....BodyModel.Left.Leg.Seg.Foot.Scale(.AffineTransformation.UnscaledPoints);
        Mode = VTK_LANDMARK_RIGIDBODY;
      };
      AnyFunTransform3DRBF RBFTransform = 
      {
        PreTransforms = {&.AffineTransformation};
        RBFDef = 
        {
          Type = RBF_Triharmonic;
          Param = 0.2;
        };
        Points0 =     .AffineTransformation.UnscaledPoints;
        AnyFunTransform3D &pre = .TSeg2ScaleFrame;  
        
        PointNames = {
          "2nd distal phalanx",
          "2nd met head",
          "2nd proximal phalanx",
          "3rd distal phalanx",
          "3rd met head",
          "3rd proximal phalanx",
          "4th distal phalanx",
          "4th met head",
          "4th proximal phalanx",
          "5th distal phalanx",
          "5th proximal phalanx",
          "Anterior Calcaneous",
          "Central 1st met",
          "Cuboid",
          "Distal 5th met",
          "Hallux 1st",
          "Hallux 2nd",
          "Hallux 3rd",
          "Intermediate cuneiform",
          "Lateral 1st met head",
          "Lateral calcaneum",
          "Lateral cuneiform",
          "Longitudinal Arch 1",
          "Longitudinal Arch 2",
          "Longitudinal Arch 3",
          "Medial 1st met head",
          "Medial calcaneum",
          "Medial cuneiform",
          "Posterior Calcaneous",
          "Proximal 1st met head",
          "Proximal 5th met",
          "Superior calcaneum",
          "Transverse Arch 1",
          "Transverse Arch 2",
          "Transverse Arch 3",
          "Tuberosity navicular" 
        };
        
        Points1 = ...Target.Foot_target_L;
        
        BoundingBox = 
        {
          Type = BB_Cartesian;
          ScaleXYZ = {2, 2, 2};
          DivisionFactorXYZ = 5*{1, 1, 1};
        };
        BoundingBoxOnOff = On;
      };
    }; // Foot    
  }; // Left
}; // SubjectSpecificScaling
































