

Main.EnvironmentModel.GlobalRef = {
  
  AnyRefNode FootTarget = {
  
  AnyFloat Offset = {0.5, 0.0, -0.5};
  AnyMat33 AngOffset = RotMat(0*pi/180,x)
         *RotMat(30*pi/180,y)
         *RotMat(0*pi/180,z);

  
  AnyRefNode LfootHeel = {
    sRel = {2.346192, 0.1137358, -3.914502}*.AngOffset' - .Offset;
    AnyDrawNode drw = {RGB = {0,0,1};ScaleXYZ=0.01*{1,1,1};};
  };
  
  AnyRefNode LfootLat = {
    sRel = {2.250375, 0.03082995, -4.041558}*.AngOffset' - .Offset;
    AnyDrawNode drw = {RGB = {0,0,1};ScaleXYZ=0.01*{1,1,1};};
  };
  
  AnyRefNode LfootMed = {
    sRel = {2.331783, 0.01729834, -4.05399}*.AngOffset' - .Offset;
    AnyDrawNode drw = {RGB = {0,0,1};ScaleXYZ=0.01*{1,1,1};};
  };
};
  
  
  AnyFunSquareWave activelocation = 
  {
    InitialValues = {0.0};
    Ts = {3.0,3.4};
    Values = {{1,0}};
    dT = {0.1,0.1};
  };
  //
//  AnyFloat SqWaveFunTest = activelocation(Main.ModelSetup.BVHFileData.Markers.RHJC.PosInterpol.T) ;
AnyFloat SqWaveFunTest = activelocation(PosLFootMed.Data[0]) + 0*Main.Studies.BVH_StickFigure.t ;

  AnyFunInterpol PosLFootMed = {
    Type = ConstantValue;
      T = Main.ModelSetup.BVHFileData.Data.Hips.MotionFunction.T;
      Data = {repmat(SizesOf(T)[0], .FootTarget.LfootMed.sRel[0]),
              repmat(SizesOf(T)[0], .FootTarget.LfootMed.sRel[1]),
              repmat(SizesOf(T)[0], .FootTarget.LfootMed.sRel[2])};
  };
  AnyFunInterpol PosLFootLat = {
    Type = ConstantValue;
      T = Main.ModelSetup.BVHFileData.Data.Hips.MotionFunction.T;
      Data = {repmat(SizesOf(T)[0], .FootTarget.LfootLat.sRel[0]),
              repmat(SizesOf(T)[0], .FootTarget.LfootLat.sRel[1]),
              repmat(SizesOf(T)[0], .FootTarget.LfootLat.sRel[2])};
  };

AnyFunInterpol PosLFootHeel = {
    Type = ConstantValue;
      T = Main.ModelSetup.BVHFileData.Data.Hips.MotionFunction.T;
      Data = {repmat(SizesOf(T)[0], .FootTarget.LfootHeel.sRel[0]),
              repmat(SizesOf(T)[0], .FootTarget.LfootHeel.sRel[1]),
              repmat(SizesOf(T)[0], .FootTarget.LfootHeel.sRel[2])};
  };


  
  
}; // Global Ref

//Main.Studies.BVH_StickFigure = {
//  AnyFolder &Env = Main.EnvironmentModel.GlobalRef;
//  //AnyFolder &OptDrivers = Main.EnvironmentModel.OptDrivers;
//};

Main.ModelSetup.BVHFileData.Model.GlobalRef = { 
  
  AnyFloat BVHOriginLin = DesignVar({-0.0, 0.0, 0.0}); // x, y, z
  AnyFloat BVHOriginRot = DesignVar({0,0*pi/180,0}); // x, y, z in radians

  Origin =  {BVHOriginLin[0],BVHOriginLin[1],BVHOriginLin[2]};
  Axes = RotMat(BVHOriginRot[0],x)
        *RotMat(BVHOriginRot[1],y)
        *RotMat(BVHOriginRot[2],z);

  AnyDrawRefFrame drw = {};


};

//Main.ModelSetup.BVHFileData.Model.Hips.Driver.CType = {Soft,Soft,Soft,Soft,Soft,Soft};

Main.ModelSetup.MocapExtraDrivers = {
};

Main.Studies = {
  
  
//  AnyOptKinStudy OptimizeOrigin = {
//    Analysis = {
//      AnyOperation &ref = .refstudy.Kinematics;
//    };
//    AnyKinStudy &refstudy = Main.Studies.BVH_StickFigure;
//    refstudy = {
////      AnyKinMotion LfootMed = 
////      {
////        //          MeasureOrganizer = {0};
////        CType = {Soft,Soft,Soft} ;
////        //          WeightFun = Main.EnvironmentModel.GlobalRef.activelocation(repmat(Main.Studies.BVH_StickFigure.nStep,1.0));
////        //DriverPos0 = ;
////        //DriverVel0 = ;
////        //DriverAcc0 = ;
////        //AnyKinMeasure &<Insert name0> = <Insert object reference (or full object definition)>; You can make any number of these objects!
////        //AnyParamFun &<Insert name0> = <Insert object reference (or full object definition)>; You can make any number of these objects!
////        AnyKinLinear lin = {
////          AnyRefFrame &target = Main.EnvironmentModel.GlobalRef.LfootMed;
////          AnyRefFrame &BVH = Main.ModelSetup.BVHFileData.Model.Hips.LeftHip.LeftKnee.LeftAnkle.LeftToe.Seg.LTOE2;
////        };
////        AnyParamFun &Marker = Main.EnvironmentModel.GlobalRef.PosLFootMed;
////        //          AnyFunConst ZeroFun = {
////        //              Value = {0};
////        //};
////      };
//    };
//    
//    
//    AnyDesVar BVHOriginX = {
//      Val = Main.ModelSetup.BVHFileData.Model.GlobalRef.BVHOrigin[0];
//    };
//    AnyDesVar BVHOriginY = {
//      Val = Main.ModelSetup.BVHFileData.Model.GlobalRef.BVHOrigin[1];
//    };
//    
//    AnyDesVar BVHOriginZ = {
//      Val = Main.ModelSetup.BVHFileData.Model.GlobalRef.BVHOrigin[2];
//    };
//  };
};


Main.Studies.ParameterIdentification = {

    
//  AnyDesVar BVHOriginYLin = {
//    Val = Main.ModelSetup.BVHFileData.Model.GlobalRef.BVHOriginLin[1];
//  };
  AnyDesVar BVHOriginXLin = {
    Val = Main.ModelSetup.BVHFileData.Model.GlobalRef.BVHOriginLin[0];
  };
  AnyDesVar BVHOriginZLin = {
    Val = Main.ModelSetup.BVHFileData.Model.GlobalRef.BVHOriginLin[2];
  };

//  AnyDesVar BVHOriginXRot = {
//    Val = Main.ModelSetup.BVHFileData.Model.GlobalRef.BVHOriginRot[0];
//  };
  AnyDesVar BVHOriginYRot = {
    Val = Main.ModelSetup.BVHFileData.Model.GlobalRef.BVHOriginRot[1];
  };
  
//  AnyDesVar BVHOriginZRot = {
//    Val = Main.ModelSetup.BVHFileData.Model.GlobalRef.BVHOriginRot[2];
//  };

//AnyDesVar &BVHOriginYLin = Main.ModelSetup.BVHFileData.Model.GlobalRef.BVHOriginYLin;
//AnyDesVar &BVHOriginZLin = Main.ModelSetup.BVHFileData.Model.GlobalRef.BVHOriginZLin;
//AnyDesVar &grteBVHOriginXLin1 = Main.ModelSetup.BVHFileData.Model.GlobalRef.BVHOriginXLin;
//  
//AnyDesVar &BVHOriginXRot = Main.ModelSetup.BVHFileData.Model.GlobalRef.BVHOriginXRot;
//AnyDesVar &BVHOriginYRot = Main.ModelSetup.BVHFileData.Model.GlobalRef.BVHOriginYRot;
//AnyDesVar &BVHOriginZRot = Main.ModelSetup.BVHFileData.Model.GlobalRef.BVHOriginZRot;


  KinematicStudyForParameterIdentification = {
    AnyFolder &mocapmodel = Main.ModelSetup;
    AnyFolder OptDrivers = {
      
      AnyKinDriverMarker LfootLat = {
    viewKinMeasure.Size = 0.2;
    //MeasureOrganizer = ;
    //CType = ;
    WeightFun = {&Main.EnvironmentModel.GlobalRef.activelocation,
                 &Main.EnvironmentModel.GlobalRef.activelocation,
                 &Main.EnvironmentModel.GlobalRef.activelocation};
    //DriverPos0 = ;
    //DriverVel0 = ;
    //DriverAcc0 = ;
    //AnyParamFun &<Insert name0> = <Insert object reference (or full object definition)>;
    AnyRefFrame &Marker = Main.ModelSetup.BVHFileData.Model.Hips.LeftHip.LeftKnee.LeftAnkle.LeftToe.Seg.LTOE2;
    AnyParamFun &target = Main.EnvironmentModel.GlobalRef.PosLFootLat;
  };
AnyKinDriverMarker LfootMed = {
    viewKinMeasure.Size = 0.2;
    //MeasureOrganizer = ;
    //CType = ;
    WeightFun = {&Main.EnvironmentModel.GlobalRef.activelocation,
                 &Main.EnvironmentModel.GlobalRef.activelocation,
                 &Main.EnvironmentModel.GlobalRef.activelocation};
    //DriverPos0 = ;
    //DriverVel0 = ;
    //DriverAcc0 = ;
    //AnyParamFun &<Insert name0> = <Insert object reference (or full object definition)>;
    AnyRefFrame &Marker = Main.ModelSetup.BVHFileData.Model.Hips.LeftHip.LeftKnee.LeftAnkle.LeftToe.Seg.LTOE;
    AnyParamFun &target = Main.EnvironmentModel.GlobalRef.PosLFootMed;
  };

AnyKinDriverMarker LfootHeel = {
    viewKinMeasure.Size = 0.2;
    //MeasureOrganizer = ;
    //CType = ;
    WeightFun = {&Main.EnvironmentModel.GlobalRef.activelocation,
                 &Main.EnvironmentModel.GlobalRef.activelocation,
                 &Main.EnvironmentModel.GlobalRef.activelocation};
    //DriverPos0 = ;
    //DriverVel0 = ;
    //DriverAcc0 = ;
    //AnyParamFun &<Insert name0> = <Insert object reference (or full object definition)>;
    AnyRefFrame &Marker = Main.ModelSetup.BVHFileData.Model.Hips.LeftHip.LeftKnee.LeftAnkle.Seg.LAJC;
    AnyParamFun &target = Main.EnvironmentModel.GlobalRef.PosLFootHeel;
  };

    };
  };
};


