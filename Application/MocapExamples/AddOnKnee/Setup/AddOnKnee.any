// RIGHT KNEE (TF) ONLY
// Class template for adding the MA knee modifications to 
// HumanModel setup.


//include Points from contact surface selections 
#define AddPointCloud(name) AnyFloat pts_##name = GetVertices(..R_##name##_pts.Indices); AnyDrawPointCloud ptcl_##name = {Points = ...Scale(.pts_##name); PointStyle.Style = PointStyleSphere;Points3D = On;ShowNames = On;RGB={1, 0, 0};PointStyle.Size=0.005;};
//fit cylinder to point clouds
#define FitCylinder(name,fixed) AnyRefNode name = {sRel = test_cylinder_fit.sRel; ARel = test_cylinder_fit.ARel;AnyDrawNode drw={ScaleXYZ={1,1,1}*0.001;}; AnySurfCylinderFit test_cylinder_fit = {Length = 0.00000;FixedDirection =fixed;Direction = {0.0, 0.0, 1.0}; Points = DesignVar(..surf.pts_##name);AnyDrawParamSurf srf_##name={Visible = Off;RGB={0,1,1};Opacity=0.2;};};}; 
//draw line (knee axis) from centers of medial and lateral cylinder fits
#define DrawAxis(name) AnyDrawLine name##_axis ={p0 = Main.GlobalRef.Medial_##name.sRel; p1 = Main.GlobalRef.Lateral_##name.sRel; Line = {Style = Line3DStyleFull;Thickness = 0.0005;RGB = {1, 0.0, 0.0};};};
//// Exclude right knee joint
Main = {
  HumanModel ={
    //   Subject-specific joint axis specifications 
    #include "SubjectSpecificScaling.any"
    #include "Cad3_CT_selected_Nodes.any"
    //SubjectSpecificJoints.any can be used if user wants to have hinge joint defined from femoral condylar shape (FitCylinders) Not needed for Moving-axis code.
    #include "SubjectSpecificJoints.any"
    //#ifndef DEFINE_LOCAL_COORDINATE
    //#define DEFINE_LOCAL_COORDINATE(rNode) sRel = (..Scale(..CustomMarkerScaling(rNode)-.rOffset))*.AOffset;
    //#endif
    //#define DEF_REFNODE_CUSTOM_SCALING_1arg(sRel_us)\
    //    sRel = .Scale(.CustomMarkerScaling(sRel_us));
    
  };
  
  Main.HumanModel.BodyModel.Right.Leg.Seg = {
    AnyFolder UnitVectors = {
      //      // Length between Tibiofemoral EFCs m->l (Femur Registration)
      //      // Unit Vector directed along Tibiofemoral FFCs m->l (Femur Registration)
      AnyVar L1 = vnorm(Main.HumanModel.FemurLandmarks.Lateral_TF_EFC -Main.HumanModel.FemurLandmarks.Medial_TF_EFC,2.0);
      AnyVec3 e1 = (Main.HumanModel.FemurLandmarks.Lateral_TF_FFC - Main.HumanModel.FemurLandmarks.Medial_TF_FFC)/vnorm(Main.HumanModel.FemurLandmarks.Lateral_TF_FFC - Main.HumanModel.FemurLandmarks.Medial_TF_FFC); 
      //      // Length between Tibiofemoral ECFs m->l (Femur Registration)
      //      // Unit Vector directed along Tibiofemoral FFCs m->l (Tibia Registration)
      //      AnyVar L3 = vnorm(Main.MRI_Data.Right.R_FemurLandmarks.FemurRegistration.Lateral_TF_EFC - Main.MRI_Data.Right.R_FemurLandmarks.FemurRegistration.Medial_TF_EFC,2.0);
      //      AnyVec3 e3 = (Main.MRI_Data.Right.R_FemurLandmarks.TibiaRegistration.Lateral_TF_FFC - Main.MRI_Data.Right.R_FemurLandmarks.TibiaRegistration.Medial_TF_FFC)/vnorm(Main.MRI_Data.Right.R_FemurLandmarks.TibiaRegistration.Lateral_TF_FFC -Main.MRI_Data.Right.R_FemurLandmarks.TibiaRegistration.Medial_TF_FFC); 
    };
  };
  Main.HumanModel.BodyModel.Right.Leg.Seg.Thigh = {
    AnyFunTransform3D &CustomMarkerScaling = Main.HumanModel.SubjectSpecificScaling.Right.Thigh.RegTransform;
//    AnyRefNode surf={
//    AnyFloat points = Points0 = .GetVertices(0,1928347,1); 
//    };
    AnyRefNode HipJointCenter = {
      sRel = .Scale(Main.HumanModel.BodyModel.Right.Leg.ModelParameters.Thigh.HipJoint);
      //    AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,1,0};};
    };
    AnyRefNode LateralDistalFemurEdge = {
      sRel = .CustomMarkerScaling(Main.HumanModel.FemurLandmarks.LateralDistalFemurEdge);
      //  AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,1,0};};
    };
    AnyRefNode MedialDistalFemurEdge = {
      sRel = .CustomMarkerScaling(Main.HumanModel.FemurLandmarks.MedialDistalFemurEdge);
      //  AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,1,0};};
    };
    AnyRefNode FemurNotch = {
      sRel = .CustomMarkerScaling(Main.HumanModel.FemurLandmarks.FemurNotch);
      //  AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,1,0};};
    };
    AnyRefNode MedEpicondyle = {
      sRel = .Scale(Main.HumanModel.BodyModel.Right.Leg.ModelParameters.Thigh.EpicondylusFemorisMedialis);
      //    AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,1,0};};
    };
    AnyRefNode LatEpicondyle = {
      sRel = .Scale(Main.HumanModel.BodyModel.Right.Leg.ModelParameters.Thigh.EpicondylusFemorisLateralis);
      //    AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,1,0};};
    };
    
    AnyRefNode Medial_TF ={
      sRel=.CustomMarkerScaling(Main.HumanModel.FemurLandmarks.TF_Med_Axis);
      //      AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,1,0};}; 
    };
    AnyRefNode Lateral_TF ={
      sRel=.CustomMarkerScaling(Main.HumanModel.FemurLandmarks.TF_Lat_Axis);
      //      AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,1,0};};
    };
    
    AnyRefNode Medial_TF_EFC = {
      sRel=.CustomMarkerScaling(Main.HumanModel.FemurLandmarks.Medial_TF_EFC);
      AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,0,1};};
      
    };
    AnyRefNode Medial_TF_FFC = {
      sRel= .CustomMarkerScaling(Main.HumanModel.FemurLandmarks.Medial_TF_FFC);
      //      AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={1,0,0};};
      
    };
    AnyRefNode Lateral_TF_EFC = {
      sRel= .CustomMarkerScaling(Main.HumanModel.FemurLandmarks.Lateral_TF_EFC);
      AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,0,1};};
      
    };  
    AnyRefNode TEMP_Lateral_TF_FFC = {
      sRel= .CustomMarkerScaling(Main.HumanModel.FemurLandmarks.Lateral_TF_FFC);
      //      AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,0,0};};
      
    };
    AnyRefNode Lateral_TF_FFC = {
      AnyVec3 sRel_us = (Main.HumanModel.FemurLandmarks.Medial_TF_FFC)+(..UnitVectors.e1*..UnitVectors.L1);
      sRel= .CustomMarkerScaling(sRel_us);
      //      AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={1,0,0};};
      
    };
    //    AnyRefNode InvisibleFemurRotationNode = {
    //      sRel = ...InvisibleFemur_TF.MA_AnatomicalFrame.sRel;
    //      ARel = .AOffset'*...InvisibleFemur_TF.MA_AnatomicalFrame.ARel;
    //      //          AnyDrawRefFrame drw ={};
    //    };
    //  };//Close MA_AnatomicalFrame
  };//Close Thigh Segment
  
  
  //    Main.HumanModel.BodyModel.Right.Leg.Seg = {
  //      AnySeg InvisibleFemur_TF = {
  //        AnyFunTransform3D &CustomMarkerScaling = Main.HumanModel.SubjectSpecificScaling.Right.Thigh.RegistrationTransform; 
  //        AnyFunTransform3D &Scale = Main.HumanModel.BodyModel.Right.Leg.Seg.Thigh.Scale; 
  //  
  //        Mass = 0;
  //        Jii = {0,0,0}; 
  //        r0 = .Thigh.r0+MA_AnatomicalFrame.rOffset*.Thigh.Axes0';
  //        Axes0 = .Thigh.Axes0*MA_AnatomicalFrame.AOffset;
  //        AnyDrawRefFrame drw ={ScaleXYZ=0.01*{1,1,1};RGB={1,0,0};};         
  //        
  //        AnyRefNode MA_AnatomicalFrame = {
  //          AnyMat33 AOffset = RotMat(.CustomMarkerScaling(Main.HumanModel.FemurLandmarks.Medial_TF_EFC),.CustomMarkerScaling(Main.HumanModel.FemurLandmarks.Lateral_TF_EFC),.CustomMarkerScaling(Main.HumanModel.BodyModel.Right.Leg.ModelParameters.Thigh.HipJoint))*RotMat(pi/2,y);
  //          AnyVec3 rOffset = (.CustomMarkerScaling(Main.HumanModel.FemurLandmarks.Medial_TF_EFC) + .CustomMarkerScaling(Main.HumanModel.FemurLandmarks.Lateral_TF_EFC))/2;
  //          AnyRefNode Medial_TF_EFC = {
  //            DEFINE_LOCAL_COORDINATE(Main.HumanModel.FemurLandmarks.Medial_TF_EFC)
  //            AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,0,1};};
  //          };
  //          AnyRefNode Medial_TF_FFC = {
  //            DEFINE_LOCAL_COORDINATE(Main.HumanModel.FemurLandmarks.Medial_TF_FFC)
  //            AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={1,0,0};};
  //          };
  //          AnyRefNode Lateral_TF_EFC = {
  //            DEFINE_LOCAL_COORDINATE(Main.HumanModel.FemurLandmarks.Lateral_TF_EFC)
  //            AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,0,1};};
  //          };  
  //          AnyRefNode TEMP_Lateral_TF_FFC = {
  //            DEFINE_LOCAL_COORDINATE(Main.HumanModel.FemurLandmarks.Lateral_TF_FFC)
  //            AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={1,1,1};};
  //          };
  //          AnyRefNode Lateral_TF_FFC = {
  //            AnyVec3 sRel_us= (Main.HumanModel.FemurLandmarks.Medial_TF_FFC)+(...UnitVectors.e1*...UnitVectors.L1);
  //            DEFINE_LOCAL_COORDINATE(sRel_us)
  //            AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={1,0,0};};
  //          };
  //        }; //MA Anatomical Frame node
  //      }; // Close InvisibleFemur_TF Segment
  //    };// Close Segment Folder
  
  Main.HumanModel.BodyModel.Right.Leg.Seg.Shank = { 
    AnyFunTransform3D &CustomMarkerScaling = Main.HumanModel.SubjectSpecificScaling.Right.Shank.RegTransform;
    
    AnyRefNode MedialTibiaEdge = {
      sRel = .CustomMarkerScaling(Main.HumanModel.TibiaLandmarks.MedialTibiaEdge);
      //        AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,1,0};};
    };
    AnyRefNode LateralTibiaEdge = {
      sRel = .CustomMarkerScaling(Main.HumanModel.TibiaLandmarks.LateralTibiaEdge);
      //        AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,1,0};};
    };
    AnyRefNode MedialTibiaIntercondylar = {
      sRel = .CustomMarkerScaling(Main.HumanModel.TibiaLandmarks.MedialTibiaIntercondylar);
      //        AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,1,0};};
    };
    
    AnyRefNode Medial_TF ={
      sRel=.CustomMarkerScaling(Main.HumanModel.FemurLandmarks.TF_Med_Axis);
      //      AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,1,0};}; 
    };
    AnyRefNode Lateral_TF ={
      sRel=.CustomMarkerScaling(Main.HumanModel.FemurLandmarks.TF_Lat_Axis);
      //      AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,1,0};};
    };
    
    AnyRefNode Medial_TF_EFC = {
      sRel =.CustomMarkerScaling(Main.HumanModel.FemurLandmarks.Medial_TF_EFC);
      AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,0,1};};
    };
    //      AnyRefNode Medial_TF_FFC = {
    //        sRel =.CustomMarkerScaling(Main.HumanModel.FemurLandmarks.Medial_TF_FFC);
    //        AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={1,0,0};};
    //      };
    
    AnyRefNode Lateral_TF_EFC = {
      sRel =.CustomMarkerScaling(Main.HumanModel.FemurLandmarks.Lateral_TF_EFC);
      AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,0,1};};
    };  

    //      AnyRefNode TEMP_Lateral_TF_FFC = {
    //        sRel =.CustomMarkerScaling(Main.HumanModel.FemurLandmarks.Lateral_TF_FFC);
    //        AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={1,1,1};};
    //      };
    
    //      AnyRefNode Lateral_TF_FFC = {
    //        AnyVec3 sRel_us = (Main.HumanModel.FemurLandmarks.Medial_TF_FFC)+(...UnitVectors.e1*...UnitVectors.L1);
    //        AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={1,0,0};};
    //      };
    
    //      AnyRefNode InvisibleFemurRotationNode = {
    //        sRel = ...InvisibleFemur_TF.MA_AnatomicalFrame.sRel;
    //        ARel = .AOffset'*...InvisibleFemur_TF.MA_AnatomicalFrame.ARel;
    //      };
  }; // close shank segment
  
  //  Main.HumanModel.BodyModel.Right.Leg.Seg = {    
  //    AnySeg InvisibleTibia = {
  //      AnyFunTransform3D &CustomMarkerScaling =Main.HumanModel.SubjectSpecificScaling.Right.Shank.RegistrationTransform;
  //      AnyFunTransform3D &Scale =Main.HumanModel.BodyModel.Right.Leg.Seg.Shank.Scale;
  //      Mass = 0;
  //      Jii = {0, 0, 0};
  //      r0 = .Shank.r0+MA_AnatomicalFrame.rOffset*.Shank.Axes0';
  //      Axes0 = .Shank.Axes0*MA_AnatomicalFrame.AOffset;
  //      AnyRefNode MA_AnatomicalFrame ={
  //        AnyMat33 AOffset = RotMat(.CustomMarkerScaling(Main.HumanModel.FemurLandmarks.Medial_TF_EFC),.CustomMarkerScaling(Main.HumanModel.FemurLandmarks.Lateral_TF_EFC),.CustomMarkerScaling(Main.HumanModel.BodyModel.Right.Leg.ModelParameters.Shank.AnkleJoint))*RotMat(pi/2,y);
  //        AnyVec3 rOffset = (.CustomMarkerScaling(Main.HumanModel.FemurLandmarks.Medial_TF_EFC)+.CustomMarkerScaling(Main.HumanModel.FemurLandmarks.Lateral_TF_EFC))/2;         
  //
  //        AnyRefNode Medial_TF_EFC = {
  //          DEFINE_LOCAL_COORDINATE(Main.HumanModel.FemurLandmarks.Medial_TF_EFC)
  //          AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,0,1};};
  //       };
  //        AnyRefNode Medial_TF_FFC = {
  //          DEFINE_LOCAL_COORDINATE(Main.HumanModel.FemurLandmarks.Medial_TF_FFC)
  //            AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={1,0,0};};
  //        };
  //        AnyRefNode Lateral_TF_EFC = {
  //          DEFINE_LOCAL_COORDINATE(Main.HumanModel.FemurLandmarks.Lateral_TF_EFC)
  //            AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={0,0,1};};
  //        };  
  //        AnyRefNode TEMP_Lateral_TF_FFC = {
  //          DEFINE_LOCAL_COORDINATE(Main.HumanModel.FemurLandmarks.Lateral_TF_FFC)
  //            AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={1,1,1};};
  //          };
  //        AnyRefNode Lateral_TF_FFC = {
  //          AnyVec3 sRel_us = (Main.HumanModel.FemurLandmarks.Medial_TF_FFC)+(...UnitVectors.e1*...UnitVectors.L1);
  //          DEFINE_LOCAL_COORDINATE(sRel_us)
  //            AnyDrawNode drw ={ScaleXYZ=0.002*{1,1,1};RGB={1,0,0};};
  //        }; 
  //      };//MA AnatomicalFrame Node
  //    }; // Close InvisibleTibia Segment
  //  }; // Close segment folder
  
  //  Main.HumanModel.BodyModel.Right.Leg.Jnt = {
  //    AnyRevoluteJoint Inv_TF = {
  //      Axis = z;
  //      AnyRefFrame &InvFemur = Main.HumanModel.BodyModel.Right.Leg.Seg.InvisibleFemur_TF;
  //      AnyRefFrame &InvTibia= Main.HumanModel.BodyModel.Right.Leg.Seg.InvisibleTibia;
  //      //      AnyDrawStdJoint drw = {};
  //    };
  //NOTE THESE  POINT USED TO BE IN MRI ANATOMICAL REFERENCE FRAME!
  //----------------------------------------------------------------           
  // Drivers for the movement of the femoral axis
  //----------------------------------------------------------------       
  //      AnyKinEq InvisibleFemurMedialEFCDriver = {
  //        AnyKinMeasureLinComb LinComb = {
  //          Coef = {{1.0,0.0,0.0,1.0/(pi/2.0)*(...Seg.Thigh.Medial_TF_FFC.sRel[0]-...Seg.Thigh.Medial_TF_EFC.sRel[0])},{0.0,1.0,0.0,1.0/(pi/2.0)*(...Seg.Thigh.Medial_TF_FFC.sRel[1]-...Seg.Thigh.Medial_TF_EFC.sRel[1])},{0.0,0.0,1.0,1.0/(pi/2.0)*(...Seg.Thigh.Medial_TF_FFC.sRel[2]-...Seg.Thigh.Medial_TF_EFC.sRel[2])}};
  //          Const ={0.0,0.0,0.0};
  //          AnyKinLinear FemurTrans = {
  //            Ref = 0;
  //            AnyRefFrame &ref1 = ....Seg.Thigh.Medial_TF_EFC;
  //            AnyRefFrame &ref2 = ....Seg.InvisibleFemur_TF.MA_AnatomicalFrame.Medial_TF_EFC;
  //          };
  //          AnyKinMeasure &KneeFlexion = ..Inv_TF;
  //          OutDim = 3;  
  //        };
  //      };
  //    
  //      AnyKinEq InvisibleFemurLateralEFCDriver = {
  //        AnyKinMeasureLinComb LinComb = {
  //          Coef = {{1.0,0.0,1.0/(pi/2.0)*(...Seg.Thigh.Lateral_TF_FFC.sRel[0]-...Seg.Thigh.Lateral_TF_EFC.sRel[0])},{0.0,1.0,1.0/(pi/2.0)*(...Seg.Thigh.Lateral_TF_FFC.sRel[1]-...Seg.Thigh.Lateral_TF_EFC.sRel[1])}};
  //          Const ={0.0,0.0};
  //          AnyKinMeasureOrg org = {
  //            AnyKinLinear FemurTrans = {
  //              Ref = 0; 
  //              AnyRefFrame &ref1 = .....Seg.Thigh.Lateral_TF_EFC;
  //              AnyRefFrame &ref2 = .....Seg.InvisibleFemur_TF.MA_AnatomicalFrame.Lateral_TF_EFC;
  //            };
  //            MeasureOrganizer = {0,1}; 
  //          };
  //          AnyKinMeasure &KneeFlexion = ..Inv_TF;
  //          OutDim = 2;  
  //        };
  //      };
  //    
  //      AnyKinEq InvisibleFemurZRot = { 
  //        AnyKinMeasureOrg org = {
  //          AnyKinRotational rot = {
  //            Type = RotAxesAngles;
  //            Axis1 = z;
  //            Axis2 = x;
  //            Axis3 = y;
  //            //There was an invisible rotation node on the thigh that avoided jumping
  //            AnyRefFrame &ref1 = ....Seg.Thigh;
  //            AnyRefFrame &ref2 = ....Seg.InvisibleFemur_TF.MA_AnatomicalFrame;          
  //          };
  //          MeasureOrganizer = {0};// 
  //        };
  //      };
  //    //----------------------------------------------------------------       
  //    // Drivers for the movement of the tibial axis
  //    //----------------------------------------------------------------       
  //    
  //      AnyKinEq InvisibleTibiaMedialEFCDriver = {
  //        AnyKinMeasureLinComb LinComb = {
  //          Coef = {{1.0,0.0,0.0,1.0/(pi/2.0)*(...Seg.Shank.Medial_TF_FFC.sRel[0]-...Seg.Shank.Medial_TF_EFC.sRel[0])},{0.0,1.0,0.0,1.0/(pi/2.0)*(...Seg.Shank.Medial_TF_FFC.sRel[1]-...Seg.Shank.Medial_TF_EFC.sRel[1])},{0.0,0.0,1.0,1.0/(pi/2.0)*(...Seg.Shank.Medial_TF_FFC.sRel[2]-...Seg.Shank.Medial_TF_EFC.sRel[2])}};
  //          Const ={0.0,0.0,0.0};
  //          AnyKinLinear TibiaTrans = {
  //            Ref = 0;
  //            AnyRefFrame &ref1 = ....Seg.Shank.Medial_TF_EFC;
  //            AnyRefFrame &ref2 = ....Seg.InvisibleTibia.MA_AnatomicalFrame.Medial_TF_EFC;
  //          };
  //          AnyKinMeasure &KneeFlexion = ..Inv_TF;
  //          OutDim = 3;  
  //        };
  //      };
  //    
  //      AnyKinEq InvisibleTibiaLateralEFCDriver = {
  //        AnyKinMeasureLinComb LinComb = {
  //          Coef = {{1.0,0.0,1.0/(pi/2.0)*(...Seg.Shank.Lateral_TF_FFC.sRel[0]-...Seg.Shank.Lateral_TF_EFC.sRel[0])},{0.0,1.0,1.0/(pi/2.0)*(...Seg.Shank.Lateral_TF_FFC.sRel[1]-...Seg.Shank.Lateral_TF_EFC.sRel[1])}};
  //          Const ={0.0,0.0};
  //          AnyKinMeasureOrg org = {
  //            AnyKinLinear TibiaTrans = {
  //              Ref = 0; 
  //              AnyRefFrame &ref1 = .....Seg.Shank.Lateral_TF_EFC;
  //              AnyRefFrame &ref2 = .....Seg.InvisibleTibia.MA_AnatomicalFrame.Lateral_TF_EFC;
  //            };
  //            MeasureOrganizer = {0,1};
  //          };
  //          AnyKinMeasure &KneeFlexion = ..Inv_TF;         
  //          OutDim = 2;  
  //        };
  //      };
  //    
  //      AnyKinEq InvisibleTibiaZRot = {
  //        AnyKinMeasureOrg org = {
  //          AnyKinRotational rot = {
  //            Type = RotAxesAngles;
  //            Axis1 = z;
  //            Axis2 = x;
  //            Axis3 = y;
  //            AnyRefFrame &ref1 = ....Seg.Shank;
  //            AnyRefFrame &ref2 = ....Seg.InvisibleTibia.MA_AnatomicalFrame;          
  //          };
  //          MeasureOrganizer = {0};
  //        };
  //      };
  //  };  
};


