
.. Do not edit this file. It is generated automatically 
   by body/AAUHuman/BuildTools/anyxdefs.bat

All BodyModel parameters
-------------------------


.. ammr:bm_statement:: BM_SCALING

    Definition of an anthropometric scaling law


    :Default: :ammr:bm_constant:`_SCALING_STANDARD_`
    :Example: ``#define BM_SCALING _SCALING_STANDARD_``
    :Options: - :any:`_SCALING_NONE_`: A scaling law to use body part datasets as is without any scaling.
              - :any:`_SCALING_STANDARD_`: A default scaling law that corresponds to the 50th percentile European male.
              - :any:`_SCALING_UNIFORM_`: Uniform anthropometric scaling law to be used by the entire model.
              - :any:`_SCALING_LENGTHMASS_`: Length/mass anthropometric scaling law to be used by the entire model.
              - :any:`_SCALING_LENGTHMASSFAT_`: Length/mass/fat anthropometric scaling law to be used by the entire model.
              - :any:`_SCALING_UNIFORM_EXTMEASUREMENTS_`: Uniform anthropometric scaling law  with external measurements to be used by the entire model.
              - :any:`_SCALING_LENGTHMASS_EXTMEASUREMENTS_`: Length/mass anthropometric with external measurements scaling law to be used by the entire model.
              - :any:`_SCALING_LENGTHMASSFAT_EXTMEASUREMENTS_`: Length/mass/fat anthropometric with external measurements scaling law to be used by the entire model.
              - :any:`_SCALING_XYZ_`: Scaling using xyz factors for all Segments.
              - :any:`_SCALING_USERDEFINED_`: Don't use a builtin scaling law. A user-defined law must be specified with ``BM_SCALING_FILE``.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_SCALING_ANTHRO_FILE

    Custom file with all anthropometric measurements used by the scaling law. This is some times called the AnyMan file.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_SCALING_MY_FILE
    :deprecated:

    Path with the ScalingLaw used. Can be set to override the BM_SCALING parameter and select a custom scaling law.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_SCALING_FILE

    Path with the ScalingLaw used. Can be set to override the BM_SCALING parameter and select a user defined scaling law.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_SCALING_STANDARDPARAM_EXTERIOR

    Specifies if the standard parameters and anthropometrics parameters are given as external measurements. This defaults to OFF, which means that all segment length are joint-joint distances. This is set automatically based on the ``BM_SCALING`` parameter, but can be overridden if you implement your own scaling law and need to use external mesaurements.


    :Default: ``OFF``
    :Example: ``#define BM_SCALING_STANDARDPARAM_EXTERIOR OFF``
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


|  
|   
| 
| 


.. ammr:bm_statement:: BM_CONFIG_MESSAGES

    Switch for automatic display of all configuration values


    :Default: ``OFF``
    :Example: ``#define BM_CONFIG_MESSAGES OFF``
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


|  
|   
| 
| 


.. ammr:bm_statement:: BM_CONFIG_VALUES

    Switch for enabling configuration value information in the model tree


    :Default: ``OFF``
    :Example: ``#define BM_CONFIG_VALUES OFF``
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


|  
|   
| 
| 


.. ammr:bm_statement:: BM_DRAWSETTINGS_FILE

    A file with draw settings


|  
|   
| 
| 


.. ammr:bm_statement:: BM_DRAWSETTINGS_SKIP

    A flag to switch on/off inclusion of the draw settings (may be needed in case of two human models)


    :Default: ``OFF``
    :Example: ``#define BM_DRAWSETTINGS_SKIP OFF``
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


|  
|   
| 
| 


.. ammr:bm_statement:: BM_FOOT_MODEL

    Parameter defining the foot model used.


    :Default: :ammr:bm_constant:`_FOOT_MODEL_DEFAULT_`
    :Example: ``#define BM_FOOT_MODEL _FOOT_MODEL_DEFAULT_``
    :Options: - :any:`_FOOT_MODEL_DEFAULT_`: Switch for using the default foot model
              - :any:`_FOOT_MODEL_NONE_`: Switch for using the GM foot model"


|  
|   
| 
| 


.. ammr:bm_statement:: BM_LEG_MODEL

    Parameter defining the Leg model used.


    :Default: :ammr:bm_constant:`_LEG_MODEL_TLEM2_`
    :Example: ``#define BM_LEG_MODEL _LEG_MODEL_TLEM2_``
    :Options: - :any:`OFF`: 
              - :any:`_LEG_MODEL_TLEM_`: Switch to use leg model: "TLEM 1"
              - :any:`_LEG_MODEL_TLEM2_`: Switch to use leg model: "TLEM 2"
              - :any:`_LEG_MODEL_LEG_`: Switch to use leg model: "Leg"


|  
|   
| 
| 


.. ammr:bm_statement:: BM_ARM_THORAX_SCAPULA_CONTACT

    Parameter defining the contact type between Thorax and Scapula


    :Default: :ammr:bm_constant:`_ELLIPSOID_CONTACT_`
    :Example: ``#define BM_ARM_THORAX_SCAPULA_CONTACT _ELLIPSOID_CONTACT_``
    :Options: - :any:`_ELLIPSOID_CONTACT_`: Switch for using ellipsoid contact between scapula and thorax
              - :any:`_MULTIPLE_POINT_CONTACT_`: Switch for using multiple point contact between scapula and thorax"


|  
|   
| 
| 


.. ammr:bm_statement:: BM_LEG_LEFT

    Parameter for switching the left leg On/Off. To control which leg model is used, please use the :any:`BM_LEG_MODEL` parameter.


    :Default: ``ON``
    :Example: ``#define BM_LEG_LEFT ON``
    :Options: - :any:`OFF`: 
              - :any:`ON`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_LEG_RIGHT

    Parameter for switching the right leg On/Off. To control which leg model is used, please use the :any:`BM_LEG_MODEL` parameter.


    :Default: ``ON``
    :Example: ``#define BM_LEG_RIGHT ON``
    :Options: - :any:`OFF`: 
              - :any:`ON`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_LEG_STRENGTH_INDEX

    Index parameter to specify muscle strength for lower extremities


    :Default: ``1.0``
    :Example: ``#define BM_LEG_STRENGTH_INDEX 1.0``

|  
|   
| 
| 


.. ammr:bm_statement:: BM_LEG_MUSCLES_BOTH

    Parameter to define muscle behavior of both right and left leg


    :Default: :ammr:bm_constant:`_MUSCLES_SIMPLE_`
    :Example: ``#define BM_LEG_MUSCLES_BOTH _MUSCLES_SIMPLE_``
    :Options: - :any:`OFF`: 
              - :any:`_MUSCLES_SIMPLE_`: Constant to use simple muscles
              - :any:`_MUSCLES_3E_HILL_`: Constant to use 3 element Hill-type muscle


|  
|   
| 
| 


.. ammr:bm_statement:: BM_LEG_MUSCLES_LEFT

    Parameter to define muscle behavior of the left leg


    :Default: :ammr:bm_statement:`BM_LEG_MUSCLES_BOTH`
    :Example: ``#define BM_LEG_MUSCLES_LEFT BM_LEG_MUSCLES_BOTH``
    :Options: - :any:`OFF`: 
              - :any:`_MUSCLES_SIMPLE_`: Constant to use simple muscles
              - :any:`_MUSCLES_3E_HILL_`: Constant to use 3 element Hill-type muscle
              - :any:`BM_LEG_MUSCLES_BOTH`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_LEG_MUSCLES_RIGHT

    Parameter to define muscle behavior of the right leg


    :Default: :ammr:bm_statement:`BM_LEG_MUSCLES_BOTH`
    :Example: ``#define BM_LEG_MUSCLES_RIGHT BM_LEG_MUSCLES_BOTH``
    :Options: - :any:`OFF`: 
              - :any:`_MUSCLES_SIMPLE_`: Constant to use simple muscles
              - :any:`_MUSCLES_3E_HILL_`: Constant to use 3 element Hill-type muscle
              - :any:`BM_LEG_MUSCLES_BOTH`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_LEG_DATASET

    Path to specify the underlying dataset. This currently only affects the TLEM based models. Valid options depends on which model (TLEM1/2) is used, and what dataset are available. If not specified, this will be configure automatically.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_LEG_MORPHOLOGY

    Parameter for the morphology method used by the Leg model. This currently only affects the TLEM based models.Valid options depends on which model (TLEM1/2) is used, and what dataset are available. If not specified, this will be configure automatically.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_TRUNK_DATASET

    Parameter to define a trunk model dataset.


    :Default: ``"TrunkData1.1"``
    :Example: ``#define BM_TRUNK_DATASET "TrunkData1.1"``

|  
|   
| 
| 


.. ammr:bm_statement:: BM_TRUNK_STRENGTH_INDEX

    Index parameter to specify strength for trunk muscles.


    :Default: ``1.0``
    :Example: ``#define BM_TRUNK_STRENGTH_INDEX 1.0``

|  
|   
| 
| 


.. ammr:bm_statement:: BM_TRUNK_MUSCLES

    Definition of the type of all spine muscles.


    :Default: :ammr:bm_constant:`_MUSCLES_SIMPLE_`
    :Example: ``#define BM_TRUNK_MUSCLES _MUSCLES_SIMPLE_``
    :Options: - :any:`OFF`: 
              - :any:`_MUSCLES_SIMPLE_`: Constant to use simple muscles


|  
|   
| 
| 


.. ammr:bm_statement:: BM_TRUNK_LUMBAR_MUSCLES

    Definition of the lumbar spine muscles type.


    :Default: :ammr:bm_statement:`BM_TRUNK_MUSCLES`
    :Example: ``#define BM_TRUNK_LUMBAR_MUSCLES BM_TRUNK_MUSCLES``
    :Options: - :any:`OFF`: 
              - :any:`_MUSCLES_SIMPLE_`: Constant to use simple muscles
              - :any:`BM_TRUNK_MUSCLES`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_TRUNK_CERVICAL_MUSCLES

    Definition of the cervical spine muscles type.


    :Default: ``OFF``
    :Example: ``#define BM_TRUNK_CERVICAL_MUSCLES OFF``
    :Options: - :any:`OFF`: 
              - :any:`_MUSCLES_SIMPLE_`: Constant to use simple muscles
              - :any:`BM_TRUNK_MUSCLES`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_TRUNK_DISC_STIFNESS

    Definition of the disc model of all spine parts.


    :Default: :ammr:bm_constant:`_DISC_STIFFNESS_NONE_`
    :Example: ``#define BM_TRUNK_DISC_STIFNESS _DISC_STIFFNESS_NONE_``
    :Options: - :any:`_DISC_STIFFNESS_NONE_`: Constant to switch off disc spring in the spine
              - :any:`_DISC_STIFFNESS_LINEAR_`: Constant to switch linear disc spring on in the spine
              - :any:`_DISC_STIFFNESS_NONLINEAR_`: Constant to switch nonlinear disc spring on in the spine


|  
|   
| 
| 


.. ammr:bm_statement:: BM_TRUNK_LUMBAR_DISC_STIFNESS

    Definition of the lumbar spine disc model.


    :Default: :ammr:bm_statement:`BM_TRUNK_DISC_STIFNESS`
    :Example: ``#define BM_TRUNK_LUMBAR_DISC_STIFNESS BM_TRUNK_DISC_STIFNESS``
    :Options: - :any:`_DISC_STIFFNESS_NONE_`: Constant to switch off disc spring in the spine
              - :any:`_DISC_STIFFNESS_LINEAR_`: Constant to switch linear disc spring on in the spine
              - :any:`_DISC_STIFFNESS_NONLINEAR_`: Constant to switch nonlinear disc spring on in the spine
              - :any:`BM_TRUNK_DISC_STIFNESS`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_TRUNK_CERVICAL_DISC_STIFNESS

    Definition of the cervical spine disc model.


    :Default: :ammr:bm_statement:`BM_TRUNK_DISC_STIFNESS`
    :Example: ``#define BM_TRUNK_CERVICAL_DISC_STIFNESS BM_TRUNK_DISC_STIFNESS``
    :Options: - :any:`_DISC_STIFFNESS_NONE_`: Constant to switch off disc spring in the spine
              - :any:`_DISC_STIFFNESS_LINEAR_`: Constant to switch linear disc spring on in the spine
              - :any:`_DISC_STIFFNESS_NONLINEAR_`: Constant to switch nonlinear disc spring on in the spine
              - :any:`BM_TRUNK_DISC_STIFNESS`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_TRUNK_RHYTHM

    A switch to use a kinematic rhythm for the whole spine. ON indicate that the rhythm is a hard contraint while _RHYTHM_SOFT_ will make the rhythm as soft kinematic contraint.


    :Default: ``ON``
    :Example: ``#define BM_TRUNK_RHYTHM ON``
    :Options: - :any:`OFF`: 
              - :any:`ON`: 
              - :any:`_RHYTHM_SOFT_`: Constant to switch kinematic rhythms as soft contraints


|  
|   
| 
| 


.. ammr:bm_statement:: BM_TRUNK_LUMBAR_RHYTHM

    A switch to use a kinematic rhythm for the lumbar spine. ON indicate that the rhythm is a hard contraint while _RHYTHM_SOFT_ will make the rhythm as soft kinematic contraint.


    :Default: :ammr:bm_statement:`BM_TRUNK_RHYTHM`
    :Example: ``#define BM_TRUNK_LUMBAR_RHYTHM BM_TRUNK_RHYTHM``
    :Options: - :any:`OFF`: 
              - :any:`ON`: 
              - :any:`_RHYTHM_SOFT_`: Constant to switch kinematic rhythms as soft contraints


|  
|   
| 
| 


.. ammr:bm_statement:: BM_TRUNK_CERVICAL_RHYTHM

    A switch to use a kinematic rhythm for the cervical spine. ON indicate that the rhythm is a hard contraint while _RHYTHM_SOFT_ will make the rhythm as soft kinematic contraint.


    :Default: :ammr:bm_statement:`BM_TRUNK_RHYTHM`
    :Example: ``#define BM_TRUNK_CERVICAL_RHYTHM BM_TRUNK_RHYTHM``
    :Options: - :any:`OFF`: 
              - :any:`ON`: 
              - :any:`_RHYTHM_SOFT_`: Constant to switch kinematic rhythms as soft contraints


|  
|   
| 
| 


.. ammr:bm_statement:: BM_TRUNK_LIGAMENTS

    A switch to control all the ligaments in the spine.


    :Default: ``OFF``
    :Example: ``#define BM_TRUNK_LIGAMENTS OFF``
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


|  
|   
| 
| 


.. ammr:bm_statement:: BM_TRUNK_LUMBAR_LIGAMENTS

    A switch to control the lumbar spine ligaments.


    :Default: :ammr:bm_statement:`BM_TRUNK_LIGAMENTS`
    :Example: ``#define BM_TRUNK_LUMBAR_LIGAMENTS BM_TRUNK_LIGAMENTS``

|  
|   
| 
| 


.. ammr:bm_statement:: BM_ARM_STRENGTH_INDEX

    Index parameter to specify muscle strength for upper extremities.


    :Default: ``1.0``
    :Example: ``#define BM_ARM_STRENGTH_INDEX 1.0``

|  
|   
| 
| 


.. ammr:bm_statement:: BM_ARM_LEFT

    Switch for the left arm model being present or not.


    :Default: ``ON``
    :Example: ``#define BM_ARM_LEFT ON``
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


|  
|   
| 
| 


.. ammr:bm_statement:: BM_ARM_DETAIL_HAND_LEFT
    :deprecated:

    Keyword for the type of left hand.


    :Default: ``OFF``
    :Example: ``#define BM_ARM_DETAIL_HAND_LEFT OFF``
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


|  
|   
| 
| 


.. ammr:bm_statement:: BM_ARM_SHOULDER_RHYTHM_LEFT
    :deprecated:

    Switch for the shoulder rhythm constraints for the left arm being present or not.


    :Default: ``OFF``
    :Example: ``#define BM_ARM_SHOULDER_RHYTHM_LEFT OFF``
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


|  
|   
| 
| 


.. ammr:bm_statement:: BM_ARM_RIGHT

    Switch for the right arm model being present or not.


    :Default: ``ON``
    :Example: ``#define BM_ARM_RIGHT ON``
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


|  
|   
| 
| 


.. ammr:bm_statement:: BM_ARM_DETAIL_HAND_RIGHT
    :deprecated:

    Keyword for the type of right hand.


    :Default: ``OFF``
    :Example: ``#define BM_ARM_DETAIL_HAND_RIGHT OFF``
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


|  
|   
| 
| 


.. ammr:bm_statement:: BM_ARM_SHOULDER_RHYTHM_RIGHT
    :deprecated:

    Switch for the shoulder rhythm constraints for the right arm being present or not.


    :Default: ``OFF``
    :Example: ``#define BM_ARM_SHOULDER_RHYTHM_RIGHT OFF``
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


|  
|   
| 
| 


.. ammr:bm_statement:: BM_ARM_SHOULDER_RHYTHM

    Switch for the shoulder rhythm constraints. ON indicate that the rhythm is a hard contraint while _RHYTHM_SOFT_ will make the rhythm as soft kinematic contraint.


    :Default: ``OFF``
    :Example: ``#define BM_ARM_SHOULDER_RHYTHM OFF``
    :Options: - :any:`OFF`: 
              - :any:`ON`: 
              - :any:`_RHYTHM_SOFT_`: Constant to switch kinematic rhythms as soft contraints


|  
|   
| 
| 


.. ammr:bm_statement:: BM_ARM_CLAVICULA_ROTATION_RHYTHM

    Switch for the clavicula rotation rhythm. If enabled axial rotation of the clavicula will be distributed evenly between the sterno-clavicula and acromio-clavicula joint. Effectively removing clavicula axial rotation as an independent degree of freedom.resterno-clavicula axial rotation.


    :Default: ``ON``
    :Example: ``#define BM_ARM_CLAVICULA_ROTATION_RHYTHM ON``
    :Options: - :any:`OFF`: 
              - :any:`ON`: 
              - :any:`_RHYTHM_SOFT_`: Constant to switch kinematic rhythms as soft contraints


|  
|   
| 
| 


.. ammr:bm_statement:: BM_ARM_DETAILED_HAND

    Switch for enabling the detailed hand.


    :Default: ``OFF``
    :Example: ``#define BM_ARM_DETAILED_HAND OFF``
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


|  
|   
| 
| 


.. ammr:bm_statement:: BM_ARM_DELTOID_WRAPPING

    Switch for deltoid wrapping. Setting this to OFF or _DELTOID_WRAPPING_RAKE_ will revert to the older rake based implementation of the deltoid.


    :Default: :ammr:bm_constant:`_DELTOID_WRAPPING_ELIPSOIDS_`
    :Example: ``#define BM_ARM_DELTOID_WRAPPING _DELTOID_WRAPPING_ELIPSOIDS_``
    :Options: - :any:`_DELTOID_WRAPPING_RAKE_`: Switch for using pre AMMR 2.2. rake implementation for deltoid wrapping
              - :any:`_DELTOID_WRAPPING_ELIPSOIDS_`: Switch for using multiple elipsoids in the deltoid wrapping"
              - :any:`_DELTOID_WRAPPING_CYLINDERS_`: Switch for using mulitple cylinder in the deltroid wrapping


|  
|   
| 
| 


.. ammr:bm_statement:: BM_ARM_MUSCLES_BOTH

    Keyword for the muscle model type for both left and right arms.


    :Default: :ammr:bm_constant:`_MUSCLES_SIMPLE_`
    :Example: ``#define BM_ARM_MUSCLES_BOTH _MUSCLES_SIMPLE_``
    :Options: - :any:`OFF`: 
              - :any:`_MUSCLES_SIMPLE_`: Constant to use simple muscles
              - :any:`_MUSCLES_3E_HILL_`: Constant to use 3 element Hill-type muscle


|  
|   
| 
| 


.. ammr:bm_statement:: BM_ARM_MUSCLES_LEFT

    Keyword for the muscle model type for the left arm.


    :Default: :ammr:bm_statement:`BM_ARM_MUSCLES_BOTH`
    :Example: ``#define BM_ARM_MUSCLES_LEFT BM_ARM_MUSCLES_BOTH``
    :Options: - :any:`OFF`: 
              - :any:`_MUSCLES_SIMPLE_`: Constant to use simple muscles
              - :any:`_MUSCLES_3E_HILL_`: Constant to use 3 element Hill-type muscle
              - :any:`BM_ARM_MUSCLES_BOTH`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_ARM_MUSCLES_RIGHT

    Keyword for the muscle model for both the right arm.


    :Default: :ammr:bm_statement:`BM_ARM_MUSCLES_BOTH`
    :Example: ``#define BM_ARM_MUSCLES_RIGHT BM_ARM_MUSCLES_BOTH``
    :Options: - :any:`OFF`: 
              - :any:`_MUSCLES_SIMPLE_`: Constant to use simple muscles
              - :any:`_MUSCLES_3E_HILL_`: Constant to use 3 element Hill-type muscle
              - :any:`BM_ARM_MUSCLES_BOTH`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_PELVIS_DISPLAY

    Keyword for pelvis display setting.


    :Default: :ammr:bm_constant:`_PELVIS_DISPLAY_LEGPELVIS_ONLY_`
    :Example: ``#define BM_PELVIS_DISPLAY _PELVIS_DISPLAY_LEGPELVIS_ONLY_``
    :Options: - :any:`_PELVIS_DISPLAY_NONE_`: Constant to switch off pelvis visualization
              - :any:`_PELVIS_DISPLAY_LEGPELVIS_ONLY_`: Constant to display leg-dependent pevlis only
              - :any:`_PELVIS_DISPLAY_LEGANDTRUNKPELVIS_`: Constant to display both trunk and leg pelvises


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_FILE

    File name of the mannequin definition file. By default this is no longer used, since the values in ``HumanModel.Mannequin`` can be assigned directly in your applicaiton ( E.g. ``Main.HumanModel.Mannequin.Posture.NeckExtension = 30;``). However, the parameter can still be used to set your own mannequin file. Just define your own mannequin file in your applicaiton like this: ``#path BM_MANNEQUIN_FILE "<ANYBODY_PATH_BODY>\BodyModels\GenericBodyModel\BodyModel.mannequin.any";``


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_DEFAULT

    Setting of the default value for all mannequin drivers.


    :Default: ``ON``
    :Example: ``#define BM_MANNEQUIN_DRIVER_DEFAULT ON``
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_WEAK_SWITCH

    By default constraint type of mannequin drivers will be soft.


    :Default: ``ON``
    :Example: ``#define BM_MANNEQUIN_DRIVER_WEAK_SWITCH ON``
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


|  
|   
| 
| 


.. ammr:bm_statement:: BM_LEG_TRUNK_INTERFACE

    Keyword for the interface morhping between the trunk and the leg pelvis segments.


    :Default: :ammr:bm_constant:`_MORPH_TRUNK_TO_LEG_`
    :Example: ``#define BM_LEG_TRUNK_INTERFACE _MORPH_TRUNK_TO_LEG_``
    :Options: - :any:`_MORPH_TRUNK_TO_LEG_`: Constant for the trunk-to-leg morphing
              - :any:`_MORPH_LEG_TO_TRUNK_`: Constant for the leg-to-trunk morhping
              - :any:`_MORPH_NONE_`: Constant for no-morphing between the upper and lower bodies.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_CALIBRATION_TYPE

    Parameter to choose type of muscle tendon calibration


    :Default: :ammr:bm_constant:`_CALIBRATION_TYPE_1PAR_`
    :Example: ``#define BM_CALIBRATION_TYPE _CALIBRATION_TYPE_1PAR_``
    :Options: - :any:`_CALIBRATION_TYPE_1PAR_`: Constant to use 1 parameter muscle tendon calibration
              - :any:`_CALIBRATION_TYPE_2PAR_`: Constant to use 2 parameter muscle tendon calibration
              - :any:`_CALIBRATION_TYPE_CUSTOM_`: Use custom calibration. I.e. diables calibration so the user can add their own code.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_POS_X

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_PELVIS_POS_X BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_POS_Y

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_PELVIS_POS_Y BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_POS_Z

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_PELVIS_POS_Z BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_ROT_Z

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_PELVIS_ROT_Z BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_ROT_Y

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_PELVIS_ROT_Y BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_ROT_X

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_PELVIS_ROT_X BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_NECK

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_NECK BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_SKULL_THORAX_FLEXION

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_NECK`
    :Example: ``#define BM_MANNEQUIN_DRIVER_SKULL_THORAX_FLEXION BM_MANNEQUIN_DRIVER_NECK``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_SKULL_THORAX_LATERALBENDING

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_NECK`
    :Example: ``#define BM_MANNEQUIN_DRIVER_SKULL_THORAX_LATERALBENDING BM_MANNEQUIN_DRIVER_NECK``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_SKULL_THORAX_ROTATION

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_NECK`
    :Example: ``#define BM_MANNEQUIN_DRIVER_SKULL_THORAX_ROTATION BM_MANNEQUIN_DRIVER_NECK``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_THORAX_LATERAL_BENDING

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_PELVIS_THORAX_LATERAL_BENDING BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_THORAX_ROTATION

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_PELVIS_THORAX_ROTATION BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_THORAX_EXTENSION

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_PELVIS_THORAX_EXTENSION BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT

    Switch for all the mannequin drivers for the sterno clavicular degrees of freedom.


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_PROTRACTION_RIGHT

    Switch for the mannequin driver being active or not.


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_PROTRACTION_RIGHT BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_ELEVATION_RIGHT

    Switch for the mannequin driver being active or not.


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_ELEVATION_RIGHT BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_AXIAL_ROTATION_RIGHT

    Switch for the mannequin driver being active or not.


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_AXIAL_ROTATION_RIGHT BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_RIGHT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_RIGHT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_RIGHT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ELBOW_FLEXION_RIGHT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_ELBOW_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ELBOW_PRONATION_RIGHT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_ELBOW_PRONATION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_WRIST_FLEXION_RIGHT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_WRIST_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_RIGHT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_HAND_RIGHT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_HAND_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT

    Switch for all the mannequin drivers for the sterno clavicular degrees of freedom.


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_PROTRACTION_LEFT

    Switch for the mannequin driver being active or not.


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_PROTRACTION_LEFT BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_ELEVATION_LEFT

    Switch for the mannequin driver being active or not.


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_ELEVATION_LEFT BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_AXIAL_ROTATION_LEFT

    Switch for the mannequin driver being active or not.


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_STERNOCLAVICULAR_AXIAL_ROTATION_LEFT BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_LEFT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_LEFT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_LEFT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ELBOW_FLEXION_LEFT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_ELBOW_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ELBOW_PRONATION_LEFT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_ELBOW_PRONATION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_WRIST_FLEXION_LEFT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_WRIST_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_LEFT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_HAND_LEFT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_HAND_LEFT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_HIP_FLEXION_RIGHT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_HIP_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_RIGHT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_HIP_ABDUCTION_RIGHT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_HIP_ABDUCTION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_KNEE_FLEXION_RIGHT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_KNEE_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ANKLE_FLEXION_RIGHT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_ANKLE_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_RIGHT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_RIGHT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_HIP_FLEXION_LEFT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_HIP_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_LEFT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_HIP_ABDUCTION_LEFT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_HIP_ABDUCTION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_KNEE_FLEXION_LEFT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_KNEE_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ANKLE_FLEXION_LEFT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_ANKLE_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_LEFT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_LEFT

    Switch for the mannequin driver being active or not


    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: ``#define BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT``
    :Options: - :any:`ON`: 
              - :any:`OFF`: 
              - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 


|  
|   
| 
| 


.. ammr:bm_statement:: BM_JOINT_TYPE_HIP_RIGHT

    Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually.


    :Default: :ammr:bm_constant:`_JOINT_TYPE_DEFAULT_`
    :Example: ``#define BM_JOINT_TYPE_HIP_RIGHT _JOINT_TYPE_DEFAULT_``
    :Options: - :any:`_JOINT_TYPE_DEFAULT_`: Default joint definition.
              - :any:`_JOINT_TYPE_USERDEFINED_`: User-defined joint. This will exclude the joint and which nodes.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_JOINT_TYPE_HIP_LEFT

    Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually.


    :Default: :ammr:bm_constant:`_JOINT_TYPE_DEFAULT_`
    :Example: ``#define BM_JOINT_TYPE_HIP_LEFT _JOINT_TYPE_DEFAULT_``
    :Options: - :any:`_JOINT_TYPE_DEFAULT_`: Default joint definition.
              - :any:`_JOINT_TYPE_USERDEFINED_`: User-defined joint. This will exclude the joint and which nodes.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_JOINT_TYPE_KNEE_RIGHT

    Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually.


    :Default: :ammr:bm_constant:`_JOINT_TYPE_DEFAULT_`
    :Example: ``#define BM_JOINT_TYPE_KNEE_RIGHT _JOINT_TYPE_DEFAULT_``
    :Options: - :any:`_JOINT_TYPE_DEFAULT_`: Default joint definition.
              - :any:`_JOINT_TYPE_BONY_LANDMARK_`: Joint definition based on bony landmarks. This will create a joint which resembles what is often used in traditional gait analysis. (E.g. revolute knee joint along the femoral condyles).
              - :any:`_JOINT_TYPE_USERDEFINED_`: User-defined joint. This will exclude the joint and which nodes.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_JOINT_TYPE_KNEE_LEFT

    Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually.


    :Default: :ammr:bm_constant:`_JOINT_TYPE_DEFAULT_`
    :Example: ``#define BM_JOINT_TYPE_KNEE_LEFT _JOINT_TYPE_DEFAULT_``
    :Options: - :any:`_JOINT_TYPE_DEFAULT_`: Default joint definition.
              - :any:`_JOINT_TYPE_BONY_LANDMARK_`: Joint definition based on bony landmarks. This will create a joint which resembles what is often used in traditional gait analysis. (E.g. revolute knee joint along the femoral condyles).
              - :any:`_JOINT_TYPE_USERDEFINED_`: User-defined joint. This will exclude the joint and which nodes.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_JOINT_TYPE_PATELLOFEMORAL_RIGHT

    Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually.


    :Default: :ammr:bm_constant:`_JOINT_TYPE_DEFAULT_`
    :Example: ``#define BM_JOINT_TYPE_PATELLOFEMORAL_RIGHT _JOINT_TYPE_DEFAULT_``
    :Options: - :any:`_JOINT_TYPE_DEFAULT_`: Default joint definition.
              - :any:`_JOINT_TYPE_BONY_LANDMARK_`: Joint definition based on bony landmarks. This will create a joint which resembles what is often used in traditional gait analysis. (E.g. revolute knee joint along the femoral condyles).
              - :any:`_JOINT_TYPE_USERDEFINED_`: User-defined joint. This will exclude the joint and which nodes.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_JOINT_TYPE_PATELLOFEMORAL_LEFT

    Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually.


    :Default: :ammr:bm_constant:`_JOINT_TYPE_DEFAULT_`
    :Example: ``#define BM_JOINT_TYPE_PATELLOFEMORAL_LEFT _JOINT_TYPE_DEFAULT_``
    :Options: - :any:`_JOINT_TYPE_DEFAULT_`: Default joint definition.
              - :any:`_JOINT_TYPE_BONY_LANDMARK_`: Joint definition based on bony landmarks. This will create a joint which resembles what is often used in traditional gait analysis. (E.g. revolute knee joint along the femoral condyles).
              - :any:`_JOINT_TYPE_USERDEFINED_`: User-defined joint. This will exclude the joint and which nodes.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_JOINT_TYPE_ANKLE_RIGHT

    Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually.


    :Default: :ammr:bm_constant:`_JOINT_TYPE_DEFAULT_`
    :Example: ``#define BM_JOINT_TYPE_ANKLE_RIGHT _JOINT_TYPE_DEFAULT_``
    :Options: - :any:`_JOINT_TYPE_DEFAULT_`: Default joint definition.
              - :any:`_JOINT_TYPE_BONY_LANDMARK_`: Joint definition based on bony landmarks. This will create a joint which resembles what is often used in traditional gait analysis. (E.g. revolute knee joint along the femoral condyles).
              - :any:`_JOINT_TYPE_USERDEFINED_`: User-defined joint. This will exclude the joint and which nodes.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_JOINT_TYPE_ANKLE_LEFT

    Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually.


    :Default: :ammr:bm_constant:`_JOINT_TYPE_DEFAULT_`
    :Example: ``#define BM_JOINT_TYPE_ANKLE_LEFT _JOINT_TYPE_DEFAULT_``
    :Options: - :any:`_JOINT_TYPE_DEFAULT_`: Default joint definition.
              - :any:`_JOINT_TYPE_BONY_LANDMARK_`: Joint definition based on bony landmarks. This will create a joint which resembles what is often used in traditional gait analysis. (E.g. revolute knee joint along the femoral condyles).
              - :any:`_JOINT_TYPE_USERDEFINED_`: User-defined joint. This will exclude the joint and which nodes.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_JOINT_TYPE_SUBTALAR_RIGHT

    Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually.


    :Default: :ammr:bm_constant:`_JOINT_TYPE_DEFAULT_`
    :Example: ``#define BM_JOINT_TYPE_SUBTALAR_RIGHT _JOINT_TYPE_DEFAULT_``
    :Options: - :any:`_JOINT_TYPE_DEFAULT_`: Default joint definition.
              - :any:`_JOINT_TYPE_BONY_LANDMARK_`: Joint definition based on bony landmarks. This will create a joint which resembles what is often used in traditional gait analysis. (E.g. revolute knee joint along the femoral condyles).
              - :any:`_JOINT_TYPE_USERDEFINED_`: User-defined joint. This will exclude the joint and which nodes.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_JOINT_TYPE_SUBTALAR_LEFT

    Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually.


    :Default: :ammr:bm_constant:`_JOINT_TYPE_DEFAULT_`
    :Example: ``#define BM_JOINT_TYPE_SUBTALAR_LEFT _JOINT_TYPE_DEFAULT_``
    :Options: - :any:`_JOINT_TYPE_DEFAULT_`: Default joint definition.
              - :any:`_JOINT_TYPE_BONY_LANDMARK_`: Joint definition based on bony landmarks. This will create a joint which resembles what is often used in traditional gait analysis. (E.g. revolute knee joint along the femoral condyles).
              - :any:`_JOINT_TYPE_USERDEFINED_`: User-defined joint. This will exclude the joint and which nodes.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_JOINT_TYPE_PATELLATENDON_RIGHT

    Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually.


    :Default: :ammr:bm_constant:`_JOINT_TYPE_DEFAULT_`
    :Example: ``#define BM_JOINT_TYPE_PATELLATENDON_RIGHT _JOINT_TYPE_DEFAULT_``
    :Options: - :any:`_JOINT_TYPE_DEFAULT_`: Default joint definition.
              - :any:`_JOINT_TYPE_BONY_LANDMARK_`: Joint definition based on bony landmarks. This will create a joint which resembles what is often used in traditional gait analysis. (E.g. revolute knee joint along the femoral condyles).
              - :any:`_JOINT_TYPE_USERDEFINED_`: User-defined joint. This will exclude the joint and which nodes.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_JOINT_TYPE_PATELLATENDON_LEFT

    Parameter for switching between different joint types. Can also be used to completely exclude the joint, which then must be re-implemented manually.


    :Default: :ammr:bm_constant:`_JOINT_TYPE_DEFAULT_`
    :Example: ``#define BM_JOINT_TYPE_PATELLATENDON_LEFT _JOINT_TYPE_DEFAULT_``
    :Options: - :any:`_JOINT_TYPE_DEFAULT_`: Default joint definition.
              - :any:`_JOINT_TYPE_BONY_LANDMARK_`: Joint definition based on bony landmarks. This will create a joint which resembles what is often used in traditional gait analysis. (E.g. revolute knee joint along the femoral condyles).
              - :any:`_JOINT_TYPE_USERDEFINED_`: User-defined joint. This will exclude the joint and which nodes.


|  
|   
| 
| 


.. ammr:bm_statement:: BM_GLOBAL_REFERENCE_FRAME_SWITCH

    A switch to use different ref. frame than the default global reference frame


    :Default: ``OFF``
    :Example: ``#define BM_GLOBAL_REFERENCE_FRAME_SWITCH OFF``
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


|  
|   
| 
| 


.. ammr:bm_statement:: BM_GLOBAL_REFERENCE_FRAME

    An object path leading to the selected global reference frame


    :Default: ``..GenericGlobalRefFrame``
    :Example: ``#define BM_GLOBAL_REFERENCE_FRAME ..GenericGlobalRefFrame``

|  
|   
| 
| 
