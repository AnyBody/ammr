
.. Do not edit this file. It is generated automatically 
   by body/AAUHuman/BuildTools/anyxdefs.bat

Body model statements
---------------------


.. ammr:bm_statement:: BM_SCALING

    Definition of an anthropometric scaling law

    :Default: :ammr:bm_constant:`CONST_SCALING_STANDARD`
    :Example: :anyscript:`#define BM_SCALING CONST_SCALING_STANDARD`
    :Options: - :any:`CONST_SCALING_CUSTOM`: Custom anthropometric scaling law for the entire model
              - :any:`CONST_SCALING_STANDARD`: Standard scaling law to be used by the entire model.
              - :any:`CONST_SCALING_UNIFORM`: Uniform anthropometric scaling law to be used by the entire model.
              - :any:`CONST_SCALING_LENGTHMASS`: Length/mass anthropometric scaling law to be used by the entire model.
              - :any:`CONST_SCALING_LENGTHMASSFAT`: Length/mass/fat anthropometric scaling law to be used by the entire model.
              - :any:`CONST_SCALING_UNIFORM_EXTMEASUREMENTS`: Uniform anthropometric scaling law  with external measurements to be used by the entire model.
              - :any:`CONST_SCALING_LENGTHMASS_EXTMEASUREMENTS`: Length/mass anthropometric with external measurements scaling law to be used by the entire model.
              - :any:`CONST_SCALING_LENGTHMASSFAT_EXTMEASUREMENTS`: Length/mass/fat anthropometric with external measurements scaling law to be used by the entire model.


.. ammr:bm_statement:: BM_SCALING_ANTHRO_FILE

    File with all anthropometric measurements

    :Default: ``"<ANYBODY_PATH_BODY>\BodyModels\GenericBodyModel\BodyModel.AnyMan.any"``
    :Example: :anyscript:`#path BM_SCALING_ANTHRO_FILE "<ANYBODY_PATH_BODY>\BodyModels\GenericBodyModel\BodyModel.AnyMan.any"`

.. ammr:bm_statement:: BM_SCALING_MY_FILE

    Custom anthopometric scaling law, used when BM_SCALING is CONST_SCALING_CUSTOM.

    :Default: ``"<ANYBODY_PATH_BODY>\Scaling\MyScalingLaw.any"``
    :Example: :anyscript:`#path BM_SCALING_MY_FILE "<ANYBODY_PATH_BODY>\Scaling\MyScalingLaw.any"`

.. ammr:bm_statement:: BM_CONFIG_MESSAGES

    Switch for automatic display of all configuration values

    :Default: ``OFF``
    :Example: :anyscript:`#define BM_CONFIG_MESSAGES OFF`
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


.. ammr:bm_statement:: BM_CONFIG_VALUES

    Switch for enabling configuration value information in the model tree

    :Default: ``OFF``
    :Example: :anyscript:`#define BM_CONFIG_VALUES OFF`
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


.. ammr:bm_statement:: BM_DRAWSETTINGS_FILE

    A file with draw settings

    :Default: ``"<ANYBODY_PATH_BODY>\DrawSettings\DrawSettings.any"``
    :Example: :anyscript:`#path BM_DRAWSETTINGS_FILE "<ANYBODY_PATH_BODY>\DrawSettings\DrawSettings.any"`

.. ammr:bm_statement:: BM_DRAWSETTINGS_SKIP

    A flag to switch on/off inclusion of the draw settings (may be needed in case of two human models)

    :Default: ``OFF``
    :Example: :anyscript:`#define BM_DRAWSETTINGS_SKIP OFF`
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


.. ammr:bm_statement:: BM_LEG_LEFT

    Switch defining left leg model and its presence

    :Default: :ammr:bm_constant:`CONST_LEG_MODEL_TLEM`
    :Example: :anyscript:`#define BM_LEG_LEFT CONST_LEG_MODEL_TLEM`
    :Options: - :any:`CONST_LEG_MODEL_OFF`: Switch off a leg
              - :any:`CONST_LEG_MODEL_Leg`: Switch to use leg model: "Leg"
              - :any:`CONST_LEG_MODEL_TLEM`: Switch to use leg model: "TLEM"


.. ammr:bm_statement:: BM_LEG_RIGHT

    Switch defining right leg model and its presence

    :Default: :ammr:bm_constant:`CONST_LEG_MODEL_TLEM`
    :Example: :anyscript:`#define BM_LEG_RIGHT CONST_LEG_MODEL_TLEM`
    :Options: - :any:`CONST_LEG_MODEL_OFF`: Switch off a leg
              - :any:`CONST_LEG_MODEL_Leg`: Switch to use leg model: "Leg"
              - :any:`CONST_LEG_MODEL_TLEM`: Switch to use leg model: "TLEM"


.. ammr:bm_statement:: BM_LEG_STRENGTH_INDEX

    Index parameter to specify muscle strength for lower extremities

    :Default: ``1.0``
    :Example: :anyscript:`#define BM_LEG_STRENGTH_INDEX 1.0`

.. ammr:bm_statement:: BM_LEG_MUSCLES_BOTH

    Parameter to define muscle behavior of both right and left leg

    :Default: :ammr:bm_constant:`CONST_MUSCLES_SIMPLE`
    :Example: :anyscript:`#define BM_LEG_MUSCLES_BOTH CONST_MUSCLES_SIMPLE`
    :Options: - :any:`CONST_MUSCLES_NONE`: Constant to switch off muscles
              - :any:`CONST_MUSCLES_SIMPLE`: Constant to use simple muscles
              - :any:`CONST_MUSCLES_3E_HILL`: Constant to use 3 element Hill-type muscle


.. ammr:bm_statement:: BM_LEG_MUSCLES_LEFT

    Parameter to define muscle behavior of the left leg

    :Default: :ammr:bm_statement:`BM_LEG_MUSCLES_BOTH`
    :Example: :anyscript:`#define BM_LEG_MUSCLES_LEFT BM_LEG_MUSCLES_BOTH`
    :Options: - :any:`BM_LEG_MUSCLES_BOTH`: 
              - :any:`CONST_MUSCLES_NONE`: Constant to switch off muscles
              - :any:`CONST_MUSCLES_SIMPLE`: Constant to use simple muscles
              - :any:`CONST_MUSCLES_3E_HILL`: Constant to use 3 element Hill-type muscle


.. ammr:bm_statement:: BM_LEG_MUSCLES_RIGHT

    Parameter to define muscle behavior of the right leg

    :Default: :ammr:bm_statement:`BM_LEG_MUSCLES_BOTH`
    :Example: :anyscript:`#define BM_LEG_MUSCLES_RIGHT BM_LEG_MUSCLES_BOTH`
    :Options: - :any:`BM_LEG_MUSCLES_BOTH`: 
              - :any:`CONST_MUSCLES_NONE`: Constant to switch off muscles
              - :any:`CONST_MUSCLES_SIMPLE`: Constant to use simple muscles
              - :any:`CONST_MUSCLES_3E_HILL`: Constant to use 3 element Hill-type muscle


.. ammr:bm_statement:: TLEM_VERSION

    Parameter for the TLEM model version.

    :Default: ``"1.1"``
    :Example: :anyscript:`#define TLEM_VERSION "1.1"`

.. ammr:bm_statement:: TLEM_MORPHOLOGY

    Parameter for the morphology method for the TLEM model.

    :Default: ``1``
    :Example: :anyscript:`#define TLEM_MORPHOLOGY 1`

.. ammr:bm_statement:: BM_TRUNK_DATASET

    Parameter to define a trunk model dataset.

    :Default: ``"TrunkData1.1"``
    :Example: :anyscript:`#define BM_TRUNK_DATASET "TrunkData1.1"`

.. ammr:bm_statement:: BM_TRUNK_STRENGTH_INDEX

    Index parameter to specify strength for trunk muscles.

    :Default: ``1.0``
    :Example: :anyscript:`#define BM_TRUNK_STRENGTH_INDEX 1.0`

.. ammr:bm_statement:: BM_TRUNK_MUSCLES

    Definition of the type of all spine muscles.

    :Default: :ammr:bm_constant:`CONST_MUSCLES_SIMPLE`
    :Example: :anyscript:`#define BM_TRUNK_MUSCLES CONST_MUSCLES_SIMPLE`
    :Options: - :any:`CONST_MUSCLES_NONE`: Constant to switch off muscles
              - :any:`CONST_MUSCLES_SIMPLE`: Constant to use simple muscles


.. ammr:bm_statement:: BM_TRUNK_LUMBAR_MUSCLES

    Definition of the lumbar spine muscles type.

    :Default: :ammr:bm_statement:`BM_TRUNK_MUSCLES`
    :Example: :anyscript:`#define BM_TRUNK_LUMBAR_MUSCLES BM_TRUNK_MUSCLES`
    :Options: - :any:`BM_TRUNK_MUSCLES`: 
              - :any:`CONST_MUSCLES_NONE`: Constant to switch off muscles
              - :any:`CONST_MUSCLES_SIMPLE`: Constant to use simple muscles


.. ammr:bm_statement:: BM_TRUNK_THORACIC_MUSCLES

    Definition of the thoracic spine muscles type.

    :Default: :ammr:bm_constant:`CONST_MUSCLES_NONE`
    :Example: :anyscript:`#define BM_TRUNK_THORACIC_MUSCLES CONST_MUSCLES_NONE`
    :Options: - :any:`BM_TRUNK_MUSCLES`: 
              - :any:`CONST_MUSCLES_NONE`: Constant to switch off muscles
              - :any:`CONST_MUSCLES_SIMPLE`: Constant to use simple muscles


.. ammr:bm_statement:: BM_TRUNK_CERVICAL_MUSCLES

    Definition of the cervical spine muscles type.

    :Default: :ammr:bm_constant:`CONST_MUSCLES_NONE`
    :Example: :anyscript:`#define BM_TRUNK_CERVICAL_MUSCLES CONST_MUSCLES_NONE`
    :Options: - :any:`BM_TRUNK_MUSCLES`: 
              - :any:`CONST_MUSCLES_NONE`: Constant to switch off muscles
              - :any:`CONST_MUSCLES_SIMPLE`: Constant to use simple muscles


.. ammr:bm_statement:: BM_TRUNK_DISC_STIFNESS

    Definition of the disc model of all spine parts.

    :Default: :ammr:bm_constant:`CONST_DISC_STIFFNESS_LINEAR`
    :Example: :anyscript:`#define BM_TRUNK_DISC_STIFNESS CONST_DISC_STIFFNESS_LINEAR`
    :Options: - :any:`CONST_DISC_STIFFNESS_NONE`: Constant to switch off disc spring in the spine
              - :any:`CONST_DISC_STIFFNESS_LINEAR`: Constant to switch linear disc spring on in the spine
              - :any:`CONST_DISC_STIFFNESS_NONLINEAR`: 


.. ammr:bm_statement:: BM_TRUNK_LUMBAR_DISC_STIFNESS

    Definition of the lumbar spine disc model.

    :Default: :ammr:bm_statement:`BM_TRUNK_DISC_STIFNESS`
    :Example: :anyscript:`#define BM_TRUNK_LUMBAR_DISC_STIFNESS BM_TRUNK_DISC_STIFNESS`
    :Options: - :any:`BM_TRUNK_DISC_STIFNESS`: 
              - :any:`CONST_DISC_STIFFNESS_NONE`: Constant to switch off disc spring in the spine
              - :any:`CONST_DISC_STIFFNESS_LINEAR`: Constant to switch linear disc spring on in the spine
              - :any:`CONST_DISC_STIFFNESS_NONLINEAR`: 


.. ammr:bm_statement:: BM_TRUNK_THORACIC_DISC_STIFNESS

    Definition of the thoracic spine disc model.

    :Default: :ammr:bm_statement:`BM_TRUNK_DISC_STIFNESS`
    :Example: :anyscript:`#define BM_TRUNK_THORACIC_DISC_STIFNESS BM_TRUNK_DISC_STIFNESS`
    :Options: - :any:`BM_TRUNK_DISC_STIFNESS`: 
              - :any:`CONST_DISC_STIFFNESS_NONE`: Constant to switch off disc spring in the spine
              - :any:`CONST_DISC_STIFFNESS_LINEAR`: Constant to switch linear disc spring on in the spine
              - :any:`CONST_DISC_STIFFNESS_NONLINEAR`: 


.. ammr:bm_statement:: BM_TRUNK_CERVICAL_DISC_STIFNESS

    Definition of the cervical spine disc model.

    :Default: :ammr:bm_statement:`BM_TRUNK_DISC_STIFNESS`
    :Example: :anyscript:`#define BM_TRUNK_CERVICAL_DISC_STIFNESS BM_TRUNK_DISC_STIFNESS`
    :Options: - :any:`BM_TRUNK_DISC_STIFNESS`: 
              - :any:`CONST_DISC_STIFFNESS_NONE`: Constant to switch off disc spring in the spine
              - :any:`CONST_DISC_STIFFNESS_LINEAR`: Constant to switch linear disc spring on in the spine
              - :any:`CONST_DISC_STIFFNESS_NONLINEAR`: 


.. ammr:bm_statement:: BM_TRUNK_RHYTHM

    A switch to use a kinematic rhythm for the whole spine.

    :Default: ``ON``
    :Example: :anyscript:`#define BM_TRUNK_RHYTHM ON`
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


.. ammr:bm_statement:: BM_TRUNK_LUMBAR_RHYTHM

    A switch to use a kinematic rhythm for the lumbar spine.

    :Default: :ammr:bm_statement:`BM_TRUNK_RHYTHM`
    :Example: :anyscript:`#define BM_TRUNK_LUMBAR_RHYTHM BM_TRUNK_RHYTHM`

.. ammr:bm_statement:: BM_TRUNK_THORACIC_RHYTHM

    A switch to use a kinematic rhythm for the thoracic spine.

    :Default: :ammr:bm_statement:`BM_TRUNK_RHYTHM`
    :Example: :anyscript:`#define BM_TRUNK_THORACIC_RHYTHM BM_TRUNK_RHYTHM`

.. ammr:bm_statement:: BM_TRUNK_CERVICAL_RHYTHM

    A switch to use a kinematic rhythm for the cervical spine.

    :Default: :ammr:bm_statement:`BM_TRUNK_RHYTHM`
    :Example: :anyscript:`#define BM_TRUNK_CERVICAL_RHYTHM BM_TRUNK_RHYTHM`

.. ammr:bm_statement:: BM_TRUNK_LIGAMENTS

    A switch to control all the ligaments in the spine.

    :Default: ``OFF``
    :Example: :anyscript:`#define BM_TRUNK_LIGAMENTS OFF`
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


.. ammr:bm_statement:: BM_TRUNK_LUMBAR_LIGAMENTS

    A switch to control the lumbar spine ligaments.

    :Default: :ammr:bm_statement:`BM_TRUNK_LIGAMENTS`
    :Example: :anyscript:`#define BM_TRUNK_LUMBAR_LIGAMENTS BM_TRUNK_LIGAMENTS`

.. ammr:bm_statement:: BM_TRUNK_THORACIC_LIGAMENTS

    A switch to control the thoracic spine ligaments.

    :Default: :ammr:bm_statement:`BM_TRUNK_LIGAMENTS`
    :Example: :anyscript:`#define BM_TRUNK_THORACIC_LIGAMENTS BM_TRUNK_LIGAMENTS`

.. ammr:bm_statement:: BM_TRUNK_CERVICAL_LIGAMENTS

    A switch to control the cervical spine ligaments.

    :Default: :ammr:bm_statement:`BM_TRUNK_LIGAMENTS`
    :Example: :anyscript:`#define BM_TRUNK_CERVICAL_LIGAMENTS BM_TRUNK_LIGAMENTS`

.. ammr:bm_statement:: BM_ARM_STRENGTH_INDEX

    Index parameter to specify muscle strength for upper extremities.

    :Default: ``1.0``
    :Example: :anyscript:`#define BM_ARM_STRENGTH_INDEX 1.0`

.. ammr:bm_statement:: BM_ARM_LEFT

    Switch for the left arm model being present or not.

    :Default: ``ON``
    :Example: :anyscript:`#define BM_ARM_LEFT ON`
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


.. ammr:bm_statement:: BM_ARM_DETAIL_HAND_LEFT

    Keyword for the type of left hand.

    :Default: :ammr:bm_constant:`CONST_HAND_SIMPLE`
    :Example: :anyscript:`#define BM_ARM_DETAIL_HAND_LEFT CONST_HAND_SIMPLE`
    :Options: - :any:`CONST_HAND_SIMPLE`: Constant to use simplified hand model
              - :any:`CONST_HAND_DETAILED`: Constant to use detailed hand model


.. ammr:bm_statement:: BM_ARM_SHOULDER_RHYTHM_LEFT

    Switch for the shoulder rhythm constraints for the left arm being present or not.

    :Default: ``OFF``
    :Example: :anyscript:`#define BM_ARM_SHOULDER_RHYTHM_LEFT OFF`
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


.. ammr:bm_statement:: BM_ARM_RIGHT

    Switch for the right arm model being present or not.

    :Default: ``ON``
    :Example: :anyscript:`#define BM_ARM_RIGHT ON`
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


.. ammr:bm_statement:: BM_ARM_DETAIL_HAND_RIGHT

    Keyword for the type of right hand.

    :Default: :ammr:bm_constant:`CONST_HAND_SIMPLE`
    :Example: :anyscript:`#define BM_ARM_DETAIL_HAND_RIGHT CONST_HAND_SIMPLE`
    :Options: - :any:`CONST_HAND_SIMPLE`: Constant to use simplified hand model
              - :any:`CONST_HAND_DETAILED`: Constant to use detailed hand model


.. ammr:bm_statement:: BM_ARM_SHOULDER_RHYTHM_RIGHT

    Switch for the shoulder rhythm constraints for the right arm being present or not.

    :Default: ``OFF``
    :Example: :anyscript:`#define BM_ARM_SHOULDER_RHYTHM_RIGHT OFF`
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


.. ammr:bm_statement:: BM_ARM_MUSCLES_BOTH

    Keyword for the muscle model type for both left and right arms.

    :Default: :ammr:bm_constant:`CONST_MUSCLES_SIMPLE`
    :Example: :anyscript:`#define BM_ARM_MUSCLES_BOTH CONST_MUSCLES_SIMPLE`
    :Options: - :any:`CONST_MUSCLES_NONE`: Constant to switch off muscles
              - :any:`CONST_MUSCLES_SIMPLE`: Constant to use simple muscles
              - :any:`CONST_MUSCLES_3E_HILL`: Constant to use 3 element Hill-type muscle


.. ammr:bm_statement:: BM_ARM_MUSCLES_LEFT

    Keyword for the muscle model type for the left arm.

    :Default: :ammr:bm_statement:`BM_ARM_MUSCLES_BOTH`
    :Example: :anyscript:`#define BM_ARM_MUSCLES_LEFT BM_ARM_MUSCLES_BOTH`
    :Options: - :any:`BM_ARM_MUSCLES_BOTH`: 
              - :any:`CONST_MUSCLES_NONE`: Constant to switch off muscles
              - :any:`CONST_MUSCLES_SIMPLE`: Constant to use simple muscles
              - :any:`CONST_MUSCLES_3E_HILL`: Constant to use 3 element Hill-type muscle


.. ammr:bm_statement:: BM_ARM_MUSCLES_ONLY_ON_NECK_LEFT

    Keyword for the muscle model type for only the left neck muscle.

    :Default: :ammr:bm_constant:`CONST_MUSCLES_NONE`
    :Example: :anyscript:`#define BM_ARM_MUSCLES_ONLY_ON_NECK_LEFT CONST_MUSCLES_NONE`
    :Options: - :any:`CONST_MUSCLES_NONE`: Constant to switch off muscles
              - :any:`CONST_MUSCLES_SIMPLE`: Constant to use simple muscles


.. ammr:bm_statement:: BM_ARM_MUSCLES_RIGHT

    Keyword for the muscle model for the right arm.

    :Default: :ammr:bm_statement:`BM_ARM_MUSCLES_BOTH`
    :Example: :anyscript:`#define BM_ARM_MUSCLES_RIGHT BM_ARM_MUSCLES_BOTH`
    :Options: - :any:`BM_ARM_MUSCLES_BOTH`: 
              - :any:`CONST_MUSCLES_NONE`: Constant to switch off muscles
              - :any:`CONST_MUSCLES_SIMPLE`: Constant to use simple muscles
              - :any:`CONST_MUSCLES_3E_HILL`: Constant to use 3 element Hill-type muscle


.. ammr:bm_statement:: BM_ARM_MUSCLES_ONLY_ON_NECK_RIGHT

    Keyword for the muscle model type for only the right neck muscle.

    :Default: :ammr:bm_constant:`CONST_MUSCLES_NONE`
    :Example: :anyscript:`#define BM_ARM_MUSCLES_ONLY_ON_NECK_RIGHT CONST_MUSCLES_NONE`
    :Options: - :any:`CONST_MUSCLES_NONE`: Constant to switch off muscles
              - :any:`CONST_MUSCLES_SIMPLE`: Constant to use simple muscles


.. ammr:bm_statement:: BM_BONY_LANDMARK_DEFINED_JOINTAXIS

    Keyword to choose the option of the joint axes defintion based on the anatomical landmarks.

    :Default: ``OFF``
    :Example: :anyscript:`#define BM_BONY_LANDMARK_DEFINED_JOINTAXIS OFF`
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


.. ammr:bm_statement:: BM_PELVIS_DISPLAY

    Keyword for pelvis display setting.

    :Default: :ammr:bm_constant:`CONST_PELVIS_DISPLAY_LEGPELVIS_ONLY`
    :Example: :anyscript:`#define BM_PELVIS_DISPLAY CONST_PELVIS_DISPLAY_LEGPELVIS_ONLY`

.. ammr:bm_statement:: BM_MANNEQUIN_FILE

    File name of the mannequin definition file. Default is a file in the body model, but this can be copied to and modified in your model directory.

    :Default: ``"<ANYBODY_PATH_BODY>\BodyModels\GenericBodyModel\BodyModel.mannequin.any"``
    :Example: :anyscript:`#path BM_MANNEQUIN_FILE "<ANYBODY_PATH_BODY>\BodyModels\GenericBodyModel\BodyModel.mannequin.any"`

.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_DEFAULT

    Setting of the default value for all mannequin drivers.

    :Default: ``ON``
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_DEFAULT ON`
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_WEAK_SWITCH

    By default constraint type of mannequin drivers will be soft.

    :Default: ``ON``
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_WEAK_SWITCH ON`
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_INDIVIDUAL_WEIGHTS

    Allows for individual weights if the BM mannequin drivers are soft. Weights are set by assigning the BM_MANNEQUIN_DRIVER_* switches a value instead of ON/OFF.

    :Default: ``OFF``
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_INDIVIDUAL_WEIGHTS OFF`
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


.. ammr:bm_statement:: BM_LEG_TRUNK_INTERFACE

    Keyword for the interface morhping between the trunk and the leg pelvis segments.

    :Default: :ammr:bm_constant:`CONST_MORPH_TRUNK_TO_LEG`
    :Example: :anyscript:`#define BM_LEG_TRUNK_INTERFACE CONST_MORPH_TRUNK_TO_LEG`
    :Options: - :any:`CONST_MORPH_TRUNK_TO_LEG`: Constant for the trunk-to-leg morphing
              - :any:`CONST_MORPH_LEG_TO_TRUNK`: Constant for the leg-to-trunk morhping
              - :any:`CONST_MORPH_NONE`: Constant for no-morphing between the upper and lower bodies.


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_POS_X

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_PELVIS_POS_X BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_POS_Y

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_PELVIS_POS_Y BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_POS_Z

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_PELVIS_POS_Z BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_ROT_Z

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_PELVIS_ROT_Z BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_ROT_Y

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_PELVIS_ROT_Y BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_ROT_X

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_PELVIS_ROT_X BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_NECK

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_NECK BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_THORAX_LATERAL_BENDING

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_PELVIS_THORAX_LATERAL_BENDING BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_THORAX_ROTATION

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_PELVIS_THORAX_ROTATION BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_PELVIS_THORAX_EXTENSION

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_PELVIS_THORAX_EXTENSION BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_RIGHT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_RIGHT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_RIGHT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ELBOW_FLEXION_RIGHT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_ELBOW_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ELBOW_PRONATION_RIGHT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_ELBOW_PRONATION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_WRIST_FLEXION_RIGHT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_WRIST_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_RIGHT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_STERNO_CLAVICULAR_LEFT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_LEFT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_ABDUCTION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_LEFT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_LEFT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_GLENOHUMERAL_EXTERNAL_ROTATION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ELBOW_FLEXION_LEFT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_ELBOW_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ELBOW_PRONATION_LEFT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_ELBOW_PRONATION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_WRIST_FLEXION_LEFT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_WRIST_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_LEFT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_WRIST_ABDUCTION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_HIP_FLEXION_RIGHT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_HIP_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_RIGHT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_HIP_ABDUCTION_RIGHT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_HIP_ABDUCTION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_KNEE_FLEXION_RIGHT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_KNEE_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ANKLE_FLEXION_RIGHT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_ANKLE_FLEXION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_RIGHT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_RIGHT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_RIGHT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_HIP_FLEXION_LEFT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_HIP_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_LEFT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_HIP_EXTERNAL_ROTATION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_HIP_ABDUCTION_LEFT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_HIP_ABDUCTION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_KNEE_FLEXION_LEFT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_KNEE_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ANKLE_FLEXION_LEFT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_ANKLE_FLEXION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_LEFT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_ANKLE_EVERSION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_LEFT

    Switch for the mannequin driver being active or not

    :Default: :ammr:bm_statement:`BM_MANNEQUIN_DRIVER_DEFAULT`
    :Example: :anyscript:`#define BM_MANNEQUIN_DRIVER_ANKLE_SUBTALAR_EVERSION_LEFT BM_MANNEQUIN_DRIVER_DEFAULT`
    :Options: - :any:`BM_MANNEQUIN_DRIVER_DEFAULT`: 
              - :any:`ON`: 
              - :any:`OFF`: 


.. ammr:bm_statement:: BM_GLOBAL_REFERENCE_FRAME_SWITCH

    A switch to use different ref. frame than the default global reference frame

    :Default: ``OFF``
    :Example: :anyscript:`#define BM_GLOBAL_REFERENCE_FRAME_SWITCH OFF`
    :Options: :ammr:bm_constant:`ON`/ :ammr:bm_constant:`OFF`


.. ammr:bm_statement:: BM_GLOBAL_REFERENCE_FRAME

    An object path leading to the selected global reference frame

    :Default: ``..GenericGlobalRefFrame``
    :Example: :anyscript:`#define BM_GLOBAL_REFERENCE_FRAME ..GenericGlobalRefFrame`